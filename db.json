{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/有关Lucene的一些东西001.jpg","path":"images/有关Lucene的一些东西001.jpg","modified":1,"renderable":0},{"_id":"themes/hexo-theme-next-5.1.0/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"b72533970610b3cbda13828dfb513848124975d2","modified":1490325382496},{"_id":"themes/hexo-theme-next-5.1.0/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/_config.yml","hash":"dc783b754cff01d7774b2e59d93eecd0357ac3be","modified":1493259525423},{"_id":"themes/hexo-theme-next-5.1.0/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/gulpfile.coffee","hash":"b00e93c5c8667a4fbed71046dc93ce6784bf6257","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/package.json","hash":"a042faed34835a52505643aa2d841cd2dcf5dff6","modified":1488274097000},{"_id":"source/_posts/Linux日常记录.md","hash":"cfafca74aa0828249faa970d45cabb99bc43766c","modified":1497495753678},{"_id":"source/_posts/Spring容器启动相关.md","hash":"c86e35c35da70addbf8fdb63f08af5efe2287e47","modified":1499150559966},{"_id":"source/_posts/categories.txt","hash":"9f63824aaeb444d0eda416f55c3c813da67cd8c6","modified":1493196248690},{"_id":"source/_posts/grunt安装和使用.md","hash":"71073a5af1b812126481ad72c2bc63869bb7c0f3","modified":1493196261610},{"_id":"source/_posts/eclipse远程debug.md","hash":"7e2078572c38440347fd704cb475e69ce8b70477","modified":1493196254458},{"_id":"source/_posts/java-线程池的使用.md","hash":"478dcbb55e464ace744e39166cc118451d45493d","modified":1491903260065},{"_id":"source/_posts/hexo的一些小问题.md","hash":"8aad381515f05e0f4ff53fdfdc34c1aabe83818d","modified":1493196267683},{"_id":"source/_posts/java内存溢出总结.md","hash":"91f25c30134c58108c86b8f8879c63fc2d7d4b3e","modified":1491902990288},{"_id":"source/_posts/linux下项目环境搭建部署.md","hash":"8fd3a71f0c1e8731d844e84bc1166fd30720ba10","modified":1493196280362},{"_id":"source/_posts/mongodb操作日志.md","hash":"f91d37ce0677b00c4f6904255573defe8a9062cb","modified":1493196284459},{"_id":"source/_posts/spring-IOC-AOP.md","hash":"f86ddd29c47d7cc8ac15c22d2478c8abea6b17b3","modified":1499158193020},{"_id":"source/_posts/spring-data-jpa-查询使用案例.md","hash":"59d3bc93084ffbfc6e96a89e107cec50eeb558ba","modified":1493196288684},{"_id":"source/_posts/spring事务的隔离级别和传播属性.md","hash":"723612d468fd647a5b5c15fc29deb8229e1dbd04","modified":1491903039218},{"_id":"source/_posts/夜行者的伤.md","hash":"b71ab719bb800f9992fca41b2ef504caa9362f5d","modified":1491903162697},{"_id":"source/_posts/原本两个人.md","hash":"9ac3e2918d52039a12a3bd1815ecd190041be093","modified":1491903182402},{"_id":"source/_posts/常用工具.md","hash":"d77ed6dd5153e37f5f36b5c5a43c63f44f86e908","modified":1493196301492},{"_id":"source/_posts/对象拷贝类PropertyUtils，BeanUtils，BeanCopier.md","hash":"8ab5ecaa9beedad98647f5596ff1507028aafc38","modified":1491903063272},{"_id":"source/_posts/念奴娇-桂花.md","hash":"c9512e3eac75a31a22c93e466a6fe88b5eb38499","modified":1491034556296},{"_id":"source/_posts/有关Lucene的一些东西.md","hash":"b81c75441df4f34591909810d28f082808b69571","modified":1493196310067},{"_id":"source/_posts/编码散记.md","hash":"87714de92d520a94862ea6b1f52b981754827993","modified":1493196296467},{"_id":"source/categories/index.md","hash":"c6766f1eec9dd2ca43b8cd9e4e421dc9c1d1c4a5","modified":1490342552223},{"_id":"source/about/index.md","hash":"0e6f46f9b382d492818164e587b2f7f9855fcc2d","modified":1491904658858},{"_id":"source/images/有关Lucene的一些东西001.jpg","hash":"3f5a4e4d139b5e1984aeca4ae6eb0090aaa92d6e","modified":1491894222532},{"_id":"source/tags/index.md","hash":"10756c4ad0bb03a839b085344d562b819659c46a","modified":1490342738920},{"_id":"themes/hexo-theme-next-5.1.0/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/default.yml","hash":"95ec5cdfb563854f231b76162a3494f6ecc5bf61","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/en.yml","hash":"95ec5cdfb563854f231b76162a3494f6ecc5bf61","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/fr-FR.yml","hash":"e98f1558347752a20019b71f0b1f9c8be1b34f42","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/ru.yml","hash":"5022885d8955e1b91d8841048db272bf99c59a76","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/zh-Hans.yml","hash":"40d01dc46d57f71c2ef635c45b295d4355456e90","modified":1490596018739},{"_id":"themes/hexo-theme-next-5.1.0/languages/zh-hk.yml","hash":"19c23d21f262e24c06ee6ddfd51d2a6585304f88","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/languages/zh-tw.yml","hash":"68407799271c78ecc07f03d238257dd8c65ad42d","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_layout.swig","hash":"018749a29cb0552eb96e990fd0765128d6e6476f","modified":1492679511857},{"_id":"themes/hexo-theme-next-5.1.0/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_macro/sidebar.swig","hash":"b57650032ed47b8bd357ec4dcc02d872fdd0e3e1","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_macro/post.swig","hash":"f4422361db24154767915c81ebb5fb1f7e547502","modified":1490584549481},{"_id":"themes/hexo-theme-next-5.1.0/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/comments.swig","hash":"970aa668680896262b1056bb5787fc9ec8754495","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/footer.swig","hash":"a78d214374e28dfb48ea2458517a8726368cdd90","modified":1493027324361},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/search.swig","hash":"7b61e96508df70152b809ea5354236ab7f0d54f4","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/scripts/tags/exturl.js","hash":"79378f3a1cd90518b07808ed09156a3ab55ffa31","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/avatar.png","hash":"bb64403164e455b93a7591697bd66b2d34692417","modified":1469173564953},{"_id":"themes/hexo-theme-next-5.1.0/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/search/localsearch.swig","hash":"741f09b2ba4e440011c15f5d288b109b82c87f1b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/analytics.swig","hash":"e46900412e28f529c26e25e6bada342006435a32","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/comments.swig","hash":"a279e1881208aff2f669fe235e9661ab825bc540","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/localsearch.swig","hash":"ceb39c100c99900294ddee8b1ff81fcaf43873b5","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1493202371383},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_variables/base.styl","hash":"8da626cf14b25d6347db350c43a74b127c50c0bd","modified":1493193155985},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/algolia-search.js","hash":"54ca0acff29a414e2c1b7c1790db22f0c775604c","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/post-details.js","hash":"3b2d64c2e6ae072ba2a9ebf7f09908a1543abd58","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/utils.js","hash":"9ff232a2d39a513b811814480502e3eaac429c52","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/layout/_scripts/third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1493191958407},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1493192600488},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Muse/_layout.styl","hash":"1f24a4256ef777f579255c00c48fca6abbd68368","modified":1493195031058},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Pisces/_layout.styl","hash":"f15537cee1a9ef4fa1e72a1670ebce4097db8115","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1493190556806},{"_id":"themes/hexo-theme-next-5.1.0/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/highlight/highlight.styl","hash":"755b04edbbfbdd981a783edb09c9cc34cb79cea7","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-eof.styl","hash":"31030027e7cede091280e59a038203e6b2e40b23","modified":1493202377495},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/third-party/localsearch.styl","hash":"173490e21bece35a34858e8e534cf86e34561350","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_common/components/tags/tags.styl","hash":"8fe1e55bc290e6aaf07cc644fe27b62107a272a8","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1488274097000},{"_id":"themes/hexo-theme-next-5.1.0/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1488274097000},{"_id":"public/atom.xml","hash":"c9a41bc8c069dc18f5e4619198b6e0617bf865c9","modified":1499158304915},{"_id":"public/search.xml","hash":"cf2cbcfbb648edb41a3dd8ba61c64c366693e2e8","modified":1499158304936},{"_id":"public/categories/index.html","hash":"b5b676dd90a1dae552bca9acfb64c656cc22ef5b","modified":1499158304946},{"_id":"public/about/index.html","hash":"8d73bb028282be6ef14625c95055ff60250eb321","modified":1499158304946},{"_id":"public/tags/index.html","hash":"e2ce8c9f2ddaa1b315e0d19318c557e2a49ebab6","modified":1499158304946},{"_id":"public/2017/07/04/spring-IOC-AOP/index.html","hash":"7945bd6585e399424c0c694a3c60c11b86e9efc8","modified":1499158304946},{"_id":"public/2017/07/04/Spring容器启动相关/index.html","hash":"e600912b4d4869e6d2bbe117d6026d314dc265be","modified":1499158304946},{"_id":"public/2017/04/20/hexo的一些小问题/index.html","hash":"04f97637d5fd99c92bb6f7acf0fb024e87aa27b1","modified":1499158304946},{"_id":"public/2017/04/11/有关Lucene的一些东西/index.html","hash":"15ebdd1f6c15856872a763b9ca7ee68a3c484eb2","modified":1499158304946},{"_id":"public/2017/04/01/编码散记/index.html","hash":"4fa69d6c227c0847a448e956e6694820cba8c66c","modified":1499158304946},{"_id":"public/2017/04/01/念奴娇-桂花/index.html","hash":"1d060e176e46213d317e7a177d8ef7933c0fa971","modified":1499158304946},{"_id":"public/2017/04/01/夜行者的伤/index.html","hash":"03aaa30b6a0dd9831139047a946de3e2b470f9bf","modified":1499158304946},{"_id":"public/2017/04/01/原本两个人/index.html","hash":"a13de7e2ef57628012041250919c62c84ea76e12","modified":1499158304946},{"_id":"public/2017/03/29/linux下项目环境搭建部署/index.html","hash":"b20488b265ab31548e3d9f59f20c224f461e1d1c","modified":1499158304946},{"_id":"public/2017/03/28/常用工具/index.html","hash":"0990ce400393f48d97c445023527b14ec3d2a6e6","modified":1499158304946},{"_id":"public/2017/03/27/Linux日常记录/index.html","hash":"81a35fcf8525e23855d8da6cd3db13ced40212d5","modified":1499158304946},{"_id":"public/2017/03/27/mongodb操作日志/index.html","hash":"425a6276f3f4e957450ed89b78095fbbbfaa39f7","modified":1499158304946},{"_id":"public/2017/03/27/spring-data-jpa-查询使用案例/index.html","hash":"c7f06312bb7404c02decada494d9d3e481895beb","modified":1499158304947},{"_id":"public/2017/03/27/java-线程池的使用/index.html","hash":"9a704fa35748d6301373b1e38a82341ac05c3086","modified":1499158304947},{"_id":"public/2017/03/27/java内存溢出总结/index.html","hash":"7a889ec400416b49c6078fae217752da7d4ea0fe","modified":1499158304947},{"_id":"public/2017/03/27/spring事务的隔离级别和传播属性/index.html","hash":"b71fa9ef8c5b0b8349d79656d69aa97a69b63c87","modified":1499158304947},{"_id":"public/2017/03/27/对象拷贝类PropertyUtils，BeanUtils，BeanCopier/index.html","hash":"d8f7ba129cdb937215960c8f504525f5f8926982","modified":1499158304947},{"_id":"public/2017/03/27/grunt安装和使用/index.html","hash":"1be871529537ea947b9ba90f8d83efe943797643","modified":1499158304947},{"_id":"public/2017/03/27/eclipse远程debug/index.html","hash":"b1e5dcf717c3f80638e2e35b766d862f9c180ab6","modified":1499158304947},{"_id":"public/archives/index.html","hash":"010232648c204cdd7b409c1e53204224e9309ae9","modified":1499158304947},{"_id":"public/archives/page/2/index.html","hash":"c0f7c258154ddb2407d8be7e8a3289990b7ad084","modified":1499158304947},{"_id":"public/archives/2017/index.html","hash":"9e1cae2e1a3e60b3e02e41b4a14164e7316250f5","modified":1499158304947},{"_id":"public/archives/2017/page/2/index.html","hash":"c1c559029c02ccd98b333fb0a113e6ece7cbb6df","modified":1499158304947},{"_id":"public/archives/2017/03/index.html","hash":"939ed14bc8fba30de4260a47a60cf365428a0f0b","modified":1499158304947},{"_id":"public/archives/2017/03/page/2/index.html","hash":"5ccde4d1cad9727210782df1f85c0d7c195b97d0","modified":1499158304947},{"_id":"public/archives/2017/04/index.html","hash":"97355adb0be399bc4da201c74d7efff6925ef3c9","modified":1499158304947},{"_id":"public/archives/2017/07/index.html","hash":"3adf36750b8a0535118663a0d2169c70ba2bbd5b","modified":1499158304948},{"_id":"public/categories/技术/index.html","hash":"6146992f79228afceb6ca8fb313330b212abc732","modified":1499158304948},{"_id":"public/categories/技术/page/2/index.html","hash":"5d96f7ea5e94e2d9026a7b3521828bd2df28e0e8","modified":1499158304948},{"_id":"public/categories/文艺/index.html","hash":"fcafbbe5e8abf1e518639e93c2f73705d3def824","modified":1499158304948},{"_id":"public/categories/其他/index.html","hash":"c76625d80b081b4bb6820f35402f0ece9246f554","modified":1499158304948},{"_id":"public/index.html","hash":"b1b133d5d2f9fe5076ecc4e758ad1b1e9adae5e7","modified":1499158304948},{"_id":"public/page/2/index.html","hash":"a751a3b82d4f72732b0b9cc2c07b7e1ccfe69840","modified":1499158304948},{"_id":"public/tags/spring/index.html","hash":"e87fd113a0ee62214a34be1df85f81e18741574a","modified":1499158304948},{"_id":"public/tags/java/index.html","hash":"678f04e726efa76811ef748669e666080c8e223f","modified":1499158304948},{"_id":"public/tags/gtunt/index.html","hash":"195584d57cb220fe23cc73e1a5127680fa808a2f","modified":1499158304948},{"_id":"public/tags/eclipse/index.html","hash":"e8e9f5cf52ccd7a0816004aa2be04b47353f1b39","modified":1499158304948},{"_id":"public/tags/线程池/index.html","hash":"8d87ebf2f60bc4b1fa7b68f49e1fcee7096a98ab","modified":1499158304948},{"_id":"public/tags/hexo/index.html","hash":"2233d0ba83d9986e45505a1f360d32e6f9db0c8e","modified":1499158304948},{"_id":"public/tags/linux/index.html","hash":"0f99055ba8cfd7a96d1f8050c6771f9d0ec4954d","modified":1499158304948},{"_id":"public/tags/mongodb/index.html","hash":"6399801dc2ae7568f4c244710bb902aa213328fe","modified":1499158304948},{"_id":"public/tags/nosql/index.html","hash":"e565f5eee815134fe4959a3521cdfb2da43a4b7d","modified":1499158304949},{"_id":"public/tags/spring-data-jpa/index.html","hash":"835852deaf9e82b00a07ea76dd538437aee90a4e","modified":1499158304949},{"_id":"public/tags/事务/index.html","hash":"82d380b8d335971203fd63a6983bc34a1747f3aa","modified":1499158304949},{"_id":"public/tags/现代诗/index.html","hash":"cf1914a688959745f50d8cda48b5127effd2180d","modified":1499158304949},{"_id":"public/tags/其他/index.html","hash":"e43279d984ee68aed58bc014f87e6842694b76c7","modified":1499158304949},{"_id":"public/tags/反射/index.html","hash":"42dee039e8ec5cb3133419e0aee0d846ae5d7d32","modified":1499158304949},{"_id":"public/tags/古诗词/index.html","hash":"914371907b6e30617133950df465a4031e07eae4","modified":1499158304949},{"_id":"public/tags/Lucene/index.html","hash":"0b5d20531dfd932fbac32598a29c9841a5c69995","modified":1499158304949},{"_id":"public/CNAME","hash":"b72533970610b3cbda13828dfb513848124975d2","modified":1499158304973},{"_id":"public/images/有关Lucene的一些东西001.jpg","hash":"3f5a4e4d139b5e1984aeca4ae6eb0090aaa92d6e","modified":1499158304973},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1499158304973},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1499158304973},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1499158304973},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1499158304973},{"_id":"public/images/avatar.png","hash":"bb64403164e455b93a7591697bd66b2d34692417","modified":1499158304973},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1499158304973},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1499158304973},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1499158304973},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1499158304973},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1499158304973},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1499158304973},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1499158304974},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1499158304974},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1499158304974},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1499158304974},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1499158304974},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1499158304974},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1499158304974},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1499158304974},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1499158304974},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1499158304974},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1499158304974},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1499158304974},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1499158304974},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1499158304975},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1499158305702},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1499158305708},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1499158305711},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1499158305711},{"_id":"public/js/src/algolia-search.js","hash":"54ca0acff29a414e2c1b7c1790db22f0c775604c","modified":1499158305717},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1499158305717},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1499158305717},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1499158305717},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1499158305717},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1499158305717},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1499158305717},{"_id":"public/js/src/post-details.js","hash":"3b2d64c2e6ae072ba2a9ebf7f09908a1543abd58","modified":1499158305717},{"_id":"public/js/src/utils.js","hash":"9ff232a2d39a513b811814480502e3eaac429c52","modified":1499158305717},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1499158305717},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1499158305718},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1499158305718},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1499158305718},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1499158305718},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1499158305718},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1499158305718},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1499158305718},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1499158305718},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1499158305718},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1499158305718},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1499158305718},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1499158305718},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1499158305718},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1499158305718},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1499158305718},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1499158305718},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1499158305718},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1499158305718},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1499158305718},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1499158305719},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1499158305719},{"_id":"public/css/main.css","hash":"fcb39c541f8c72c338ac1595366ffef08358d451","modified":1499158305719},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1499158305719},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1499158305719},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1499158305719},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1499158305719},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1499158305719},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1499158305719},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1499158305719},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1499158305719},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1499158305720},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1499158305720},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1499158305720},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1499158305734}],"Category":[{"name":"技术","_id":"cj4pc59440004coqhl8hni5s7"},{"name":"文艺","_id":"cj4pc59550011coqho8nhqvwj"},{"name":"其他","_id":"cj4pc595j001icoqh13uaed7d"}],"Data":[],"Page":[{"title":"分类","date":"2017-03-24T08:01:13.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-03-24 16:01:13\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-03-24T08:02:32.223Z","path":"categories/index.html","layout":"page","_id":"cj4pc593y0001coqhj8rsuvlo","content":"","excerpt":"","more":""},{"title":"","date":"2017-03-24T08:15:25.000Z","comments":0,"_content":"\n90后,java,喜欢敲代码,喜欢折腾,一枚稍微有那么一点点文艺气息的程序猿.写的都是个人拙见,欢迎交流指正.\n","source":"about/index.md","raw":"---\ntitle: \ndate: 2017-03-24 16:15:25\ncomments: false\n---\n\n90后,java,喜欢敲代码,喜欢折腾,一枚稍微有那么一点点文艺气息的程序猿.写的都是个人拙见,欢迎交流指正.\n","updated":"2017-04-11T09:57:38.858Z","path":"about/index.html","layout":"page","_id":"cj4pc59420003coqhfadz2nhp","content":"<p>90后,java,喜欢敲代码,喜欢折腾,一枚稍微有那么一点点文艺气息的程序猿.写的都是个人拙见,欢迎交流指正.</p>\n","excerpt":"","more":"<p>90后,java,喜欢敲代码,喜欢折腾,一枚稍微有那么一点点文艺气息的程序猿.写的都是个人拙见,欢迎交流指正.</p>\n"},{"title":"标签","date":"2017-03-24T08:04:52.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-03-24 16:04:52\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-03-24T08:05:38.920Z","path":"tags/index.html","layout":"page","_id":"cj4pc594a0007coqhnzc55hrf","content":"","excerpt":"","more":""}],"Post":[{"title":"Spring容器启动相关","date":"2017-07-04T06:21:55.000Z","_content":"\n前几天去面试,被问到spring容器的启动,发现是我的盲区,回来赶紧填坑.\n## 手动启动IOC\n```java\nClassPathResource resource = new ClassPathResource(\"bean.xml\");  \nDefaultListableBeanFactory factory = new DefaultListableBeanFactory();  \nXmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory);  \nreader.loadBeanDefinitions(resource);  \n```\n<!-- more --> \n第一行代码：ClassPathResource的作用是起到了资源定位的作用。通常情况下，spring的配置信息使用文件来描述，通过这样一行代码，指明了需要加载的资源的位置，并且使用Spring能够理解的Resource接口的形式将资源描述出来。\n第二行代码：DefaultListableBeanFactory是一个纯粹的IoC容器类，它是这个Spring的一个基础的IoC容器类，其他的一个IoC容器都是以这个类为基础进行扩展的。这样代码只是定义了一个IoC容器，它不具有任何其他的能力。\n第三行代码：XmlBeanDefinitionReader是一个配置文件读取器。它实现了BeanDefinitionReader接口，它能够按照Spring配置文件，将其中的配置信息转换为spring内部可以识别的信息（BeanDefinition）。注意，在这里它的构造函数需要一个BeanDefinitionRegistry类型的参数，BeanDefinitionRegistry接口提供了一个回调函数，通过这个回调函数可以向IoC容器注册bean的定义信息。DefaultListableBeanFactory实现了这个接口。\n第四行代码：调用loadeBeanDefinitions方法，通过给定的Resource资源，从中读取出spring的配置信息，转换为BeanDefinition，然后再调用BeanDefinitionRegistry的回调函数进行注册。\n通过以上的四行代码，完成了spring容器的启动。\n\n## 容器启动过程\n1. 定位\n在spring中，使用统一的资源表现方式Resource。根据不同的情况进行不同的选择。上述程序中，采用了编程式的资源定位方法，使用ClassPathResource定位位于classpath下的资源文件。\n2. 加载\n在加载这个过程中，主要工作是读取spring配置文件，解析配置文件中的内容，将这些信息转换成为Spring内容可以理解、使用的BeanDefinition。\n3. 注册\n加载过配置文件后，就将BeanDefinition信息注册到BeanDefinitionRegistry中，通常情况下Spring容器的实现类都实现这个接口。\n\n## 资源加载实现\n直接上XmlBeanDefinitionReader中的loadBeanDefinitions方法的实现\n```java\npublic int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {  \n        Assert.notNull(encodedResource, \"EncodedResource must not be null\");  \n        if (logger.isInfoEnabled()) {  \n            logger.info(\"Loading XML bean definitions from \" + encodedResource.getResource());  \n        }  \n        Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get();  \n        if (currentResources == null) {  \n            currentResources = new HashSet<EncodedResource>(4);  \n            this.resourcesCurrentlyBeingLoaded.set(currentResources);  \n        }  \n        if (!currentResources.add(encodedResource)) {  \n            throw new BeanDefinitionStoreException(  \n                    \"Detected cyclic loading of \" + encodedResource + \" - check your import definitions!\");  \n        }  \n        try {  \n            InputStream inputStream = encodedResource.getResource().getInputStream();  \n            try {  \n                InputSource inputSource = new InputSource(inputStream);  \n                if (encodedResource.getEncoding() != null) {  \n                    inputSource.setEncoding(encodedResource.getEncoding());  \n                }  \n                return doLoadBeanDefinitions(inputSource, encodedResource.getResource());  \n            }  \n            finally {  \n                inputStream.close();  \n            }  \n        }  \n        catch (IOException ex) {  \n            throw new BeanDefinitionStoreException(  \n                    \"IOException parsing XML document from \" + encodedResource.getResource(), ex);  \n        }  \n        finally {  \n            currentResources.remove(encodedResource);  \n            if (currentResources.isEmpty()) {  \n                this.resourcesCurrentlyBeingLoaded.set(null);  \n            }  \n        }  \n    }  \n```","source":"_posts/Spring容器启动相关.md","raw":"---\ntitle: Spring容器启动相关\ndate: 2017-07-04 14:21:55\ntags: [spring,java]\ncategories: 技术\n---\n\n前几天去面试,被问到spring容器的启动,发现是我的盲区,回来赶紧填坑.\n## 手动启动IOC\n```java\nClassPathResource resource = new ClassPathResource(\"bean.xml\");  \nDefaultListableBeanFactory factory = new DefaultListableBeanFactory();  \nXmlBeanDefinitionReader reader = new XmlBeanDefinitionReader(factory);  \nreader.loadBeanDefinitions(resource);  \n```\n<!-- more --> \n第一行代码：ClassPathResource的作用是起到了资源定位的作用。通常情况下，spring的配置信息使用文件来描述，通过这样一行代码，指明了需要加载的资源的位置，并且使用Spring能够理解的Resource接口的形式将资源描述出来。\n第二行代码：DefaultListableBeanFactory是一个纯粹的IoC容器类，它是这个Spring的一个基础的IoC容器类，其他的一个IoC容器都是以这个类为基础进行扩展的。这样代码只是定义了一个IoC容器，它不具有任何其他的能力。\n第三行代码：XmlBeanDefinitionReader是一个配置文件读取器。它实现了BeanDefinitionReader接口，它能够按照Spring配置文件，将其中的配置信息转换为spring内部可以识别的信息（BeanDefinition）。注意，在这里它的构造函数需要一个BeanDefinitionRegistry类型的参数，BeanDefinitionRegistry接口提供了一个回调函数，通过这个回调函数可以向IoC容器注册bean的定义信息。DefaultListableBeanFactory实现了这个接口。\n第四行代码：调用loadeBeanDefinitions方法，通过给定的Resource资源，从中读取出spring的配置信息，转换为BeanDefinition，然后再调用BeanDefinitionRegistry的回调函数进行注册。\n通过以上的四行代码，完成了spring容器的启动。\n\n## 容器启动过程\n1. 定位\n在spring中，使用统一的资源表现方式Resource。根据不同的情况进行不同的选择。上述程序中，采用了编程式的资源定位方法，使用ClassPathResource定位位于classpath下的资源文件。\n2. 加载\n在加载这个过程中，主要工作是读取spring配置文件，解析配置文件中的内容，将这些信息转换成为Spring内容可以理解、使用的BeanDefinition。\n3. 注册\n加载过配置文件后，就将BeanDefinition信息注册到BeanDefinitionRegistry中，通常情况下Spring容器的实现类都实现这个接口。\n\n## 资源加载实现\n直接上XmlBeanDefinitionReader中的loadBeanDefinitions方法的实现\n```java\npublic int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {  \n        Assert.notNull(encodedResource, \"EncodedResource must not be null\");  \n        if (logger.isInfoEnabled()) {  \n            logger.info(\"Loading XML bean definitions from \" + encodedResource.getResource());  \n        }  \n        Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get();  \n        if (currentResources == null) {  \n            currentResources = new HashSet<EncodedResource>(4);  \n            this.resourcesCurrentlyBeingLoaded.set(currentResources);  \n        }  \n        if (!currentResources.add(encodedResource)) {  \n            throw new BeanDefinitionStoreException(  \n                    \"Detected cyclic loading of \" + encodedResource + \" - check your import definitions!\");  \n        }  \n        try {  \n            InputStream inputStream = encodedResource.getResource().getInputStream();  \n            try {  \n                InputSource inputSource = new InputSource(inputStream);  \n                if (encodedResource.getEncoding() != null) {  \n                    inputSource.setEncoding(encodedResource.getEncoding());  \n                }  \n                return doLoadBeanDefinitions(inputSource, encodedResource.getResource());  \n            }  \n            finally {  \n                inputStream.close();  \n            }  \n        }  \n        catch (IOException ex) {  \n            throw new BeanDefinitionStoreException(  \n                    \"IOException parsing XML document from \" + encodedResource.getResource(), ex);  \n        }  \n        finally {  \n            currentResources.remove(encodedResource);  \n            if (currentResources.isEmpty()) {  \n                this.resourcesCurrentlyBeingLoaded.set(null);  \n            }  \n        }  \n    }  \n```","slug":"Spring容器启动相关","published":1,"updated":"2017-07-04T06:42:39.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc593t0000coqhv9h2gprx","content":"<p>前几天去面试,被问到spring容器的启动,发现是我的盲区,回来赶紧填坑.</p>\n<h2 id=\"手动启动IOC\"><a href=\"#手动启动IOC\" class=\"headerlink\" title=\"手动启动IOC\"></a>手动启动IOC</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ClassPathResource resource = <span class=\"keyword\">new</span> ClassPathResource(<span class=\"string\">\"bean.xml\"</span>);  </div><div class=\"line\">DefaultListableBeanFactory factory = <span class=\"keyword\">new</span> DefaultListableBeanFactory();  </div><div class=\"line\">XmlBeanDefinitionReader reader = <span class=\"keyword\">new</span> XmlBeanDefinitionReader(factory);  </div><div class=\"line\">reader.loadBeanDefinitions(resource);</div></pre></td></tr></table></figure>\n<a id=\"more\"></a> \n<p>第一行代码：ClassPathResource的作用是起到了资源定位的作用。通常情况下，spring的配置信息使用文件来描述，通过这样一行代码，指明了需要加载的资源的位置，并且使用Spring能够理解的Resource接口的形式将资源描述出来。<br>第二行代码：DefaultListableBeanFactory是一个纯粹的IoC容器类，它是这个Spring的一个基础的IoC容器类，其他的一个IoC容器都是以这个类为基础进行扩展的。这样代码只是定义了一个IoC容器，它不具有任何其他的能力。<br>第三行代码：XmlBeanDefinitionReader是一个配置文件读取器。它实现了BeanDefinitionReader接口，它能够按照Spring配置文件，将其中的配置信息转换为spring内部可以识别的信息（BeanDefinition）。注意，在这里它的构造函数需要一个BeanDefinitionRegistry类型的参数，BeanDefinitionRegistry接口提供了一个回调函数，通过这个回调函数可以向IoC容器注册bean的定义信息。DefaultListableBeanFactory实现了这个接口。<br>第四行代码：调用loadeBeanDefinitions方法，通过给定的Resource资源，从中读取出spring的配置信息，转换为BeanDefinition，然后再调用BeanDefinitionRegistry的回调函数进行注册。<br>通过以上的四行代码，完成了spring容器的启动。</p>\n<h2 id=\"容器启动过程\"><a href=\"#容器启动过程\" class=\"headerlink\" title=\"容器启动过程\"></a>容器启动过程</h2><ol>\n<li>定位<br>在spring中，使用统一的资源表现方式Resource。根据不同的情况进行不同的选择。上述程序中，采用了编程式的资源定位方法，使用ClassPathResource定位位于classpath下的资源文件。</li>\n<li>加载<br>在加载这个过程中，主要工作是读取spring配置文件，解析配置文件中的内容，将这些信息转换成为Spring内容可以理解、使用的BeanDefinition。</li>\n<li>注册<br>加载过配置文件后，就将BeanDefinition信息注册到BeanDefinitionRegistry中，通常情况下Spring容器的实现类都实现这个接口。</li>\n</ol>\n<h2 id=\"资源加载实现\"><a href=\"#资源加载实现\" class=\"headerlink\" title=\"资源加载实现\"></a>资源加载实现</h2><p>直接上XmlBeanDefinitionReader中的loadBeanDefinitions方法的实现<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">loadBeanDefinitions</span><span class=\"params\">(EncodedResource encodedResource)</span> <span class=\"keyword\">throws</span> BeanDefinitionStoreException </span>&#123;  </div><div class=\"line\">        Assert.notNull(encodedResource, <span class=\"string\">\"EncodedResource must not be null\"</span>);  </div><div class=\"line\">        <span class=\"keyword\">if</span> (logger.isInfoEnabled()) &#123;  </div><div class=\"line\">            logger.info(<span class=\"string\">\"Loading XML bean definitions from \"</span> + encodedResource.getResource());  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        Set&lt;EncodedResource&gt; currentResources = <span class=\"keyword\">this</span>.resourcesCurrentlyBeingLoaded.get();  </div><div class=\"line\">        <span class=\"keyword\">if</span> (currentResources == <span class=\"keyword\">null</span>) &#123;  </div><div class=\"line\">            currentResources = <span class=\"keyword\">new</span> HashSet&lt;EncodedResource&gt;(<span class=\"number\">4</span>);  </div><div class=\"line\">            <span class=\"keyword\">this</span>.resourcesCurrentlyBeingLoaded.set(currentResources);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        <span class=\"keyword\">if</span> (!currentResources.add(encodedResource)) &#123;  </div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BeanDefinitionStoreException(  </div><div class=\"line\">                    <span class=\"string\">\"Detected cyclic loading of \"</span> + encodedResource + <span class=\"string\">\" - check your import definitions!\"</span>);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;  </div><div class=\"line\">            InputStream inputStream = encodedResource.getResource().getInputStream();  </div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;  </div><div class=\"line\">                InputSource inputSource = <span class=\"keyword\">new</span> InputSource(inputStream);  </div><div class=\"line\">                <span class=\"keyword\">if</span> (encodedResource.getEncoding() != <span class=\"keyword\">null</span>) &#123;  </div><div class=\"line\">                    inputSource.setEncoding(encodedResource.getEncoding());  </div><div class=\"line\">                &#125;  </div><div class=\"line\">                <span class=\"keyword\">return</span> doLoadBeanDefinitions(inputSource, encodedResource.getResource());  </div><div class=\"line\">            &#125;  </div><div class=\"line\">            <span class=\"keyword\">finally</span> &#123;  </div><div class=\"line\">                inputStream.close();  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        <span class=\"keyword\">catch</span> (IOException ex) &#123;  </div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BeanDefinitionStoreException(  </div><div class=\"line\">                    <span class=\"string\">\"IOException parsing XML document from \"</span> + encodedResource.getResource(), ex);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        <span class=\"keyword\">finally</span> &#123;  </div><div class=\"line\">            currentResources.remove(encodedResource);  </div><div class=\"line\">            <span class=\"keyword\">if</span> (currentResources.isEmpty()) &#123;  </div><div class=\"line\">                <span class=\"keyword\">this</span>.resourcesCurrentlyBeingLoaded.set(<span class=\"keyword\">null</span>);  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>前几天去面试,被问到spring容器的启动,发现是我的盲区,回来赶紧填坑.</p>\n<h2 id=\"手动启动IOC\"><a href=\"#手动启动IOC\" class=\"headerlink\" title=\"手动启动IOC\"></a>手动启动IOC</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">ClassPathResource resource = <span class=\"keyword\">new</span> ClassPathResource(<span class=\"string\">\"bean.xml\"</span>);  </div><div class=\"line\">DefaultListableBeanFactory factory = <span class=\"keyword\">new</span> DefaultListableBeanFactory();  </div><div class=\"line\">XmlBeanDefinitionReader reader = <span class=\"keyword\">new</span> XmlBeanDefinitionReader(factory);  </div><div class=\"line\">reader.loadBeanDefinitions(resource);</div></pre></td></tr></table></figure>","more":"<p>第一行代码：ClassPathResource的作用是起到了资源定位的作用。通常情况下，spring的配置信息使用文件来描述，通过这样一行代码，指明了需要加载的资源的位置，并且使用Spring能够理解的Resource接口的形式将资源描述出来。<br>第二行代码：DefaultListableBeanFactory是一个纯粹的IoC容器类，它是这个Spring的一个基础的IoC容器类，其他的一个IoC容器都是以这个类为基础进行扩展的。这样代码只是定义了一个IoC容器，它不具有任何其他的能力。<br>第三行代码：XmlBeanDefinitionReader是一个配置文件读取器。它实现了BeanDefinitionReader接口，它能够按照Spring配置文件，将其中的配置信息转换为spring内部可以识别的信息（BeanDefinition）。注意，在这里它的构造函数需要一个BeanDefinitionRegistry类型的参数，BeanDefinitionRegistry接口提供了一个回调函数，通过这个回调函数可以向IoC容器注册bean的定义信息。DefaultListableBeanFactory实现了这个接口。<br>第四行代码：调用loadeBeanDefinitions方法，通过给定的Resource资源，从中读取出spring的配置信息，转换为BeanDefinition，然后再调用BeanDefinitionRegistry的回调函数进行注册。<br>通过以上的四行代码，完成了spring容器的启动。</p>\n<h2 id=\"容器启动过程\"><a href=\"#容器启动过程\" class=\"headerlink\" title=\"容器启动过程\"></a>容器启动过程</h2><ol>\n<li>定位<br>在spring中，使用统一的资源表现方式Resource。根据不同的情况进行不同的选择。上述程序中，采用了编程式的资源定位方法，使用ClassPathResource定位位于classpath下的资源文件。</li>\n<li>加载<br>在加载这个过程中，主要工作是读取spring配置文件，解析配置文件中的内容，将这些信息转换成为Spring内容可以理解、使用的BeanDefinition。</li>\n<li>注册<br>加载过配置文件后，就将BeanDefinition信息注册到BeanDefinitionRegistry中，通常情况下Spring容器的实现类都实现这个接口。</li>\n</ol>\n<h2 id=\"资源加载实现\"><a href=\"#资源加载实现\" class=\"headerlink\" title=\"资源加载实现\"></a>资源加载实现</h2><p>直接上XmlBeanDefinitionReader中的loadBeanDefinitions方法的实现<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">loadBeanDefinitions</span><span class=\"params\">(EncodedResource encodedResource)</span> <span class=\"keyword\">throws</span> BeanDefinitionStoreException </span>&#123;  </div><div class=\"line\">        Assert.notNull(encodedResource, <span class=\"string\">\"EncodedResource must not be null\"</span>);  </div><div class=\"line\">        <span class=\"keyword\">if</span> (logger.isInfoEnabled()) &#123;  </div><div class=\"line\">            logger.info(<span class=\"string\">\"Loading XML bean definitions from \"</span> + encodedResource.getResource());  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        Set&lt;EncodedResource&gt; currentResources = <span class=\"keyword\">this</span>.resourcesCurrentlyBeingLoaded.get();  </div><div class=\"line\">        <span class=\"keyword\">if</span> (currentResources == <span class=\"keyword\">null</span>) &#123;  </div><div class=\"line\">            currentResources = <span class=\"keyword\">new</span> HashSet&lt;EncodedResource&gt;(<span class=\"number\">4</span>);  </div><div class=\"line\">            <span class=\"keyword\">this</span>.resourcesCurrentlyBeingLoaded.set(currentResources);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        <span class=\"keyword\">if</span> (!currentResources.add(encodedResource)) &#123;  </div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BeanDefinitionStoreException(  </div><div class=\"line\">                    <span class=\"string\">\"Detected cyclic loading of \"</span> + encodedResource + <span class=\"string\">\" - check your import definitions!\"</span>);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        <span class=\"keyword\">try</span> &#123;  </div><div class=\"line\">            InputStream inputStream = encodedResource.getResource().getInputStream();  </div><div class=\"line\">            <span class=\"keyword\">try</span> &#123;  </div><div class=\"line\">                InputSource inputSource = <span class=\"keyword\">new</span> InputSource(inputStream);  </div><div class=\"line\">                <span class=\"keyword\">if</span> (encodedResource.getEncoding() != <span class=\"keyword\">null</span>) &#123;  </div><div class=\"line\">                    inputSource.setEncoding(encodedResource.getEncoding());  </div><div class=\"line\">                &#125;  </div><div class=\"line\">                <span class=\"keyword\">return</span> doLoadBeanDefinitions(inputSource, encodedResource.getResource());  </div><div class=\"line\">            &#125;  </div><div class=\"line\">            <span class=\"keyword\">finally</span> &#123;  </div><div class=\"line\">                inputStream.close();  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        <span class=\"keyword\">catch</span> (IOException ex) &#123;  </div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> BeanDefinitionStoreException(  </div><div class=\"line\">                    <span class=\"string\">\"IOException parsing XML document from \"</span> + encodedResource.getResource(), ex);  </div><div class=\"line\">        &#125;  </div><div class=\"line\">        <span class=\"keyword\">finally</span> &#123;  </div><div class=\"line\">            currentResources.remove(encodedResource);  </div><div class=\"line\">            <span class=\"keyword\">if</span> (currentResources.isEmpty()) &#123;  </div><div class=\"line\">                <span class=\"keyword\">this</span>.resourcesCurrentlyBeingLoaded.set(<span class=\"keyword\">null</span>);  </div><div class=\"line\">            &#125;  </div><div class=\"line\">        &#125;  </div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>"},{"title":"grunt安装和使用","date":"2017-03-27T07:23:15.000Z","_content":"## 安装grunt\n\nGrunt运行离不开NodeJS和NPM。因此要使用Grunt首要的条件，你的系统需要安装NodeJS和NPM。\n<!-- more --> \n\n> * 安装NodeJS\n\nnode安装的方法很多，如果是wiondow系统,可以直接进入Nodejs官网中下载各系统所需要的安装包进行安装。\n\n> * 安装NPM\n\n装好NodeJS后，可以在你的终端执行下面的命令安装NPM:\n\ncurl http://npmjs.org/install.sh | sh\n\n如果这样安装失败，或许你要在上面的命令之前加上sudo，并按提示输入你的用户密码。\n\n如果需要检验安装NodeJS或NPM是否要成功，可以通过下面的命令来检验：\n\n$ node -v\n\nv0.10.13\n\n$ npm -v\n\n1.3.2\n\n这样你的NodeJS和NPM表示安装成功。\n\n> * 安装CLI\n\n为了方便使用Grunt，你应该在全局范围内安装Grunt的命令行接口(CLI)。在命令行中执行：\n\n$ npm install -g grunt-cli\n\n这条命令将会把grunt命令植入到你的系统路径中，这样就允许你从任意目录中运行Grunt(定位到任意目录运行grunt命令)\n\n> * 运行grunt\n\n进入到Gruntfile.js的目录,在命令行执行：\n\n$ npm install\n\n等待命令执行后，再执行:\n\n$ grunt\n\n即可把要压缩处理的文件处理到Gruntfile.js配置的目录\n\n前端开发同学在开发过程中不需要每次都运行上面的grunt命令，可以在命令行运行一个：\n\n$ grunt dev\n\n即可时时监听修改过的文件。\n\n## 不能运行npm install时,运行下面的命令...\n\n1.通过config命令\n\nnpm config set registry https://registry.npm.taobao.org  npm info underscore （如果上面配置正确这个命令会有字符串response）\n\n2.命令行指定\n\nnpm --registry https://registry.npm.taobao.org info underscore\n\n3.编辑~/.npmrc加入下面内容\n\nregistry = https://registry.npm.taobao.org\n\nnpm可能是默认的proxy http://127.0.0.1.8087\n\n$ npm config set proxy null\n\n把代理去掉就行了","source":"_posts/grunt安装和使用.md","raw":"---\ntitle: grunt安装和使用\ndate: 2017-03-27 15:23:15\ntags: gtunt\ncategories: 技术\n---\n## 安装grunt\n\nGrunt运行离不开NodeJS和NPM。因此要使用Grunt首要的条件，你的系统需要安装NodeJS和NPM。\n<!-- more --> \n\n> * 安装NodeJS\n\nnode安装的方法很多，如果是wiondow系统,可以直接进入Nodejs官网中下载各系统所需要的安装包进行安装。\n\n> * 安装NPM\n\n装好NodeJS后，可以在你的终端执行下面的命令安装NPM:\n\ncurl http://npmjs.org/install.sh | sh\n\n如果这样安装失败，或许你要在上面的命令之前加上sudo，并按提示输入你的用户密码。\n\n如果需要检验安装NodeJS或NPM是否要成功，可以通过下面的命令来检验：\n\n$ node -v\n\nv0.10.13\n\n$ npm -v\n\n1.3.2\n\n这样你的NodeJS和NPM表示安装成功。\n\n> * 安装CLI\n\n为了方便使用Grunt，你应该在全局范围内安装Grunt的命令行接口(CLI)。在命令行中执行：\n\n$ npm install -g grunt-cli\n\n这条命令将会把grunt命令植入到你的系统路径中，这样就允许你从任意目录中运行Grunt(定位到任意目录运行grunt命令)\n\n> * 运行grunt\n\n进入到Gruntfile.js的目录,在命令行执行：\n\n$ npm install\n\n等待命令执行后，再执行:\n\n$ grunt\n\n即可把要压缩处理的文件处理到Gruntfile.js配置的目录\n\n前端开发同学在开发过程中不需要每次都运行上面的grunt命令，可以在命令行运行一个：\n\n$ grunt dev\n\n即可时时监听修改过的文件。\n\n## 不能运行npm install时,运行下面的命令...\n\n1.通过config命令\n\nnpm config set registry https://registry.npm.taobao.org  npm info underscore （如果上面配置正确这个命令会有字符串response）\n\n2.命令行指定\n\nnpm --registry https://registry.npm.taobao.org info underscore\n\n3.编辑~/.npmrc加入下面内容\n\nregistry = https://registry.npm.taobao.org\n\nnpm可能是默认的proxy http://127.0.0.1.8087\n\n$ npm config set proxy null\n\n把代理去掉就行了","slug":"grunt安装和使用","published":1,"updated":"2017-04-26T08:44:21.610Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc593z0002coqh35ihfisu","content":"<h2 id=\"安装grunt\"><a href=\"#安装grunt\" class=\"headerlink\" title=\"安装grunt\"></a>安装grunt</h2><p>Grunt运行离不开NodeJS和NPM。因此要使用Grunt首要的条件，你的系统需要安装NodeJS和NPM。<br><a id=\"more\"></a> </p>\n<blockquote>\n<ul>\n<li>安装NodeJS</li>\n</ul>\n</blockquote>\n<p>node安装的方法很多，如果是wiondow系统,可以直接进入Nodejs官网中下载各系统所需要的安装包进行安装。</p>\n<blockquote>\n<ul>\n<li>安装NPM</li>\n</ul>\n</blockquote>\n<p>装好NodeJS后，可以在你的终端执行下面的命令安装NPM:</p>\n<p>curl <a href=\"http://npmjs.org/install.sh\" target=\"_blank\" rel=\"external\">http://npmjs.org/install.sh</a> | sh</p>\n<p>如果这样安装失败，或许你要在上面的命令之前加上sudo，并按提示输入你的用户密码。</p>\n<p>如果需要检验安装NodeJS或NPM是否要成功，可以通过下面的命令来检验：</p>\n<p>$ node -v</p>\n<p>v0.10.13</p>\n<p>$ npm -v</p>\n<p>1.3.2</p>\n<p>这样你的NodeJS和NPM表示安装成功。</p>\n<blockquote>\n<ul>\n<li>安装CLI</li>\n</ul>\n</blockquote>\n<p>为了方便使用Grunt，你应该在全局范围内安装Grunt的命令行接口(CLI)。在命令行中执行：</p>\n<p>$ npm install -g grunt-cli</p>\n<p>这条命令将会把grunt命令植入到你的系统路径中，这样就允许你从任意目录中运行Grunt(定位到任意目录运行grunt命令)</p>\n<blockquote>\n<ul>\n<li>运行grunt</li>\n</ul>\n</blockquote>\n<p>进入到Gruntfile.js的目录,在命令行执行：</p>\n<p>$ npm install</p>\n<p>等待命令执行后，再执行:</p>\n<p>$ grunt</p>\n<p>即可把要压缩处理的文件处理到Gruntfile.js配置的目录</p>\n<p>前端开发同学在开发过程中不需要每次都运行上面的grunt命令，可以在命令行运行一个：</p>\n<p>$ grunt dev</p>\n<p>即可时时监听修改过的文件。</p>\n<h2 id=\"不能运行npm-install时-运行下面的命令…\"><a href=\"#不能运行npm-install时-运行下面的命令…\" class=\"headerlink\" title=\"不能运行npm install时,运行下面的命令…\"></a>不能运行npm install时,运行下面的命令…</h2><p>1.通过config命令</p>\n<p>npm config set registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"external\">https://registry.npm.taobao.org</a>  npm info underscore （如果上面配置正确这个命令会有字符串response）</p>\n<p>2.命令行指定</p>\n<p>npm –registry <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"external\">https://registry.npm.taobao.org</a> info underscore</p>\n<p>3.编辑~/.npmrc加入下面内容</p>\n<p>registry = <a href=\"https://registry.npm.taobao.org\" target=\"_blank\" rel=\"external\">https://registry.npm.taobao.org</a></p>\n<p>npm可能是默认的proxy <a href=\"http://127.0.0.1.8087\" target=\"_blank\" rel=\"external\">http://127.0.0.1.8087</a></p>\n<p>$ npm config set proxy null</p>\n<p>把代理去掉就行了</p>\n","excerpt":"<h2 id=\"安装grunt\"><a href=\"#安装grunt\" class=\"headerlink\" title=\"安装grunt\"></a>安装grunt</h2><p>Grunt运行离不开NodeJS和NPM。因此要使用Grunt首要的条件，你的系统需要安装NodeJS和NPM。<br>","more":"</p>\n<blockquote>\n<ul>\n<li>安装NodeJS</li>\n</ul>\n</blockquote>\n<p>node安装的方法很多，如果是wiondow系统,可以直接进入Nodejs官网中下载各系统所需要的安装包进行安装。</p>\n<blockquote>\n<ul>\n<li>安装NPM</li>\n</ul>\n</blockquote>\n<p>装好NodeJS后，可以在你的终端执行下面的命令安装NPM:</p>\n<p>curl <a href=\"http://npmjs.org/install.sh\">http://npmjs.org/install.sh</a> | sh</p>\n<p>如果这样安装失败，或许你要在上面的命令之前加上sudo，并按提示输入你的用户密码。</p>\n<p>如果需要检验安装NodeJS或NPM是否要成功，可以通过下面的命令来检验：</p>\n<p>$ node -v</p>\n<p>v0.10.13</p>\n<p>$ npm -v</p>\n<p>1.3.2</p>\n<p>这样你的NodeJS和NPM表示安装成功。</p>\n<blockquote>\n<ul>\n<li>安装CLI</li>\n</ul>\n</blockquote>\n<p>为了方便使用Grunt，你应该在全局范围内安装Grunt的命令行接口(CLI)。在命令行中执行：</p>\n<p>$ npm install -g grunt-cli</p>\n<p>这条命令将会把grunt命令植入到你的系统路径中，这样就允许你从任意目录中运行Grunt(定位到任意目录运行grunt命令)</p>\n<blockquote>\n<ul>\n<li>运行grunt</li>\n</ul>\n</blockquote>\n<p>进入到Gruntfile.js的目录,在命令行执行：</p>\n<p>$ npm install</p>\n<p>等待命令执行后，再执行:</p>\n<p>$ grunt</p>\n<p>即可把要压缩处理的文件处理到Gruntfile.js配置的目录</p>\n<p>前端开发同学在开发过程中不需要每次都运行上面的grunt命令，可以在命令行运行一个：</p>\n<p>$ grunt dev</p>\n<p>即可时时监听修改过的文件。</p>\n<h2 id=\"不能运行npm-install时-运行下面的命令…\"><a href=\"#不能运行npm-install时-运行下面的命令…\" class=\"headerlink\" title=\"不能运行npm install时,运行下面的命令…\"></a>不能运行npm install时,运行下面的命令…</h2><p>1.通过config命令</p>\n<p>npm config set registry <a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a>  npm info underscore （如果上面配置正确这个命令会有字符串response）</p>\n<p>2.命令行指定</p>\n<p>npm –registry <a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a> info underscore</p>\n<p>3.编辑~/.npmrc加入下面内容</p>\n<p>registry = <a href=\"https://registry.npm.taobao.org\">https://registry.npm.taobao.org</a></p>\n<p>npm可能是默认的proxy <a href=\"http://127.0.0.1.8087\">http://127.0.0.1.8087</a></p>\n<p>$ npm config set proxy null</p>\n<p>把代理去掉就行了</p>"},{"title":"eclipse远程debug","date":"2017-03-27T07:11:43.000Z","_content":"\n远程Debug(Jboss-eap-6.2为例):\n\n服务器:\n\n..\\bin\\standalone.conf\n\n\\#JAVA_OPTS=\"$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n\"\n\n打开注释\n\neclipse:\n\n右键项目->debug as->debug configuration->remote java application\n\nhost:服务器IP\n\nport:8787(可以自己改跟address=xxxx,一样)\n\n注意,\n\n同时只能一个用户远程debug.否则会报错.\n\n远程服务器部署的代码跟本地要一样.","source":"_posts/eclipse远程debug.md","raw":"---\ntitle: eclipse远程debug\ndate: 2017-03-27 15:11:43\ntags: eclipse\ncategories: 技术\n---\n\n远程Debug(Jboss-eap-6.2为例):\n\n服务器:\n\n..\\bin\\standalone.conf\n\n\\#JAVA_OPTS=\"$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n\"\n\n打开注释\n\neclipse:\n\n右键项目->debug as->debug configuration->remote java application\n\nhost:服务器IP\n\nport:8787(可以自己改跟address=xxxx,一样)\n\n注意,\n\n同时只能一个用户远程debug.否则会报错.\n\n远程服务器部署的代码跟本地要一样.","slug":"eclipse远程debug","published":1,"updated":"2017-04-26T08:44:14.458Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc59480006coqhsfamjxrq","content":"<p>远程Debug(Jboss-eap-6.2为例):</p>\n<p>服务器:</p>\n<p>..\\bin\\standalone.conf</p>\n<p>#JAVA_OPTS=”$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n”</p>\n<p>打开注释</p>\n<p>eclipse:</p>\n<p>右键项目-&gt;debug as-&gt;debug configuration-&gt;remote java application</p>\n<p>host:服务器IP</p>\n<p>port:8787(可以自己改跟address=xxxx,一样)</p>\n<p>注意,</p>\n<p>同时只能一个用户远程debug.否则会报错.</p>\n<p>远程服务器部署的代码跟本地要一样.</p>\n","excerpt":"","more":"<p>远程Debug(Jboss-eap-6.2为例):</p>\n<p>服务器:</p>\n<p>..\\bin\\standalone.conf</p>\n<p>#JAVA_OPTS=”$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n”</p>\n<p>打开注释</p>\n<p>eclipse:</p>\n<p>右键项目-&gt;debug as-&gt;debug configuration-&gt;remote java application</p>\n<p>host:服务器IP</p>\n<p>port:8787(可以自己改跟address=xxxx,一样)</p>\n<p>注意,</p>\n<p>同时只能一个用户远程debug.否则会报错.</p>\n<p>远程服务器部署的代码跟本地要一样.</p>\n"},{"title":"java 线程池的使用","date":"2017-03-27T09:25:25.000Z","_content":"```java\nimport java.util.concurrent.ArrayBlockingQueue;\nimport java.util.concurrent.ThreadPoolExecutor;\nimport java.util.concurrent.TimeUnit;            \n```\n<!--more-->\n```java\n/**\n * 线程池.\n * \n * @author chenwulou\n *\n */\npublic class TestThreadPool {\n\t/**\n\t * 下面解释下一下构造器中各个参数的含义：\n\t * \n\t * corePoolSize：核心池的大小，这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，</br>\n\t * 线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了prestartAllCoreThreads()\n\t * 或者prestartCoreThread()方法，</br>\n\t * 从这2个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建corePoolSize个线程或者一个线程。</br>\n\t * 默认情况下，在创建了线程池后，线程池中的线程数为0，当有任务来之后，就会创建一个线程去执行任务，\n\t * 当线程池中的线程数目达到corePoolSize后，</br>\n\t * 就会把到达的任务放到缓存队列当中；</br>\n\t * maximumPoolSize：线程池最大线程数，这个参数也是一个非常重要的参数，它表示在线程池中最多能创建多少个线程；</br>\n\t * keepAliveTime：表示线程没有任务执行时最多保持多久时间会终止。</br>\n\t * 默认情况下，只有当线程池中的线程数大于corePoolSize时，keepAliveTime才会起作用，</br>\n\t * 直到线程池中的线程数不大于corePoolSize，即当线程池中的线程数大于corePoolSize时，</br>\n\t * 如果一个线程空闲的时间达到keepAliveTime，则会终止，直到线程池中的线程数不超过corePoolSize。</br>\n\t * 但是如果调用了allowCoreThreadTimeOut(boolean)方法，在线程池中的线程数不大于corePoolSize时，</br>\n\t * keepAliveTime参数也会起作用，直到线程池中的线程数为0；</br>\n\t * unit：参数keepAliveTime的时间单位，有7种取值，在TimeUnit类中有7种静态属性：</br>\n\t * TimeUnit.DAYS; //天</br>\n\t * TimeUnit.HOURS; //小时</br>\n\t * TimeUnit.MINUTES; //分钟</br>\n\t * TimeUnit.SECONDS; //秒</br>\n\t * TimeUnit.MILLISECONDS; //毫秒</br>\n\t * TimeUnit.MICROSECONDS; //微妙</br>\n\t * TimeUnit.NANOSECONDS; //纳秒</br>\n\t * \n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t//自动创建线程池\n//\t\tExecutorService executorService = Executors.newCachedThreadPool();\n//\t\tExecutorService executorService = Executors.newSingleThreadExecutor();\n//\t\tExecutorService executorService = Executors.newFixedThreadPool(3);\n\t\tThreadPoolExecutor executor = new ThreadPoolExecutor(5, 15, 200, TimeUnit.MILLISECONDS,\n\t\t\t\tnew ArrayBlockingQueue<Runnable>(5));\n\n\t\tfor (int i = 0; i < 15; i++) {\n\t\t\tMyTask myTask = new MyTask(i);\n//\t\t\tThread t = new Thread(myTask);\n\t\t\t//设置优先级\n//\t\t\tt.setPriority(1);\n\t\t\texecutor.execute(myTask);\n\t\t\tSystem.out.println(\"线程池中线程数目：\" + executor.getPoolSize() + \"，队列中等待执行的任务数目：\"\n\t\t\t\t\t+ executor.getQueue().size() + \"，已执行完毕的任务数目：\" + executor.getCompletedTaskCount());\n\t\t}\n\t\texecutor.shutdown();\n//\t\texecutor.shutdownNow();\n\t}\n}\n\nclass MyTask implements Runnable {\n\tprivate int taskNum;\n\n\tpublic MyTask(int num) {\n\t\tthis.taskNum = num;\n\t}\n\n\t@Override\n\tpublic void run() {\n\t\tSystem.out.println(\"正在执行task \" + taskNum);\n\t\ttry {\n//\t\t\tThread.sleep(10);\n\t\t\tThread.currentThread().sleep(10);\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"task \" + taskNum + \"执行完毕\");\n\t}\n}\n```","source":"_posts/java-线程池的使用.md","raw":"---\ntitle: java 线程池的使用\ndate: 2017-03-27 17:25:25\ntags: [java,线程池]\ncategories: 技术\n---\n```java\nimport java.util.concurrent.ArrayBlockingQueue;\nimport java.util.concurrent.ThreadPoolExecutor;\nimport java.util.concurrent.TimeUnit;            \n```\n<!--more-->\n```java\n/**\n * 线程池.\n * \n * @author chenwulou\n *\n */\npublic class TestThreadPool {\n\t/**\n\t * 下面解释下一下构造器中各个参数的含义：\n\t * \n\t * corePoolSize：核心池的大小，这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，</br>\n\t * 线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了prestartAllCoreThreads()\n\t * 或者prestartCoreThread()方法，</br>\n\t * 从这2个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建corePoolSize个线程或者一个线程。</br>\n\t * 默认情况下，在创建了线程池后，线程池中的线程数为0，当有任务来之后，就会创建一个线程去执行任务，\n\t * 当线程池中的线程数目达到corePoolSize后，</br>\n\t * 就会把到达的任务放到缓存队列当中；</br>\n\t * maximumPoolSize：线程池最大线程数，这个参数也是一个非常重要的参数，它表示在线程池中最多能创建多少个线程；</br>\n\t * keepAliveTime：表示线程没有任务执行时最多保持多久时间会终止。</br>\n\t * 默认情况下，只有当线程池中的线程数大于corePoolSize时，keepAliveTime才会起作用，</br>\n\t * 直到线程池中的线程数不大于corePoolSize，即当线程池中的线程数大于corePoolSize时，</br>\n\t * 如果一个线程空闲的时间达到keepAliveTime，则会终止，直到线程池中的线程数不超过corePoolSize。</br>\n\t * 但是如果调用了allowCoreThreadTimeOut(boolean)方法，在线程池中的线程数不大于corePoolSize时，</br>\n\t * keepAliveTime参数也会起作用，直到线程池中的线程数为0；</br>\n\t * unit：参数keepAliveTime的时间单位，有7种取值，在TimeUnit类中有7种静态属性：</br>\n\t * TimeUnit.DAYS; //天</br>\n\t * TimeUnit.HOURS; //小时</br>\n\t * TimeUnit.MINUTES; //分钟</br>\n\t * TimeUnit.SECONDS; //秒</br>\n\t * TimeUnit.MILLISECONDS; //毫秒</br>\n\t * TimeUnit.MICROSECONDS; //微妙</br>\n\t * TimeUnit.NANOSECONDS; //纳秒</br>\n\t * \n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t//自动创建线程池\n//\t\tExecutorService executorService = Executors.newCachedThreadPool();\n//\t\tExecutorService executorService = Executors.newSingleThreadExecutor();\n//\t\tExecutorService executorService = Executors.newFixedThreadPool(3);\n\t\tThreadPoolExecutor executor = new ThreadPoolExecutor(5, 15, 200, TimeUnit.MILLISECONDS,\n\t\t\t\tnew ArrayBlockingQueue<Runnable>(5));\n\n\t\tfor (int i = 0; i < 15; i++) {\n\t\t\tMyTask myTask = new MyTask(i);\n//\t\t\tThread t = new Thread(myTask);\n\t\t\t//设置优先级\n//\t\t\tt.setPriority(1);\n\t\t\texecutor.execute(myTask);\n\t\t\tSystem.out.println(\"线程池中线程数目：\" + executor.getPoolSize() + \"，队列中等待执行的任务数目：\"\n\t\t\t\t\t+ executor.getQueue().size() + \"，已执行完毕的任务数目：\" + executor.getCompletedTaskCount());\n\t\t}\n\t\texecutor.shutdown();\n//\t\texecutor.shutdownNow();\n\t}\n}\n\nclass MyTask implements Runnable {\n\tprivate int taskNum;\n\n\tpublic MyTask(int num) {\n\t\tthis.taskNum = num;\n\t}\n\n\t@Override\n\tpublic void run() {\n\t\tSystem.out.println(\"正在执行task \" + taskNum);\n\t\ttry {\n//\t\t\tThread.sleep(10);\n\t\t\tThread.currentThread().sleep(10);\n\t\t} catch (InterruptedException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"task \" + taskNum + \"执行完毕\");\n\t}\n}\n```","slug":"java-线程池的使用","published":1,"updated":"2017-04-11T09:34:20.065Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc594b0008coqhnpjlmxtj","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ArrayBlockingQueue;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ThreadPoolExecutor;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 线程池.</div><div class=\"line\"> * </div><div class=\"line\"> * <span class=\"doctag\">@author</span> chenwulou</div><div class=\"line\"> *</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThreadPool</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 下面解释下一下构造器中各个参数的含义：</div><div class=\"line\">\t * </div><div class=\"line\">\t * corePoolSize：核心池的大小，这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，&lt;/br&gt;</div><div class=\"line\">\t * 线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了prestartAllCoreThreads()</div><div class=\"line\">\t * 或者prestartCoreThread()方法，&lt;/br&gt;</div><div class=\"line\">\t * 从这2个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建corePoolSize个线程或者一个线程。&lt;/br&gt;</div><div class=\"line\">\t * 默认情况下，在创建了线程池后，线程池中的线程数为0，当有任务来之后，就会创建一个线程去执行任务，</div><div class=\"line\">\t * 当线程池中的线程数目达到corePoolSize后，&lt;/br&gt;</div><div class=\"line\">\t * 就会把到达的任务放到缓存队列当中；&lt;/br&gt;</div><div class=\"line\">\t * maximumPoolSize：线程池最大线程数，这个参数也是一个非常重要的参数，它表示在线程池中最多能创建多少个线程；&lt;/br&gt;</div><div class=\"line\">\t * keepAliveTime：表示线程没有任务执行时最多保持多久时间会终止。&lt;/br&gt;</div><div class=\"line\">\t * 默认情况下，只有当线程池中的线程数大于corePoolSize时，keepAliveTime才会起作用，&lt;/br&gt;</div><div class=\"line\">\t * 直到线程池中的线程数不大于corePoolSize，即当线程池中的线程数大于corePoolSize时，&lt;/br&gt;</div><div class=\"line\">\t * 如果一个线程空闲的时间达到keepAliveTime，则会终止，直到线程池中的线程数不超过corePoolSize。&lt;/br&gt;</div><div class=\"line\">\t * 但是如果调用了allowCoreThreadTimeOut(boolean)方法，在线程池中的线程数不大于corePoolSize时，&lt;/br&gt;</div><div class=\"line\">\t * keepAliveTime参数也会起作用，直到线程池中的线程数为0；&lt;/br&gt;</div><div class=\"line\">\t * unit：参数keepAliveTime的时间单位，有7种取值，在TimeUnit类中有7种静态属性：&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.DAYS; //天&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.HOURS; //小时&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.MINUTES; //分钟&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.SECONDS; //秒&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.MILLISECONDS; //毫秒&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.MICROSECONDS; //微妙&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.NANOSECONDS; //纳秒&lt;/br&gt;</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> args</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">//自动创建线程池</span></div><div class=\"line\"><span class=\"comment\">//\t\tExecutorService executorService = Executors.newCachedThreadPool();</span></div><div class=\"line\"><span class=\"comment\">//\t\tExecutorService executorService = Executors.newSingleThreadExecutor();</span></div><div class=\"line\"><span class=\"comment\">//\t\tExecutorService executorService = Executors.newFixedThreadPool(3);</span></div><div class=\"line\">\t\tThreadPoolExecutor executor = <span class=\"keyword\">new</span> ThreadPoolExecutor(<span class=\"number\">5</span>, <span class=\"number\">15</span>, <span class=\"number\">200</span>, TimeUnit.MILLISECONDS,</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">new</span> ArrayBlockingQueue&lt;Runnable&gt;(<span class=\"number\">5</span>));</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</div><div class=\"line\">\t\t\tMyTask myTask = <span class=\"keyword\">new</span> MyTask(i);</div><div class=\"line\"><span class=\"comment\">//\t\t\tThread t = new Thread(myTask);</span></div><div class=\"line\">\t\t\t<span class=\"comment\">//设置优先级</span></div><div class=\"line\"><span class=\"comment\">//\t\t\tt.setPriority(1);</span></div><div class=\"line\">\t\t\texecutor.execute(myTask);</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"线程池中线程数目：\"</span> + executor.getPoolSize() + <span class=\"string\">\"，队列中等待执行的任务数目：\"</span></div><div class=\"line\">\t\t\t\t\t+ executor.getQueue().size() + <span class=\"string\">\"，已执行完毕的任务数目：\"</span> + executor.getCompletedTaskCount());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\texecutor.shutdown();</div><div class=\"line\"><span class=\"comment\">//\t\texecutor.shutdownNow();</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTask</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> taskNum;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyTask</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.taskNum = num;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"正在执行task \"</span> + taskNum);</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\"><span class=\"comment\">//\t\t\tThread.sleep(10);</span></div><div class=\"line\">\t\t\tThread.currentThread().sleep(<span class=\"number\">10</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"task \"</span> + taskNum + <span class=\"string\">\"执行完毕\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ArrayBlockingQueue;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ThreadPoolExecutor;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</div></pre></td></tr></table></figure>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 线程池.</div><div class=\"line\"> * </div><div class=\"line\"> * <span class=\"doctag\">@author</span> chenwulou</div><div class=\"line\"> *</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestThreadPool</span> </span>&#123;</div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 下面解释下一下构造器中各个参数的含义：</div><div class=\"line\">\t * </div><div class=\"line\">\t * corePoolSize：核心池的大小，这个参数跟后面讲述的线程池的实现原理有非常大的关系。在创建了线程池后，默认情况下，&lt;/br&gt;</div><div class=\"line\">\t * 线程池中并没有任何线程，而是等待有任务到来才创建线程去执行任务，除非调用了prestartAllCoreThreads()</div><div class=\"line\">\t * 或者prestartCoreThread()方法，&lt;/br&gt;</div><div class=\"line\">\t * 从这2个方法的名字就可以看出，是预创建线程的意思，即在没有任务到来之前就创建corePoolSize个线程或者一个线程。&lt;/br&gt;</div><div class=\"line\">\t * 默认情况下，在创建了线程池后，线程池中的线程数为0，当有任务来之后，就会创建一个线程去执行任务，</div><div class=\"line\">\t * 当线程池中的线程数目达到corePoolSize后，&lt;/br&gt;</div><div class=\"line\">\t * 就会把到达的任务放到缓存队列当中；&lt;/br&gt;</div><div class=\"line\">\t * maximumPoolSize：线程池最大线程数，这个参数也是一个非常重要的参数，它表示在线程池中最多能创建多少个线程；&lt;/br&gt;</div><div class=\"line\">\t * keepAliveTime：表示线程没有任务执行时最多保持多久时间会终止。&lt;/br&gt;</div><div class=\"line\">\t * 默认情况下，只有当线程池中的线程数大于corePoolSize时，keepAliveTime才会起作用，&lt;/br&gt;</div><div class=\"line\">\t * 直到线程池中的线程数不大于corePoolSize，即当线程池中的线程数大于corePoolSize时，&lt;/br&gt;</div><div class=\"line\">\t * 如果一个线程空闲的时间达到keepAliveTime，则会终止，直到线程池中的线程数不超过corePoolSize。&lt;/br&gt;</div><div class=\"line\">\t * 但是如果调用了allowCoreThreadTimeOut(boolean)方法，在线程池中的线程数不大于corePoolSize时，&lt;/br&gt;</div><div class=\"line\">\t * keepAliveTime参数也会起作用，直到线程池中的线程数为0；&lt;/br&gt;</div><div class=\"line\">\t * unit：参数keepAliveTime的时间单位，有7种取值，在TimeUnit类中有7种静态属性：&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.DAYS; //天&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.HOURS; //小时&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.MINUTES; //分钟&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.SECONDS; //秒&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.MILLISECONDS; //毫秒&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.MICROSECONDS; //微妙&lt;/br&gt;</div><div class=\"line\">\t * TimeUnit.NANOSECONDS; //纳秒&lt;/br&gt;</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> args</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"comment\">//自动创建线程池</span></div><div class=\"line\"><span class=\"comment\">//\t\tExecutorService executorService = Executors.newCachedThreadPool();</span></div><div class=\"line\"><span class=\"comment\">//\t\tExecutorService executorService = Executors.newSingleThreadExecutor();</span></div><div class=\"line\"><span class=\"comment\">//\t\tExecutorService executorService = Executors.newFixedThreadPool(3);</span></div><div class=\"line\">\t\tThreadPoolExecutor executor = <span class=\"keyword\">new</span> ThreadPoolExecutor(<span class=\"number\">5</span>, <span class=\"number\">15</span>, <span class=\"number\">200</span>, TimeUnit.MILLISECONDS,</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">new</span> ArrayBlockingQueue&lt;Runnable&gt;(<span class=\"number\">5</span>));</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">15</span>; i++) &#123;</div><div class=\"line\">\t\t\tMyTask myTask = <span class=\"keyword\">new</span> MyTask(i);</div><div class=\"line\"><span class=\"comment\">//\t\t\tThread t = new Thread(myTask);</span></div><div class=\"line\">\t\t\t<span class=\"comment\">//设置优先级</span></div><div class=\"line\"><span class=\"comment\">//\t\t\tt.setPriority(1);</span></div><div class=\"line\">\t\t\texecutor.execute(myTask);</div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"线程池中线程数目：\"</span> + executor.getPoolSize() + <span class=\"string\">\"，队列中等待执行的任务数目：\"</span></div><div class=\"line\">\t\t\t\t\t+ executor.getQueue().size() + <span class=\"string\">\"，已执行完毕的任务数目：\"</span> + executor.getCompletedTaskCount());</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\texecutor.shutdown();</div><div class=\"line\"><span class=\"comment\">//\t\texecutor.shutdownNow();</span></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyTask</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> taskNum;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyTask</span><span class=\"params\">(<span class=\"keyword\">int</span> num)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">this</span>.taskNum = num;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"正在执行task \"</span> + taskNum);</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\"><span class=\"comment\">//\t\t\tThread.sleep(10);</span></div><div class=\"line\">\t\t\tThread.currentThread().sleep(<span class=\"number\">10</span>);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"task \"</span> + taskNum + <span class=\"string\">\"执行完毕\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"hexo的一些小问题","date":"2017-04-20T07:33:11.000Z","_content":"\n## 常用命令\n\n- hexo clean :清除缓存文件\n- hexo generate (hexo g) :生成静态文件\n- hexo server :启动服务\n- hexo deploy (hexo d) :部署到服务器\n- hexo new \"文章标题\" :新建文章(默认生成在hexo\\source\\_posts目录下)\n<!-- more -->\n\n## 美化页面\n- 以下均基于next主题.\n- 去除底部xxxx强力驱动等内容:\n注释hexo\\themes\\hexo-theme-next-5.1.0\\layout\\_partials\\footer.swig\n的如下内容\n```\n<div class=\"powered-by\">\n  {{ __('footer.powered', '<a class=\"theme-link\" href=\"https://hexo.io\">Hexo</a>') }}\n</div>\n\n<div class=\"theme-info\">\n  {{ __('footer.theme') }} -\n  <a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\">\n    NexT.{{ theme.scheme }}\n  </a>\n</div>\n```\n- 阅读全文美化,鼠标悬浮颜色和默认按钮颜色互换:\nhexo\\themes\\hexo-theme-next-5.1.0\\source\\css\\_variables\\base.style\n```\n$btn-default-hover-bg           = $black-deep\n$btn-default-hover-color        = white\n$btn-default-hover-border-color = $black-deep\n$read-more-color                = $black-deep\n$read-more-bg-color             = white\n```\n注意格式 =后面需要空格\n- 文章卡片添加阴影效果:\nhexo\\themes\\hexo-theme-next-5.1.0\\source\\css\\_schemes\\Muse 添加\n```\n.posts-expand { \n\t.post{ \n\t\tmargin-bottom: 60px;\n\t\tpadding: 25px;\n\t\t-webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);\n\t\t-moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);\n\t\t} \n}\n```\n去除底部多余空白和黑色横线:\nhexo\\themes\\hexo-theme-next-5.1.0\\source\\css\\_common\\components\\post\\post-eof.styl\n```\n// 注释margin\n//margin: $post-eof-margin-top auto $post-eof-margin-bottom;\n//width 改为 0%\n//width: 8%;\nwidth: 0%;\n```\n\n\n## 官方文档\n- hexo:https://hexo.io/zh-cn/docs/\n- next:http://theme-next.iissnan.com/","source":"_posts/hexo的一些小问题.md","raw":"---\ntitle: hexo的一些小问题\ndate: 2017-04-20 15:33:11\ntags: hexo\ncategories: 技术\n---\n\n## 常用命令\n\n- hexo clean :清除缓存文件\n- hexo generate (hexo g) :生成静态文件\n- hexo server :启动服务\n- hexo deploy (hexo d) :部署到服务器\n- hexo new \"文章标题\" :新建文章(默认生成在hexo\\source\\_posts目录下)\n<!-- more -->\n\n## 美化页面\n- 以下均基于next主题.\n- 去除底部xxxx强力驱动等内容:\n注释hexo\\themes\\hexo-theme-next-5.1.0\\layout\\_partials\\footer.swig\n的如下内容\n```\n<div class=\"powered-by\">\n  {{ __('footer.powered', '<a class=\"theme-link\" href=\"https://hexo.io\">Hexo</a>') }}\n</div>\n\n<div class=\"theme-info\">\n  {{ __('footer.theme') }} -\n  <a class=\"theme-link\" href=\"https://github.com/iissnan/hexo-theme-next\">\n    NexT.{{ theme.scheme }}\n  </a>\n</div>\n```\n- 阅读全文美化,鼠标悬浮颜色和默认按钮颜色互换:\nhexo\\themes\\hexo-theme-next-5.1.0\\source\\css\\_variables\\base.style\n```\n$btn-default-hover-bg           = $black-deep\n$btn-default-hover-color        = white\n$btn-default-hover-border-color = $black-deep\n$read-more-color                = $black-deep\n$read-more-bg-color             = white\n```\n注意格式 =后面需要空格\n- 文章卡片添加阴影效果:\nhexo\\themes\\hexo-theme-next-5.1.0\\source\\css\\_schemes\\Muse 添加\n```\n.posts-expand { \n\t.post{ \n\t\tmargin-bottom: 60px;\n\t\tpadding: 25px;\n\t\t-webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);\n\t\t-moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);\n\t\t} \n}\n```\n去除底部多余空白和黑色横线:\nhexo\\themes\\hexo-theme-next-5.1.0\\source\\css\\_common\\components\\post\\post-eof.styl\n```\n// 注释margin\n//margin: $post-eof-margin-top auto $post-eof-margin-bottom;\n//width 改为 0%\n//width: 8%;\nwidth: 0%;\n```\n\n\n## 官方文档\n- hexo:https://hexo.io/zh-cn/docs/\n- next:http://theme-next.iissnan.com/","slug":"hexo的一些小问题","published":1,"updated":"2017-04-26T08:44:27.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc594f0009coqh2joy16ai","content":"<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><ul>\n<li>hexo clean :清除缓存文件</li>\n<li>hexo generate (hexo g) :生成静态文件</li>\n<li>hexo server :启动服务</li>\n<li>hexo deploy (hexo d) :部署到服务器</li>\n<li>hexo new “文章标题” :新建文章(默认生成在hexo\\source_posts目录下)<a id=\"more\"></a>\n</li>\n</ul>\n<h2 id=\"美化页面\"><a href=\"#美化页面\" class=\"headerlink\" title=\"美化页面\"></a>美化页面</h2><ul>\n<li>以下均基于next主题.</li>\n<li><p>去除底部xxxx强力驱动等内容:<br>注释hexo\\themes\\hexo-theme-next-5.1.0\\layout_partials\\footer.swig<br>的如下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;powered-by&quot;&gt;</div><div class=\"line\">  &#123;&#123; __(&apos;footer.powered&apos;, &apos;&lt;a class=&quot;theme-link&quot; href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;&apos;) &#125;&#125;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;theme-info&quot;&gt;</div><div class=\"line\">  &#123;&#123; __(&apos;footer.theme&apos;) &#125;&#125; -</div><div class=\"line\">  &lt;a class=&quot;theme-link&quot; href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt;</div><div class=\"line\">    NexT.&#123;&#123; theme.scheme &#125;&#125;</div><div class=\"line\">  &lt;/a&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>阅读全文美化,鼠标悬浮颜色和默认按钮颜色互换:<br>hexo\\themes\\hexo-theme-next-5.1.0\\source\\css_variables\\base.style</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$btn-default-hover-bg           = $black-deep</div><div class=\"line\">$btn-default-hover-color        = white</div><div class=\"line\">$btn-default-hover-border-color = $black-deep</div><div class=\"line\">$read-more-color                = $black-deep</div><div class=\"line\">$read-more-bg-color             = white</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>注意格式 =后面需要空格</p>\n<ul>\n<li>文章卡片添加阴影效果:<br>hexo\\themes\\hexo-theme-next-5.1.0\\source\\css_schemes\\Muse 添加<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.posts-expand &#123; </div><div class=\"line\">\t.post&#123; </div><div class=\"line\">\t\tmargin-bottom: 60px;</div><div class=\"line\">\t\tpadding: 25px;</div><div class=\"line\">\t\t-webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</div><div class=\"line\">\t\t-moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</div><div class=\"line\">\t\t&#125; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>去除底部多余空白和黑色横线:<br>hexo\\themes\\hexo-theme-next-5.1.0\\source\\css_common\\components\\post\\post-eof.styl<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 注释margin</div><div class=\"line\">//margin: $post-eof-margin-top auto $post-eof-margin-bottom;</div><div class=\"line\">//width 改为 0%</div><div class=\"line\">//width: 8%;</div><div class=\"line\">width: 0%;</div></pre></td></tr></table></figure></p>\n<h2 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h2><ul>\n<li>hexo:<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"external\">https://hexo.io/zh-cn/docs/</a></li>\n<li>next:<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">http://theme-next.iissnan.com/</a></li>\n</ul>\n","excerpt":"<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><ul>\n<li>hexo clean :清除缓存文件</li>\n<li>hexo generate (hexo g) :生成静态文件</li>\n<li>hexo server :启动服务</li>\n<li>hexo deploy (hexo d) :部署到服务器</li>\n<li>hexo new “文章标题” :新建文章(默认生成在hexo\\source_posts目录下)","more":"</li>\n</ul>\n<h2 id=\"美化页面\"><a href=\"#美化页面\" class=\"headerlink\" title=\"美化页面\"></a>美化页面</h2><ul>\n<li>以下均基于next主题.</li>\n<li><p>去除底部xxxx强力驱动等内容:<br>注释hexo\\themes\\hexo-theme-next-5.1.0\\layout_partials\\footer.swig<br>的如下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div class=&quot;powered-by&quot;&gt;</div><div class=\"line\">  &#123;&#123; __(&apos;footer.powered&apos;, &apos;&lt;a class=&quot;theme-link&quot; href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt;&apos;) &#125;&#125;</div><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div class=&quot;theme-info&quot;&gt;</div><div class=\"line\">  &#123;&#123; __(&apos;footer.theme&apos;) &#125;&#125; -</div><div class=\"line\">  &lt;a class=&quot;theme-link&quot; href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt;</div><div class=\"line\">    NexT.&#123;&#123; theme.scheme &#125;&#125;</div><div class=\"line\">  &lt;/a&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>阅读全文美化,鼠标悬浮颜色和默认按钮颜色互换:<br>hexo\\themes\\hexo-theme-next-5.1.0\\source\\css_variables\\base.style</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$btn-default-hover-bg           = $black-deep</div><div class=\"line\">$btn-default-hover-color        = white</div><div class=\"line\">$btn-default-hover-border-color = $black-deep</div><div class=\"line\">$read-more-color                = $black-deep</div><div class=\"line\">$read-more-bg-color             = white</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>注意格式 =后面需要空格</p>\n<ul>\n<li>文章卡片添加阴影效果:<br>hexo\\themes\\hexo-theme-next-5.1.0\\source\\css_schemes\\Muse 添加<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.posts-expand &#123; </div><div class=\"line\">\t.post&#123; </div><div class=\"line\">\t\tmargin-bottom: 60px;</div><div class=\"line\">\t\tpadding: 25px;</div><div class=\"line\">\t\t-webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</div><div class=\"line\">\t\t-moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</div><div class=\"line\">\t\t&#125; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>去除底部多余空白和黑色横线:<br>hexo\\themes\\hexo-theme-next-5.1.0\\source\\css_common\\components\\post\\post-eof.styl<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 注释margin</div><div class=\"line\">//margin: $post-eof-margin-top auto $post-eof-margin-bottom;</div><div class=\"line\">//width 改为 0%</div><div class=\"line\">//width: 8%;</div><div class=\"line\">width: 0%;</div></pre></td></tr></table></figure></p>\n<h2 id=\"官方文档\"><a href=\"#官方文档\" class=\"headerlink\" title=\"官方文档\"></a>官方文档</h2><ul>\n<li>hexo:<a href=\"https://hexo.io/zh-cn/docs/\">https://hexo.io/zh-cn/docs/</a></li>\n<li>next:<a href=\"http://theme-next.iissnan.com/\">http://theme-next.iissnan.com/</a></li>\n</ul>"},{"title":"java内存溢出总结","date":"2017-03-27T09:06:24.000Z","_content":"首先我们来说说java虚拟机的构成吧:\n\n他是由程序计数器,堆,java虚拟机栈,本地方法栈,方法区这几块构成的,\n<!-- more --> \n- 堆是用来存放对象和数组的,这里我们就可以设计一个无限创造对象来模拟堆溢出.\n\n```java\n/**\n\n * 堆溢出 \n\n * Exception in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n\n * @author chenwulou\n\n */\n\npublic class HeapLeak {\n\n    public static void main(String[] args) {\n        ArrayList list = new ArrayList();\n        while (true) {\n            list.add(new HeapLeak.method());\n        }\n    }\n    \n    static class method {\n    \n    }\n}\n```\n\n\n- 栈是用来存放基本数据类型，对象引用，方法等等这些东西的,这里我们就能用无限递归来模拟栈溢出\n\n```java\n/**\n\n * 栈溢出\n\n * Exception in thread \"main\" java.lang.StackOverflowError\n\n * @author chenwulou\n\n */\n\npublic class StackLeak {\n\n public static void main(String[] args) {\n\n method();\n\n }\n\n public static void method() {\n\n method();\n\n }\n\n}\n\n```\n\n- 方法区用来存放每个class的结构,比如说运行时常量池、域、方法数据、方法体、构造函数、包括类中的专用方法、实例初始化、接口初始化。cglib可以直接操作字节码，也可以动态产生Class，下面通过cglib来演示。\n\n\n```java\nimport java.lang.reflect.Method;\n\nimport net.sf.cglib.proxy.Enhancer;\n\nimport net.sf.cglib.proxy.MethodInterceptor;\n\nimport net.sf.cglib.proxy.MethodProxy;\n\n\n/**\n\n * 方法区溢出\n\n * Exception in thread \"main\" java.lang.NoClassDefFoundError\n\n * @author chenwulou\n\n */\n\npublic class MethodAreaLeak {\n\npublic static void main(String[] args) {\n\nwhile (true) {\n\n    Enhancer enhancer = new Enhancer();\n    \n    enhancer.setSuperclass(OOMObject.class);\n    \n    enhancer.setUseCache(false);\n    \n    enhancer.setCallback(new MethodInterceptor() {\n    \n        public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy)\n        \n        throws Throwable {\n        \n            return proxy.invokeSuper(obj, args);\n        \n        }\n    \n    });\n    \n    enhancer.create();\n\n}\n\n}\n\nclass OOMObject {\n\n}\n\n}\n```","source":"_posts/java内存溢出总结.md","raw":"---\ntitle: java内存溢出总结\ndate: 2017-03-27 17:06:24\ntags: java\ncategories: 技术\n---\n首先我们来说说java虚拟机的构成吧:\n\n他是由程序计数器,堆,java虚拟机栈,本地方法栈,方法区这几块构成的,\n<!-- more --> \n- 堆是用来存放对象和数组的,这里我们就可以设计一个无限创造对象来模拟堆溢出.\n\n```java\n/**\n\n * 堆溢出 \n\n * Exception in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n\n * @author chenwulou\n\n */\n\npublic class HeapLeak {\n\n    public static void main(String[] args) {\n        ArrayList list = new ArrayList();\n        while (true) {\n            list.add(new HeapLeak.method());\n        }\n    }\n    \n    static class method {\n    \n    }\n}\n```\n\n\n- 栈是用来存放基本数据类型，对象引用，方法等等这些东西的,这里我们就能用无限递归来模拟栈溢出\n\n```java\n/**\n\n * 栈溢出\n\n * Exception in thread \"main\" java.lang.StackOverflowError\n\n * @author chenwulou\n\n */\n\npublic class StackLeak {\n\n public static void main(String[] args) {\n\n method();\n\n }\n\n public static void method() {\n\n method();\n\n }\n\n}\n\n```\n\n- 方法区用来存放每个class的结构,比如说运行时常量池、域、方法数据、方法体、构造函数、包括类中的专用方法、实例初始化、接口初始化。cglib可以直接操作字节码，也可以动态产生Class，下面通过cglib来演示。\n\n\n```java\nimport java.lang.reflect.Method;\n\nimport net.sf.cglib.proxy.Enhancer;\n\nimport net.sf.cglib.proxy.MethodInterceptor;\n\nimport net.sf.cglib.proxy.MethodProxy;\n\n\n/**\n\n * 方法区溢出\n\n * Exception in thread \"main\" java.lang.NoClassDefFoundError\n\n * @author chenwulou\n\n */\n\npublic class MethodAreaLeak {\n\npublic static void main(String[] args) {\n\nwhile (true) {\n\n    Enhancer enhancer = new Enhancer();\n    \n    enhancer.setSuperclass(OOMObject.class);\n    \n    enhancer.setUseCache(false);\n    \n    enhancer.setCallback(new MethodInterceptor() {\n    \n        public Object intercept(Object obj, Method method, Object[] args, MethodProxy proxy)\n        \n        throws Throwable {\n        \n            return proxy.invokeSuper(obj, args);\n        \n        }\n    \n    });\n    \n    enhancer.create();\n\n}\n\n}\n\nclass OOMObject {\n\n}\n\n}\n```","slug":"java内存溢出总结","published":1,"updated":"2017-04-11T09:29:50.288Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc594j000ccoqhv437mia4","content":"<p>首先我们来说说java虚拟机的构成吧:</p>\n<p>他是由程序计数器,堆,java虚拟机栈,本地方法栈,方法区这几块构成的,<br><a id=\"more\"></a> </p>\n<ul>\n<li>堆是用来存放对象和数组的,这里我们就可以设计一个无限创造对象来模拟堆溢出.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\"> * 堆溢出 </div><div class=\"line\"></div><div class=\"line\"> * Exception in thread \"main\" java.lang.OutOfMemoryError: Java heap space</div><div class=\"line\"></div><div class=\"line\"> * <span class=\"doctag\">@author</span> chenwulou</div><div class=\"line\"></div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeapLeak</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">        ArrayList list = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            list.add(<span class=\"keyword\">new</span> HeapLeak.method());</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">method</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>栈是用来存放基本数据类型，对象引用，方法等等这些东西的,这里我们就能用无限递归来模拟栈溢出</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\"> * 栈溢出</div><div class=\"line\"></div><div class=\"line\"> * Exception in thread \"main\" java.lang.StackOverflowError</div><div class=\"line\"></div><div class=\"line\"> * <span class=\"doctag\">@author</span> chenwulou</div><div class=\"line\"></div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StackLeak</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"> method();</div><div class=\"line\"></div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"> method();</div><div class=\"line\"></div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>方法区用来存放每个class的结构,比如说运行时常量池、域、方法数据、方法体、构造函数、包括类中的专用方法、实例初始化、接口初始化。cglib可以直接操作字节码，也可以动态产生Class，下面通过cglib来演示。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> net.sf.cglib.proxy.Enhancer;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> net.sf.cglib.proxy.MethodInterceptor;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> net.sf.cglib.proxy.MethodProxy;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\"> * 方法区溢出</div><div class=\"line\"></div><div class=\"line\"> * Exception in thread \"main\" java.lang.NoClassDefFoundError</div><div class=\"line\"></div><div class=\"line\"> * <span class=\"doctag\">@author</span> chenwulou</div><div class=\"line\"></div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodAreaLeak</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\"></div><div class=\"line\">    Enhancer enhancer = <span class=\"keyword\">new</span> Enhancer();</div><div class=\"line\">    </div><div class=\"line\">    enhancer.setSuperclass(OOMObject.class);</div><div class=\"line\">    </div><div class=\"line\">    enhancer.setUseCache(<span class=\"keyword\">false</span>);</div><div class=\"line\">    </div><div class=\"line\">    enhancer.setCallback(<span class=\"keyword\">new</span> MethodInterceptor() &#123;</div><div class=\"line\">    </div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">intercept</span><span class=\"params\">(Object obj, Method method, Object[] args, MethodProxy proxy)</span></span></div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">throws</span> Throwable &#123;</div><div class=\"line\">        </div><div class=\"line\">            <span class=\"keyword\">return</span> proxy.invokeSuper(obj, args);</div><div class=\"line\">        </div><div class=\"line\">        &#125;</div><div class=\"line\">    </div><div class=\"line\">    &#125;);</div><div class=\"line\">    </div><div class=\"line\">    enhancer.create();</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OOMObject</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"<p>首先我们来说说java虚拟机的构成吧:</p>\n<p>他是由程序计数器,堆,java虚拟机栈,本地方法栈,方法区这几块构成的,<br>","more":"</p>\n<ul>\n<li>堆是用来存放对象和数组的,这里我们就可以设计一个无限创造对象来模拟堆溢出.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\"> * 堆溢出 </div><div class=\"line\"></div><div class=\"line\"> * Exception in thread \"main\" java.lang.OutOfMemoryError: Java heap space</div><div class=\"line\"></div><div class=\"line\"> * <span class=\"doctag\">@author</span> chenwulou</div><div class=\"line\"></div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeapLeak</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">        ArrayList list = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            list.add(<span class=\"keyword\">new</span> HeapLeak.method());</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">method</span> </span>&#123;</div><div class=\"line\">    </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>栈是用来存放基本数据类型，对象引用，方法等等这些东西的,这里我们就能用无限递归来模拟栈溢出</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\"> * 栈溢出</div><div class=\"line\"></div><div class=\"line\"> * Exception in thread \"main\" java.lang.StackOverflowError</div><div class=\"line\"></div><div class=\"line\"> * <span class=\"doctag\">@author</span> chenwulou</div><div class=\"line\"></div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StackLeak</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"> method();</div><div class=\"line\"></div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"> method();</div><div class=\"line\"></div><div class=\"line\"> &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<ul>\n<li>方法区用来存放每个class的结构,比如说运行时常量池、域、方法数据、方法体、构造函数、包括类中的专用方法、实例初始化、接口初始化。cglib可以直接操作字节码，也可以动态产生Class，下面通过cglib来演示。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> net.sf.cglib.proxy.Enhancer;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> net.sf.cglib.proxy.MethodInterceptor;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> net.sf.cglib.proxy.MethodProxy;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\"> * 方法区溢出</div><div class=\"line\"></div><div class=\"line\"> * Exception in thread \"main\" java.lang.NoClassDefFoundError</div><div class=\"line\"></div><div class=\"line\"> * <span class=\"doctag\">@author</span> chenwulou</div><div class=\"line\"></div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MethodAreaLeak</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\"></div><div class=\"line\">    Enhancer enhancer = <span class=\"keyword\">new</span> Enhancer();</div><div class=\"line\">    </div><div class=\"line\">    enhancer.setSuperclass(OOMObject.class);</div><div class=\"line\">    </div><div class=\"line\">    enhancer.setUseCache(<span class=\"keyword\">false</span>);</div><div class=\"line\">    </div><div class=\"line\">    enhancer.setCallback(<span class=\"keyword\">new</span> MethodInterceptor() &#123;</div><div class=\"line\">    </div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">intercept</span><span class=\"params\">(Object obj, Method method, Object[] args, MethodProxy proxy)</span></div><div class=\"line\">        </div><div class=\"line\">        <span class=\"keyword\">throws</span> Throwable </span>&#123;</div><div class=\"line\">        </div><div class=\"line\">            <span class=\"keyword\">return</span> proxy.invokeSuper(obj, args);</div><div class=\"line\">        </div><div class=\"line\">        &#125;</div><div class=\"line\">    </div><div class=\"line\">    &#125;);</div><div class=\"line\">    </div><div class=\"line\">    enhancer.create();</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OOMObject</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"linux下项目环境搭建部署","date":"2017-03-29T06:54:40.000Z","_content":"- centos7安装\n    不做展示,自行解决\n- 数据库安装:\n\n    ```\n    yum install mariadb mariadb-server\n    ```\n    1. 启动mariadb服务程序并添加到开机启动项中：\n    ```\n    [root@linuxprobe ~]# systemctl start mariadb\n    [root@linuxprobe ~]# systemctl enable mariadb\n    ```\n\t<!-- more --> \n    2. 为了保证数据库的安全性，一定要进行初始化工作：\n    \n    第1步：设定root用户密码。\n    第2步：删除匿名帐号。\n    第3步：禁止root用户从远程登陆。\n    第4步：删除test数据库并取消对其的访问权限。\n    第5步：刷新授权表，让初始化后的设定立即生效。\n    ```\n    [root@linuxprobe ~]# mysql_secure_installation\n    Enter current password for root (enter for none): 当前数据库密码为空，直接敲击回车。\n    Set root password? [Y/n] y\n    New password: 输入要为root用户设置的数据库密码。\n    Re-enter new password: 重复再输入一次密码。\n    Password updated successfully!\n    Remove anonymous users? [Y/n] y（删除匿名帐号）\n     ... Success!\n    Disallow root login remotely? [Y/n] y(禁止root用户从远程登陆)\n     ... Success!\n    Remove test database and access to it? [Y/n] y(删除test数据库并取消对其的访问权限)\n     - Dropping test database...\n     ... Success!\n     - Removing privileges on test database...\n     ... Success!\n    Reload privilege tables now? [Y/n] y(刷新授权表，让初始化后的设定立即生效)\n     ... Success!\n     ```\n    3. 设置防火墙对数据库服务的允许策略：\n    ```\n    [root@linuxprobe ~]# firewall-cmd --permanent --add-service=mysql\n    success\n    [root@linuxprobe ~]# firewall-cmd --reload\n    success\n    ```\n    4. 使用root用户登陆到数据库中：\n    ```\n    [root@linuxprobe ~]# mysql -u root -p\n    Enter password: 此处输入root用户在数据库中的密码。\n    Welcome to the MariaDB monitor. Commands end with ; or \\g.\n    ```\n    5. 创建一个新的数据库用户：\n    \n    创建数据库用户的命令:CREATE USER 用户名@主机名 IDENTIFIED BY '密码';\n    ```\n    MariaDB [(none)]> create user 'herakles'@'%' IDENTIFIED BY '123456';\n    Query OK, 0 rows affected (0.00 sec)\n    ```\n\t'%'允许远程登陆此用户\n\t6. 给予herakles用户对user表单的查询、更新、删除、插入权限：\n\t```\n\tMariaDB [mysql]> GRANT SELECT,UPDATE,DELETE,INSERT on mysql.user to luke@localhost;\n\tQuery OK, 0 rows affected (0.00 sec)\n\t```\n \n- redis\n\n    安装必要包\n    ```\n    yum install gcc\n    ```\n\n\t安装redis\n\t```\n\t#下载\n\twget http://download.redis.io/releases/redis-3.0.0.tar.gz\n\ttar zxvf redis-3.0.0.tar.gz\n\tcd redis-3.0.0\n\t#如果不加参数,linux下会报错\n\tmake MALLOC=libc\n\t```\n\n\t启动\n\t```\n\t#启动redis\n\tsrc/redis-server &\n\t(/home/chenwulou/redis-3.2.4/src/redis-server /home/chenwulou/redis-3.2.4/redis.conf &>/dev/null &)\n\t#关闭redis\n\tsrc/redis-cli shutdown\n\t```\n\n\t测试\n\n    ```\n    $ src/redis-cli\n    127.0.0.1:6379> set foo bar\n    OK\n    127.0.0.1:6379> get foo\n    \"bar\"\n    $\n    ```\n\n- MongoDB\n\n\t```\n\tyum install -y mongodb-org\n\t```\n\t```\n\tmongodb服务使用\n\n\t#启动\n\tservice mongod start\n\t#停止\n\tservice mongod stop\n\t#重启\n\tservice mongod restart\n\t#增加开机启动\n\tchkconfig mongod on\n\t```\n\n未完待续...\n\n","source":"_posts/linux下项目环境搭建部署.md","raw":"---\ntitle: linux下项目环境搭建部署\ndate: 2017-03-29 14:54:40\ntags: linux\ncategories: 技术\n---\n- centos7安装\n    不做展示,自行解决\n- 数据库安装:\n\n    ```\n    yum install mariadb mariadb-server\n    ```\n    1. 启动mariadb服务程序并添加到开机启动项中：\n    ```\n    [root@linuxprobe ~]# systemctl start mariadb\n    [root@linuxprobe ~]# systemctl enable mariadb\n    ```\n\t<!-- more --> \n    2. 为了保证数据库的安全性，一定要进行初始化工作：\n    \n    第1步：设定root用户密码。\n    第2步：删除匿名帐号。\n    第3步：禁止root用户从远程登陆。\n    第4步：删除test数据库并取消对其的访问权限。\n    第5步：刷新授权表，让初始化后的设定立即生效。\n    ```\n    [root@linuxprobe ~]# mysql_secure_installation\n    Enter current password for root (enter for none): 当前数据库密码为空，直接敲击回车。\n    Set root password? [Y/n] y\n    New password: 输入要为root用户设置的数据库密码。\n    Re-enter new password: 重复再输入一次密码。\n    Password updated successfully!\n    Remove anonymous users? [Y/n] y（删除匿名帐号）\n     ... Success!\n    Disallow root login remotely? [Y/n] y(禁止root用户从远程登陆)\n     ... Success!\n    Remove test database and access to it? [Y/n] y(删除test数据库并取消对其的访问权限)\n     - Dropping test database...\n     ... Success!\n     - Removing privileges on test database...\n     ... Success!\n    Reload privilege tables now? [Y/n] y(刷新授权表，让初始化后的设定立即生效)\n     ... Success!\n     ```\n    3. 设置防火墙对数据库服务的允许策略：\n    ```\n    [root@linuxprobe ~]# firewall-cmd --permanent --add-service=mysql\n    success\n    [root@linuxprobe ~]# firewall-cmd --reload\n    success\n    ```\n    4. 使用root用户登陆到数据库中：\n    ```\n    [root@linuxprobe ~]# mysql -u root -p\n    Enter password: 此处输入root用户在数据库中的密码。\n    Welcome to the MariaDB monitor. Commands end with ; or \\g.\n    ```\n    5. 创建一个新的数据库用户：\n    \n    创建数据库用户的命令:CREATE USER 用户名@主机名 IDENTIFIED BY '密码';\n    ```\n    MariaDB [(none)]> create user 'herakles'@'%' IDENTIFIED BY '123456';\n    Query OK, 0 rows affected (0.00 sec)\n    ```\n\t'%'允许远程登陆此用户\n\t6. 给予herakles用户对user表单的查询、更新、删除、插入权限：\n\t```\n\tMariaDB [mysql]> GRANT SELECT,UPDATE,DELETE,INSERT on mysql.user to luke@localhost;\n\tQuery OK, 0 rows affected (0.00 sec)\n\t```\n \n- redis\n\n    安装必要包\n    ```\n    yum install gcc\n    ```\n\n\t安装redis\n\t```\n\t#下载\n\twget http://download.redis.io/releases/redis-3.0.0.tar.gz\n\ttar zxvf redis-3.0.0.tar.gz\n\tcd redis-3.0.0\n\t#如果不加参数,linux下会报错\n\tmake MALLOC=libc\n\t```\n\n\t启动\n\t```\n\t#启动redis\n\tsrc/redis-server &\n\t(/home/chenwulou/redis-3.2.4/src/redis-server /home/chenwulou/redis-3.2.4/redis.conf &>/dev/null &)\n\t#关闭redis\n\tsrc/redis-cli shutdown\n\t```\n\n\t测试\n\n    ```\n    $ src/redis-cli\n    127.0.0.1:6379> set foo bar\n    OK\n    127.0.0.1:6379> get foo\n    \"bar\"\n    $\n    ```\n\n- MongoDB\n\n\t```\n\tyum install -y mongodb-org\n\t```\n\t```\n\tmongodb服务使用\n\n\t#启动\n\tservice mongod start\n\t#停止\n\tservice mongod stop\n\t#重启\n\tservice mongod restart\n\t#增加开机启动\n\tchkconfig mongod on\n\t```\n\n未完待续...\n\n","slug":"linux下项目环境搭建部署","published":1,"updated":"2017-04-26T08:44:40.362Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc594m000ecoqh6cd4acnb","content":"<ul>\n<li>centos7安装<br>  不做展示,自行解决</li>\n<li><p>数据库安装:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install mariadb mariadb-server</div></pre></td></tr></table></figure>\n<ol>\n<li><p>启动mariadb服务程序并添加到开机启动项中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@linuxprobe ~]# systemctl start mariadb</div><div class=\"line\">[root@linuxprobe ~]# systemctl enable mariadb</div></pre></td></tr></table></figure>\n<a id=\"more\"></a> </li>\n<li><p>为了保证数据库的安全性，一定要进行初始化工作：</p>\n<p>第1步：设定root用户密码。<br>第2步：删除匿名帐号。<br>第3步：禁止root用户从远程登陆。<br>第4步：删除test数据库并取消对其的访问权限。<br>第5步：刷新授权表，让初始化后的设定立即生效。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@linuxprobe ~]# mysql_secure_installation</div><div class=\"line\">Enter current password for root (enter for none): 当前数据库密码为空，直接敲击回车。</div><div class=\"line\">Set root password? [Y/n] y</div><div class=\"line\">New password: 输入要为root用户设置的数据库密码。</div><div class=\"line\">Re-enter new password: 重复再输入一次密码。</div><div class=\"line\">Password updated successfully!</div><div class=\"line\">Remove anonymous users? [Y/n] y（删除匿名帐号）</div><div class=\"line\"> ... Success!</div><div class=\"line\">Disallow root login remotely? [Y/n] y(禁止root用户从远程登陆)</div><div class=\"line\"> ... Success!</div><div class=\"line\">Remove test database and access to it? [Y/n] y(删除test数据库并取消对其的访问权限)</div><div class=\"line\"> - Dropping test database...</div><div class=\"line\"> ... Success!</div><div class=\"line\"> - Removing privileges on test database...</div><div class=\"line\"> ... Success!</div><div class=\"line\">Reload privilege tables now? [Y/n] y(刷新授权表，让初始化后的设定立即生效)</div><div class=\"line\"> ... Success!</div></pre></td></tr></table></figure>\n</li>\n<li><p>设置防火墙对数据库服务的允许策略：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@linuxprobe ~]# firewall-cmd --permanent --add-service=mysql</div><div class=\"line\">success</div><div class=\"line\">[root@linuxprobe ~]# firewall-cmd --reload</div><div class=\"line\">success</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用root用户登陆到数据库中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@linuxprobe ~]# mysql -u root -p</div><div class=\"line\">Enter password: 此处输入root用户在数据库中的密码。</div><div class=\"line\">Welcome to the MariaDB monitor. Commands end with ; or \\g.</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建一个新的数据库用户：</p>\n<p>创建数据库用户的命令:CREATE USER 用户名@主机名 IDENTIFIED BY ‘密码’;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">MariaDB [(none)]&gt; create user &apos;herakles&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;</div><div class=\"line\">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure>\n<p>‘%’允许远程登陆此用户</p>\n</li>\n<li>给予herakles用户对user表单的查询、更新、删除、插入权限：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">MariaDB [mysql]&gt; GRANT SELECT,UPDATE,DELETE,INSERT on mysql.user to luke@localhost;</div><div class=\"line\">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li><p>redis</p>\n<p>  安装必要包</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install gcc</div></pre></td></tr></table></figure>\n<p>  安装redis</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#下载</div><div class=\"line\">wget http://download.redis.io/releases/redis-3.0.0.tar.gz</div><div class=\"line\">tar zxvf redis-3.0.0.tar.gz</div><div class=\"line\">cd redis-3.0.0</div><div class=\"line\">#如果不加参数,linux下会报错</div><div class=\"line\">make MALLOC=libc</div></pre></td></tr></table></figure>\n<p>  启动</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#启动redis</div><div class=\"line\">src/redis-server &amp;</div><div class=\"line\">(/home/chenwulou/redis-3.2.4/src/redis-server /home/chenwulou/redis-3.2.4/redis.conf &amp;&gt;/dev/null &amp;)</div><div class=\"line\">#关闭redis</div><div class=\"line\">src/redis-cli shutdown</div></pre></td></tr></table></figure>\n<p>  测试</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ src/redis-cli</div><div class=\"line\">127.0.0.1:6379&gt; set foo bar</div><div class=\"line\">OK</div><div class=\"line\">127.0.0.1:6379&gt; get foo</div><div class=\"line\">&quot;bar&quot;</div><div class=\"line\">$</div></pre></td></tr></table></figure>\n</li>\n<li><p>MongoDB</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install -y mongodb-org</div></pre></td></tr></table></figure>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">mongodb服务使用</div><div class=\"line\"></div><div class=\"line\">#启动</div><div class=\"line\">service mongod start</div><div class=\"line\">#停止</div><div class=\"line\">service mongod stop</div><div class=\"line\">#重启</div><div class=\"line\">service mongod restart</div><div class=\"line\">#增加开机启动</div><div class=\"line\">chkconfig mongod on</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>未完待续…</p>\n","excerpt":"<ul>\n<li>centos7安装<br>  不做展示,自行解决</li>\n<li><p>数据库安装:</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install mariadb mariadb-server</div></pre></td></tr></table></figure>\n<ol>\n<li><p>启动mariadb服务程序并添加到开机启动项中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@linuxprobe ~]# systemctl start mariadb</div><div class=\"line\">[root@linuxprobe ~]# systemctl enable mariadb</div></pre></td></tr></table></figure>","more":"</li>\n<li><p>为了保证数据库的安全性，一定要进行初始化工作：</p>\n<p>第1步：设定root用户密码。<br>第2步：删除匿名帐号。<br>第3步：禁止root用户从远程登陆。<br>第4步：删除test数据库并取消对其的访问权限。<br>第5步：刷新授权表，让初始化后的设定立即生效。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@linuxprobe ~]# mysql_secure_installation</div><div class=\"line\">Enter current password for root (enter for none): 当前数据库密码为空，直接敲击回车。</div><div class=\"line\">Set root password? [Y/n] y</div><div class=\"line\">New password: 输入要为root用户设置的数据库密码。</div><div class=\"line\">Re-enter new password: 重复再输入一次密码。</div><div class=\"line\">Password updated successfully!</div><div class=\"line\">Remove anonymous users? [Y/n] y（删除匿名帐号）</div><div class=\"line\"> ... Success!</div><div class=\"line\">Disallow root login remotely? [Y/n] y(禁止root用户从远程登陆)</div><div class=\"line\"> ... Success!</div><div class=\"line\">Remove test database and access to it? [Y/n] y(删除test数据库并取消对其的访问权限)</div><div class=\"line\"> - Dropping test database...</div><div class=\"line\"> ... Success!</div><div class=\"line\"> - Removing privileges on test database...</div><div class=\"line\"> ... Success!</div><div class=\"line\">Reload privilege tables now? [Y/n] y(刷新授权表，让初始化后的设定立即生效)</div><div class=\"line\"> ... Success!</div></pre></td></tr></table></figure>\n</li>\n<li><p>设置防火墙对数据库服务的允许策略：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@linuxprobe ~]# firewall-cmd --permanent --add-service=mysql</div><div class=\"line\">success</div><div class=\"line\">[root@linuxprobe ~]# firewall-cmd --reload</div><div class=\"line\">success</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用root用户登陆到数据库中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@linuxprobe ~]# mysql -u root -p</div><div class=\"line\">Enter password: 此处输入root用户在数据库中的密码。</div><div class=\"line\">Welcome to the MariaDB monitor. Commands end with ; or \\g.</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建一个新的数据库用户：</p>\n<p>创建数据库用户的命令:CREATE USER 用户名@主机名 IDENTIFIED BY ‘密码’;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">MariaDB [(none)]&gt; create user &apos;herakles&apos;@&apos;%&apos; IDENTIFIED BY &apos;123456&apos;;</div><div class=\"line\">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure>\n<p>‘%’允许远程登陆此用户</p>\n</li>\n<li>给予herakles用户对user表单的查询、更新、删除、插入权限：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">MariaDB [mysql]&gt; GRANT SELECT,UPDATE,DELETE,INSERT on mysql.user to luke@localhost;</div><div class=\"line\">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li><p>redis</p>\n<p>  安装必要包</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install gcc</div></pre></td></tr></table></figure>\n<p>  安装redis</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">#下载</div><div class=\"line\">wget http://download.redis.io/releases/redis-3.0.0.tar.gz</div><div class=\"line\">tar zxvf redis-3.0.0.tar.gz</div><div class=\"line\">cd redis-3.0.0</div><div class=\"line\">#如果不加参数,linux下会报错</div><div class=\"line\">make MALLOC=libc</div></pre></td></tr></table></figure>\n<p>  启动</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#启动redis</div><div class=\"line\">src/redis-server &amp;</div><div class=\"line\">(/home/chenwulou/redis-3.2.4/src/redis-server /home/chenwulou/redis-3.2.4/redis.conf &amp;&gt;/dev/null &amp;)</div><div class=\"line\">#关闭redis</div><div class=\"line\">src/redis-cli shutdown</div></pre></td></tr></table></figure>\n<p>  测试</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ src/redis-cli</div><div class=\"line\">127.0.0.1:6379&gt; set foo bar</div><div class=\"line\">OK</div><div class=\"line\">127.0.0.1:6379&gt; get foo</div><div class=\"line\">&quot;bar&quot;</div><div class=\"line\">$</div></pre></td></tr></table></figure>\n</li>\n<li><p>MongoDB</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install -y mongodb-org</div></pre></td></tr></table></figure>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">mongodb服务使用</div><div class=\"line\"></div><div class=\"line\">#启动</div><div class=\"line\">service mongod start</div><div class=\"line\">#停止</div><div class=\"line\">service mongod stop</div><div class=\"line\">#重启</div><div class=\"line\">service mongod restart</div><div class=\"line\">#增加开机启动</div><div class=\"line\">chkconfig mongod on</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>未完待续…</p>"},{"title":"mongodb操作日志","date":"2017-03-27T09:31:47.000Z","_content":"```javascript\n// 根据查询结果,替换某个字段的字符串\n\n// 模糊查询vcPicUrl中有'http:'字段的结果\nvar list = db.getCollection('tbArticle').find({\"vcPicUrl\":/http:/});\n// var index = 0;\n// list.toArray();\n// while(list.hasNext()){\n//         var url = list[index].vcPicUrl;\n//         print(url);\n//         var rurl = url.replace('http:','https:');\n//         print(rurl);\n//         db.getCollection('tbArticle').update({\"_id\":list[index]._id}, {$set:{'vcPicUrl':rurl}});\n//         index=index+1;\n//     }\nprint(list.length());\n// 将vcPicUrl中的http: 替换成 https:\n for (var i = 0; i < list.length(); i++) {\n        var article = list[i];\n        var url = article.vcPicUrl;\n        var rurl = url.replace('http:','https:');\n        db.getCollection('tbArticle').update({\"_id\":article._id}, {$set:{'vcPicUrl':rurl}});\n     }\n     print(\"success\")\n```","source":"_posts/mongodb操作日志.md","raw":"---\ntitle: mongodb操作日志\ndate: 2017-03-27 17:31:47\ntags: [mongodb,nosql]\ncategories: 技术\n---\n```javascript\n// 根据查询结果,替换某个字段的字符串\n\n// 模糊查询vcPicUrl中有'http:'字段的结果\nvar list = db.getCollection('tbArticle').find({\"vcPicUrl\":/http:/});\n// var index = 0;\n// list.toArray();\n// while(list.hasNext()){\n//         var url = list[index].vcPicUrl;\n//         print(url);\n//         var rurl = url.replace('http:','https:');\n//         print(rurl);\n//         db.getCollection('tbArticle').update({\"_id\":list[index]._id}, {$set:{'vcPicUrl':rurl}});\n//         index=index+1;\n//     }\nprint(list.length());\n// 将vcPicUrl中的http: 替换成 https:\n for (var i = 0; i < list.length(); i++) {\n        var article = list[i];\n        var url = article.vcPicUrl;\n        var rurl = url.replace('http:','https:');\n        db.getCollection('tbArticle').update({\"_id\":article._id}, {$set:{'vcPicUrl':rurl}});\n     }\n     print(\"success\")\n```","slug":"mongodb操作日志","published":1,"updated":"2017-04-26T08:44:44.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc594r000jcoqhu5dr1kg6","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 根据查询结果,替换某个字段的字符串</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 模糊查询vcPicUrl中有'http:'字段的结果</span></div><div class=\"line\"><span class=\"keyword\">var</span> list = db.getCollection(<span class=\"string\">'tbArticle'</span>).find(&#123;<span class=\"string\">\"vcPicUrl\"</span>:<span class=\"regexp\">/http:/</span>&#125;);</div><div class=\"line\"><span class=\"comment\">// var index = 0;</span></div><div class=\"line\"><span class=\"comment\">// list.toArray();</span></div><div class=\"line\"><span class=\"comment\">// while(list.hasNext())&#123;</span></div><div class=\"line\"><span class=\"comment\">//         var url = list[index].vcPicUrl;</span></div><div class=\"line\"><span class=\"comment\">//         print(url);</span></div><div class=\"line\"><span class=\"comment\">//         var rurl = url.replace('http:','https:');</span></div><div class=\"line\"><span class=\"comment\">//         print(rurl);</span></div><div class=\"line\"><span class=\"comment\">//         db.getCollection('tbArticle').update(&#123;\"_id\":list[index]._id&#125;, &#123;$set:&#123;'vcPicUrl':rurl&#125;&#125;);</span></div><div class=\"line\"><span class=\"comment\">//         index=index+1;</span></div><div class=\"line\"><span class=\"comment\">//     &#125;</span></div><div class=\"line\">print(list.length());</div><div class=\"line\"><span class=\"comment\">// 将vcPicUrl中的http: 替换成 https:</span></div><div class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; list.length(); i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> article = list[i];</div><div class=\"line\">        <span class=\"keyword\">var</span> url = article.vcPicUrl;</div><div class=\"line\">        <span class=\"keyword\">var</span> rurl = url.replace(<span class=\"string\">'http:'</span>,<span class=\"string\">'https:'</span>);</div><div class=\"line\">        db.getCollection(<span class=\"string\">'tbArticle'</span>).update(&#123;<span class=\"string\">\"_id\"</span>:article._id&#125;, &#123;<span class=\"attr\">$set</span>:&#123;<span class=\"string\">'vcPicUrl'</span>:rurl&#125;&#125;);</div><div class=\"line\">     &#125;</div><div class=\"line\">     print(<span class=\"string\">\"success\"</span>)</div></pre></td></tr></table></figure>","excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 根据查询结果,替换某个字段的字符串</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 模糊查询vcPicUrl中有'http:'字段的结果</span></div><div class=\"line\"><span class=\"keyword\">var</span> list = db.getCollection(<span class=\"string\">'tbArticle'</span>).find(&#123;<span class=\"string\">\"vcPicUrl\"</span>:<span class=\"regexp\">/http:/</span>&#125;);</div><div class=\"line\"><span class=\"comment\">// var index = 0;</span></div><div class=\"line\"><span class=\"comment\">// list.toArray();</span></div><div class=\"line\"><span class=\"comment\">// while(list.hasNext())&#123;</span></div><div class=\"line\"><span class=\"comment\">//         var url = list[index].vcPicUrl;</span></div><div class=\"line\"><span class=\"comment\">//         print(url);</span></div><div class=\"line\"><span class=\"comment\">//         var rurl = url.replace('http:','https:');</span></div><div class=\"line\"><span class=\"comment\">//         print(rurl);</span></div><div class=\"line\"><span class=\"comment\">//         db.getCollection('tbArticle').update(&#123;\"_id\":list[index]._id&#125;, &#123;$set:&#123;'vcPicUrl':rurl&#125;&#125;);</span></div><div class=\"line\"><span class=\"comment\">//         index=index+1;</span></div><div class=\"line\"><span class=\"comment\">//     &#125;</span></div><div class=\"line\">print(list.length());</div><div class=\"line\"><span class=\"comment\">// 将vcPicUrl中的http: 替换成 https:</span></div><div class=\"line\"> <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; list.length(); i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">var</span> article = list[i];</div><div class=\"line\">        <span class=\"keyword\">var</span> url = article.vcPicUrl;</div><div class=\"line\">        <span class=\"keyword\">var</span> rurl = url.replace(<span class=\"string\">'http:'</span>,<span class=\"string\">'https:'</span>);</div><div class=\"line\">        db.getCollection(<span class=\"string\">'tbArticle'</span>).update(&#123;<span class=\"string\">\"_id\"</span>:article._id&#125;, &#123;<span class=\"attr\">$set</span>:&#123;<span class=\"string\">'vcPicUrl'</span>:rurl&#125;&#125;);</div><div class=\"line\">     &#125;</div><div class=\"line\">     print(<span class=\"string\">\"success\"</span>)</div></pre></td></tr></table></figure>"},{"title":"spring IoC AOP","date":"2017-07-04T06:48:19.000Z","_content":"spring用了这么久,发现自己对这俩了解的并没有非常深刻,故填坑.\n<!-- more -->\n## IoC\n首先来说IoC(Inversion of Control),控制反转,这名词大家很熟悉,也是Spring的核心.在没有Spring的时候,在一个对象中，如果要使用另外的对象，就必须得到它(自己new一个，或者从JNDI中查询一个)，使用完之后还要将对象销毁(比如Connection等)，对象始终会和其他的接口或类藕合起来。而IOC的思想是: Spring容器来实现这些相互依赖对象的创建、协调工作。对象只需要关系业务逻辑本身就可以了。从这方面来说，对象如何得到他的协作对象的责任被反转了(IoC).就是由spring来负责控制对象的生命周期和对象间的关系.\n\n再来举一个简单的例子说明一下这个IoC吧:\n就拿找对象来说吧,传统的找对象,得到处找自己喜欢的妹纸,然后打听电话,微信,然后想办法认识啊,找机会约会啊,然后才在一起,过程很复杂,各种耦合啊,比如约会就跟打听电话,微信,找机会约会耦合在了一起.\n自从有了婚介所(Spring)我啥都不用管,只管提要求啊,约会也不用自己操心啊.只管谈恋爱就行了啊.简单明了.\n\n整个过程不再由我自己控制，而是有婚介所这样一个类似容器的机构来控制。Spring所倡导的开发方式就是如此，所有的类都会在spring容器中登记，告诉spring你是个什么东西，你需要什么东西，然后spring会在系统运行到适当的时候，把你要的东西主动给你，同时也把你交给其他需要你的东西。所有的类的创建、销毁都由 spring来控制，也就是说控制对象生存周期的不再是引用它的对象，而是spring。对于某个具体的对象而言，以前是它控制其他对象，现在是所有对象都被spring控制，所以这叫控制反转。\n\n最后要说一下和控制反转(IoC)关系密切的依赖注入(DI)\nIoC的一个重点是在系统运行中，动态的向某个对象提供它所需要的其他对象。这一点是通过DI(Dependency Injection，依赖注入)来实现的。比如对象A需要操作数据库，以前我们总是要在A中自己编写代码来获得一个Connection对象，有了 spring我们就只需要告诉spring，A中需要一个Connection，至于这个Connection怎么构造，何时构造，A不需要知道。在系统运行时，spring会在适当的时候制造一个Connection，然后像打针一样，注射到A当中，这样就完成了对各个对象之间关系的控制。A需要依赖 Connection才能正常运行，而这个Connection是由spring注入到A中的，依赖注入的名字就这么来的。那么DI是如何实现的呢？ Java 1.3之后一个重要特征是反射(reflection)，它允许程序在运行的时候动态的生成对象、执行对象的方法、改变对象的属性，spring就是通过反射来实现注入的。\n\n## AOP\nAOP(Aspect-OrientedProgramming，面向切面编程),利用“横切”的技术，剖解开封装的对象内部，并将那些影响了多个类的公共行为封装到一个可重用模块，并将其名为“Aspect”，即方面。所谓“方面”，简单地说，就是将那些与业务无关，却为业务模块所共同调用的逻辑或责任封装起来，便于减少系统的重复代码，降低模块间的耦合度，并有利于未来的可操作性和可维护性。AOP代表的是一个横向的关系，如果说“对象”是一个空心的圆柱体，其中封装的是对象的属性和行为；那么面向方面编程的方法，就仿佛一把利刃，将这些空心圆柱体剖开，以获得其内部的消息。而剖开的切面，也就是所谓的“方面”了。\n\n实现AOP的技术，主要分为两大类：一是采用动态代理技术，利用截取消息的方式，对该消息进行装饰，以取代原有对象行为的执行；二是采用静态织入的方式，引入特定的语法创建“方面”，从而使得编译器可以在编译期间织入有关“方面”的代码。\n\n# AOP相关概念\n- 方面（Aspect）：一个关注点的模块化，这个关注点实现可能另外横切多个对象。事务管理是J2EE应用中一个很好的横切关注点例子。方面用Spring的Advisor或拦截器实现。\n- 连接点（Joinpoint）: 程序执行过程中明确的点，如方法的调用或特定的异常被抛出；\n- 通知（Advice）: 在特定的连接点，AOP框架执行的动作。许多AOP框架包括Spring都是以拦截器做通知模型，维护一个“围绕”连接点的拦截器链。Spring中定义了四个advice: BeforeAdvice, AfterAdvice, ThrowAdvice和DynamicIntroductionAdvice；\n- 切入点（Pointcut）: 指定一个通知将被引发的一系列连接点的集合。AOP框架必须允许开发者指定切入点：例如，使用正则表达式。 Spring定义了Pointcut接口，用来组合MethodMatcher和ClassFilter，可以通过名字很清楚的理解，MethodMatcher是用来检查目标类的方法是否可以被应用此通知，而ClassFilter是用来检查Pointcut是否应该应用到目标类上；\n- 切点标志符(designator)：execution、within、this 与 target、bean、args、@annotation；\n- AOP代理对象生成:JDK动态代理和CGLib代理。CGLib所创建的动态代理对象的性能比JDK所创建的代理对象性能高不少，大概10倍，但CGLib在创建代理对象时所花费的时间却比JDK动态代理多大概8倍，所以对于singleton的代理对象或者具有实例池的代理，因为无需频繁的创建新的实例，所以比较适合CGLib动态代理技术，反之则适用于JDK动态代理技术。另外，由于CGLib采用动态创建子类的方式生成代理对象，所以不能对目标类中的final，private等方法进行处理。所以，大家需要根据实际的情况选择使用什么样的代理了。同样的，Spring的AOP编程中相关的ProxyFactory代理工厂内部就是使用JDK动态代理或CGLib动态代理的，通过动态代理，将增强（advice)应用到目标类中。\n\n\n# 使用AOP\n可以通过配置文件或者编程的方式来使用Spring AOP。\n \n配置可以通过xml文件来进行，大概有四种方式：\n1.配置ProxyFactoryBean，显式地设置advisors, advice, target等\n2.配置AutoProxyCreator，这种方式下，还是如以前一样使用定义的bean，但是从容器中获得的其实已经是代理对象\n3.通过<aop:config>来配置\n4.通过<aop: aspectj-autoproxy>来配置，使用AspectJ的注解来标识通知及切入点\n \n也可以直接使用ProxyFactory来以编程的方式使用Spring AOP，通过ProxyFactory提供的方法可以设置target对象, advisor等相关配置，最终通过 getProxy()方法来获取代理对象\n\n# AOP使用场景\n- Authentication 权限\n- Caching 缓存\n- Context passing 内容传递\n- Error handling 错误处理\n- Lazy loading　懒加载\n- Debugging　　调试\n- logging, tracing, profiling and monitoring　记录跟踪　优化　校准\n- Performance optimization　性能优化\n- Persistence　　持久化\n- Resource pooling　资源池\n- Synchronization　同步\n- Transactions 事务","source":"_posts/spring-IOC-AOP.md","raw":"---\ntitle: spring IoC AOP\ndate: 2017-07-04 14:48:19\ntags: [spring,java]\ncategories: 技术\n---\nspring用了这么久,发现自己对这俩了解的并没有非常深刻,故填坑.\n<!-- more -->\n## IoC\n首先来说IoC(Inversion of Control),控制反转,这名词大家很熟悉,也是Spring的核心.在没有Spring的时候,在一个对象中，如果要使用另外的对象，就必须得到它(自己new一个，或者从JNDI中查询一个)，使用完之后还要将对象销毁(比如Connection等)，对象始终会和其他的接口或类藕合起来。而IOC的思想是: Spring容器来实现这些相互依赖对象的创建、协调工作。对象只需要关系业务逻辑本身就可以了。从这方面来说，对象如何得到他的协作对象的责任被反转了(IoC).就是由spring来负责控制对象的生命周期和对象间的关系.\n\n再来举一个简单的例子说明一下这个IoC吧:\n就拿找对象来说吧,传统的找对象,得到处找自己喜欢的妹纸,然后打听电话,微信,然后想办法认识啊,找机会约会啊,然后才在一起,过程很复杂,各种耦合啊,比如约会就跟打听电话,微信,找机会约会耦合在了一起.\n自从有了婚介所(Spring)我啥都不用管,只管提要求啊,约会也不用自己操心啊.只管谈恋爱就行了啊.简单明了.\n\n整个过程不再由我自己控制，而是有婚介所这样一个类似容器的机构来控制。Spring所倡导的开发方式就是如此，所有的类都会在spring容器中登记，告诉spring你是个什么东西，你需要什么东西，然后spring会在系统运行到适当的时候，把你要的东西主动给你，同时也把你交给其他需要你的东西。所有的类的创建、销毁都由 spring来控制，也就是说控制对象生存周期的不再是引用它的对象，而是spring。对于某个具体的对象而言，以前是它控制其他对象，现在是所有对象都被spring控制，所以这叫控制反转。\n\n最后要说一下和控制反转(IoC)关系密切的依赖注入(DI)\nIoC的一个重点是在系统运行中，动态的向某个对象提供它所需要的其他对象。这一点是通过DI(Dependency Injection，依赖注入)来实现的。比如对象A需要操作数据库，以前我们总是要在A中自己编写代码来获得一个Connection对象，有了 spring我们就只需要告诉spring，A中需要一个Connection，至于这个Connection怎么构造，何时构造，A不需要知道。在系统运行时，spring会在适当的时候制造一个Connection，然后像打针一样，注射到A当中，这样就完成了对各个对象之间关系的控制。A需要依赖 Connection才能正常运行，而这个Connection是由spring注入到A中的，依赖注入的名字就这么来的。那么DI是如何实现的呢？ Java 1.3之后一个重要特征是反射(reflection)，它允许程序在运行的时候动态的生成对象、执行对象的方法、改变对象的属性，spring就是通过反射来实现注入的。\n\n## AOP\nAOP(Aspect-OrientedProgramming，面向切面编程),利用“横切”的技术，剖解开封装的对象内部，并将那些影响了多个类的公共行为封装到一个可重用模块，并将其名为“Aspect”，即方面。所谓“方面”，简单地说，就是将那些与业务无关，却为业务模块所共同调用的逻辑或责任封装起来，便于减少系统的重复代码，降低模块间的耦合度，并有利于未来的可操作性和可维护性。AOP代表的是一个横向的关系，如果说“对象”是一个空心的圆柱体，其中封装的是对象的属性和行为；那么面向方面编程的方法，就仿佛一把利刃，将这些空心圆柱体剖开，以获得其内部的消息。而剖开的切面，也就是所谓的“方面”了。\n\n实现AOP的技术，主要分为两大类：一是采用动态代理技术，利用截取消息的方式，对该消息进行装饰，以取代原有对象行为的执行；二是采用静态织入的方式，引入特定的语法创建“方面”，从而使得编译器可以在编译期间织入有关“方面”的代码。\n\n# AOP相关概念\n- 方面（Aspect）：一个关注点的模块化，这个关注点实现可能另外横切多个对象。事务管理是J2EE应用中一个很好的横切关注点例子。方面用Spring的Advisor或拦截器实现。\n- 连接点（Joinpoint）: 程序执行过程中明确的点，如方法的调用或特定的异常被抛出；\n- 通知（Advice）: 在特定的连接点，AOP框架执行的动作。许多AOP框架包括Spring都是以拦截器做通知模型，维护一个“围绕”连接点的拦截器链。Spring中定义了四个advice: BeforeAdvice, AfterAdvice, ThrowAdvice和DynamicIntroductionAdvice；\n- 切入点（Pointcut）: 指定一个通知将被引发的一系列连接点的集合。AOP框架必须允许开发者指定切入点：例如，使用正则表达式。 Spring定义了Pointcut接口，用来组合MethodMatcher和ClassFilter，可以通过名字很清楚的理解，MethodMatcher是用来检查目标类的方法是否可以被应用此通知，而ClassFilter是用来检查Pointcut是否应该应用到目标类上；\n- 切点标志符(designator)：execution、within、this 与 target、bean、args、@annotation；\n- AOP代理对象生成:JDK动态代理和CGLib代理。CGLib所创建的动态代理对象的性能比JDK所创建的代理对象性能高不少，大概10倍，但CGLib在创建代理对象时所花费的时间却比JDK动态代理多大概8倍，所以对于singleton的代理对象或者具有实例池的代理，因为无需频繁的创建新的实例，所以比较适合CGLib动态代理技术，反之则适用于JDK动态代理技术。另外，由于CGLib采用动态创建子类的方式生成代理对象，所以不能对目标类中的final，private等方法进行处理。所以，大家需要根据实际的情况选择使用什么样的代理了。同样的，Spring的AOP编程中相关的ProxyFactory代理工厂内部就是使用JDK动态代理或CGLib动态代理的，通过动态代理，将增强（advice)应用到目标类中。\n\n\n# 使用AOP\n可以通过配置文件或者编程的方式来使用Spring AOP。\n \n配置可以通过xml文件来进行，大概有四种方式：\n1.配置ProxyFactoryBean，显式地设置advisors, advice, target等\n2.配置AutoProxyCreator，这种方式下，还是如以前一样使用定义的bean，但是从容器中获得的其实已经是代理对象\n3.通过<aop:config>来配置\n4.通过<aop: aspectj-autoproxy>来配置，使用AspectJ的注解来标识通知及切入点\n \n也可以直接使用ProxyFactory来以编程的方式使用Spring AOP，通过ProxyFactory提供的方法可以设置target对象, advisor等相关配置，最终通过 getProxy()方法来获取代理对象\n\n# AOP使用场景\n- Authentication 权限\n- Caching 缓存\n- Context passing 内容传递\n- Error handling 错误处理\n- Lazy loading　懒加载\n- Debugging　　调试\n- logging, tracing, profiling and monitoring　记录跟踪　优化　校准\n- Performance optimization　性能优化\n- Persistence　　持久化\n- Resource pooling　资源池\n- Synchronization　同步\n- Transactions 事务","slug":"spring-IOC-AOP","published":1,"updated":"2017-07-04T08:49:53.020Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc594u000mcoqhd8myyz8r","content":"<p>spring用了这么久,发现自己对这俩了解的并没有非常深刻,故填坑.<br><a id=\"more\"></a></p>\n<h2 id=\"IoC\"><a href=\"#IoC\" class=\"headerlink\" title=\"IoC\"></a>IoC</h2><p>首先来说IoC(Inversion of Control),控制反转,这名词大家很熟悉,也是Spring的核心.在没有Spring的时候,在一个对象中，如果要使用另外的对象，就必须得到它(自己new一个，或者从JNDI中查询一个)，使用完之后还要将对象销毁(比如Connection等)，对象始终会和其他的接口或类藕合起来。而IOC的思想是: Spring容器来实现这些相互依赖对象的创建、协调工作。对象只需要关系业务逻辑本身就可以了。从这方面来说，对象如何得到他的协作对象的责任被反转了(IoC).就是由spring来负责控制对象的生命周期和对象间的关系.</p>\n<p>再来举一个简单的例子说明一下这个IoC吧:<br>就拿找对象来说吧,传统的找对象,得到处找自己喜欢的妹纸,然后打听电话,微信,然后想办法认识啊,找机会约会啊,然后才在一起,过程很复杂,各种耦合啊,比如约会就跟打听电话,微信,找机会约会耦合在了一起.<br>自从有了婚介所(Spring)我啥都不用管,只管提要求啊,约会也不用自己操心啊.只管谈恋爱就行了啊.简单明了.</p>\n<p>整个过程不再由我自己控制，而是有婚介所这样一个类似容器的机构来控制。Spring所倡导的开发方式就是如此，所有的类都会在spring容器中登记，告诉spring你是个什么东西，你需要什么东西，然后spring会在系统运行到适当的时候，把你要的东西主动给你，同时也把你交给其他需要你的东西。所有的类的创建、销毁都由 spring来控制，也就是说控制对象生存周期的不再是引用它的对象，而是spring。对于某个具体的对象而言，以前是它控制其他对象，现在是所有对象都被spring控制，所以这叫控制反转。</p>\n<p>最后要说一下和控制反转(IoC)关系密切的依赖注入(DI)<br>IoC的一个重点是在系统运行中，动态的向某个对象提供它所需要的其他对象。这一点是通过DI(Dependency Injection，依赖注入)来实现的。比如对象A需要操作数据库，以前我们总是要在A中自己编写代码来获得一个Connection对象，有了 spring我们就只需要告诉spring，A中需要一个Connection，至于这个Connection怎么构造，何时构造，A不需要知道。在系统运行时，spring会在适当的时候制造一个Connection，然后像打针一样，注射到A当中，这样就完成了对各个对象之间关系的控制。A需要依赖 Connection才能正常运行，而这个Connection是由spring注入到A中的，依赖注入的名字就这么来的。那么DI是如何实现的呢？ Java 1.3之后一个重要特征是反射(reflection)，它允许程序在运行的时候动态的生成对象、执行对象的方法、改变对象的属性，spring就是通过反射来实现注入的。</p>\n<h2 id=\"AOP\"><a href=\"#AOP\" class=\"headerlink\" title=\"AOP\"></a>AOP</h2><p>AOP(Aspect-OrientedProgramming，面向切面编程),利用“横切”的技术，剖解开封装的对象内部，并将那些影响了多个类的公共行为封装到一个可重用模块，并将其名为“Aspect”，即方面。所谓“方面”，简单地说，就是将那些与业务无关，却为业务模块所共同调用的逻辑或责任封装起来，便于减少系统的重复代码，降低模块间的耦合度，并有利于未来的可操作性和可维护性。AOP代表的是一个横向的关系，如果说“对象”是一个空心的圆柱体，其中封装的是对象的属性和行为；那么面向方面编程的方法，就仿佛一把利刃，将这些空心圆柱体剖开，以获得其内部的消息。而剖开的切面，也就是所谓的“方面”了。</p>\n<p>实现AOP的技术，主要分为两大类：一是采用动态代理技术，利用截取消息的方式，对该消息进行装饰，以取代原有对象行为的执行；二是采用静态织入的方式，引入特定的语法创建“方面”，从而使得编译器可以在编译期间织入有关“方面”的代码。</p>\n<h1 id=\"AOP相关概念\"><a href=\"#AOP相关概念\" class=\"headerlink\" title=\"AOP相关概念\"></a>AOP相关概念</h1><ul>\n<li>方面（Aspect）：一个关注点的模块化，这个关注点实现可能另外横切多个对象。事务管理是J2EE应用中一个很好的横切关注点例子。方面用Spring的Advisor或拦截器实现。</li>\n<li>连接点（Joinpoint）: 程序执行过程中明确的点，如方法的调用或特定的异常被抛出；</li>\n<li>通知（Advice）: 在特定的连接点，AOP框架执行的动作。许多AOP框架包括Spring都是以拦截器做通知模型，维护一个“围绕”连接点的拦截器链。Spring中定义了四个advice: BeforeAdvice, AfterAdvice, ThrowAdvice和DynamicIntroductionAdvice；</li>\n<li>切入点（Pointcut）: 指定一个通知将被引发的一系列连接点的集合。AOP框架必须允许开发者指定切入点：例如，使用正则表达式。 Spring定义了Pointcut接口，用来组合MethodMatcher和ClassFilter，可以通过名字很清楚的理解，MethodMatcher是用来检查目标类的方法是否可以被应用此通知，而ClassFilter是用来检查Pointcut是否应该应用到目标类上；</li>\n<li>切点标志符(designator)：execution、within、this 与 target、bean、args、@annotation；</li>\n<li>AOP代理对象生成:JDK动态代理和CGLib代理。CGLib所创建的动态代理对象的性能比JDK所创建的代理对象性能高不少，大概10倍，但CGLib在创建代理对象时所花费的时间却比JDK动态代理多大概8倍，所以对于singleton的代理对象或者具有实例池的代理，因为无需频繁的创建新的实例，所以比较适合CGLib动态代理技术，反之则适用于JDK动态代理技术。另外，由于CGLib采用动态创建子类的方式生成代理对象，所以不能对目标类中的final，private等方法进行处理。所以，大家需要根据实际的情况选择使用什么样的代理了。同样的，Spring的AOP编程中相关的ProxyFactory代理工厂内部就是使用JDK动态代理或CGLib动态代理的，通过动态代理，将增强（advice)应用到目标类中。</li>\n</ul>\n<h1 id=\"使用AOP\"><a href=\"#使用AOP\" class=\"headerlink\" title=\"使用AOP\"></a>使用AOP</h1><p>可以通过配置文件或者编程的方式来使用Spring AOP。</p>\n<p>配置可以通过xml文件来进行，大概有四种方式：<br>1.配置ProxyFactoryBean，显式地设置advisors, advice, target等<br>2.配置AutoProxyCreator，这种方式下，还是如以前一样使用定义的bean，但是从容器中获得的其实已经是代理对象<br>3.通过<aop:config>来配置<br>4.通过<aop: aspectj-autoproxy=\"\">来配置，使用AspectJ的注解来标识通知及切入点</aop:></aop:config></p>\n<p>也可以直接使用ProxyFactory来以编程的方式使用Spring AOP，通过ProxyFactory提供的方法可以设置target对象, advisor等相关配置，最终通过 getProxy()方法来获取代理对象</p>\n<h1 id=\"AOP使用场景\"><a href=\"#AOP使用场景\" class=\"headerlink\" title=\"AOP使用场景\"></a>AOP使用场景</h1><ul>\n<li>Authentication 权限</li>\n<li>Caching 缓存</li>\n<li>Context passing 内容传递</li>\n<li>Error handling 错误处理</li>\n<li>Lazy loading　懒加载</li>\n<li>Debugging　　调试</li>\n<li>logging, tracing, profiling and monitoring　记录跟踪　优化　校准</li>\n<li>Performance optimization　性能优化</li>\n<li>Persistence　　持久化</li>\n<li>Resource pooling　资源池</li>\n<li>Synchronization　同步</li>\n<li>Transactions 事务</li>\n</ul>\n","excerpt":"<p>spring用了这么久,发现自己对这俩了解的并没有非常深刻,故填坑.<br>","more":"</p>\n<h2 id=\"IoC\"><a href=\"#IoC\" class=\"headerlink\" title=\"IoC\"></a>IoC</h2><p>首先来说IoC(Inversion of Control),控制反转,这名词大家很熟悉,也是Spring的核心.在没有Spring的时候,在一个对象中，如果要使用另外的对象，就必须得到它(自己new一个，或者从JNDI中查询一个)，使用完之后还要将对象销毁(比如Connection等)，对象始终会和其他的接口或类藕合起来。而IOC的思想是: Spring容器来实现这些相互依赖对象的创建、协调工作。对象只需要关系业务逻辑本身就可以了。从这方面来说，对象如何得到他的协作对象的责任被反转了(IoC).就是由spring来负责控制对象的生命周期和对象间的关系.</p>\n<p>再来举一个简单的例子说明一下这个IoC吧:<br>就拿找对象来说吧,传统的找对象,得到处找自己喜欢的妹纸,然后打听电话,微信,然后想办法认识啊,找机会约会啊,然后才在一起,过程很复杂,各种耦合啊,比如约会就跟打听电话,微信,找机会约会耦合在了一起.<br>自从有了婚介所(Spring)我啥都不用管,只管提要求啊,约会也不用自己操心啊.只管谈恋爱就行了啊.简单明了.</p>\n<p>整个过程不再由我自己控制，而是有婚介所这样一个类似容器的机构来控制。Spring所倡导的开发方式就是如此，所有的类都会在spring容器中登记，告诉spring你是个什么东西，你需要什么东西，然后spring会在系统运行到适当的时候，把你要的东西主动给你，同时也把你交给其他需要你的东西。所有的类的创建、销毁都由 spring来控制，也就是说控制对象生存周期的不再是引用它的对象，而是spring。对于某个具体的对象而言，以前是它控制其他对象，现在是所有对象都被spring控制，所以这叫控制反转。</p>\n<p>最后要说一下和控制反转(IoC)关系密切的依赖注入(DI)<br>IoC的一个重点是在系统运行中，动态的向某个对象提供它所需要的其他对象。这一点是通过DI(Dependency Injection，依赖注入)来实现的。比如对象A需要操作数据库，以前我们总是要在A中自己编写代码来获得一个Connection对象，有了 spring我们就只需要告诉spring，A中需要一个Connection，至于这个Connection怎么构造，何时构造，A不需要知道。在系统运行时，spring会在适当的时候制造一个Connection，然后像打针一样，注射到A当中，这样就完成了对各个对象之间关系的控制。A需要依赖 Connection才能正常运行，而这个Connection是由spring注入到A中的，依赖注入的名字就这么来的。那么DI是如何实现的呢？ Java 1.3之后一个重要特征是反射(reflection)，它允许程序在运行的时候动态的生成对象、执行对象的方法、改变对象的属性，spring就是通过反射来实现注入的。</p>\n<h2 id=\"AOP\"><a href=\"#AOP\" class=\"headerlink\" title=\"AOP\"></a>AOP</h2><p>AOP(Aspect-OrientedProgramming，面向切面编程),利用“横切”的技术，剖解开封装的对象内部，并将那些影响了多个类的公共行为封装到一个可重用模块，并将其名为“Aspect”，即方面。所谓“方面”，简单地说，就是将那些与业务无关，却为业务模块所共同调用的逻辑或责任封装起来，便于减少系统的重复代码，降低模块间的耦合度，并有利于未来的可操作性和可维护性。AOP代表的是一个横向的关系，如果说“对象”是一个空心的圆柱体，其中封装的是对象的属性和行为；那么面向方面编程的方法，就仿佛一把利刃，将这些空心圆柱体剖开，以获得其内部的消息。而剖开的切面，也就是所谓的“方面”了。</p>\n<p>实现AOP的技术，主要分为两大类：一是采用动态代理技术，利用截取消息的方式，对该消息进行装饰，以取代原有对象行为的执行；二是采用静态织入的方式，引入特定的语法创建“方面”，从而使得编译器可以在编译期间织入有关“方面”的代码。</p>\n<h1 id=\"AOP相关概念\"><a href=\"#AOP相关概念\" class=\"headerlink\" title=\"AOP相关概念\"></a>AOP相关概念</h1><ul>\n<li>方面（Aspect）：一个关注点的模块化，这个关注点实现可能另外横切多个对象。事务管理是J2EE应用中一个很好的横切关注点例子。方面用Spring的Advisor或拦截器实现。</li>\n<li>连接点（Joinpoint）: 程序执行过程中明确的点，如方法的调用或特定的异常被抛出；</li>\n<li>通知（Advice）: 在特定的连接点，AOP框架执行的动作。许多AOP框架包括Spring都是以拦截器做通知模型，维护一个“围绕”连接点的拦截器链。Spring中定义了四个advice: BeforeAdvice, AfterAdvice, ThrowAdvice和DynamicIntroductionAdvice；</li>\n<li>切入点（Pointcut）: 指定一个通知将被引发的一系列连接点的集合。AOP框架必须允许开发者指定切入点：例如，使用正则表达式。 Spring定义了Pointcut接口，用来组合MethodMatcher和ClassFilter，可以通过名字很清楚的理解，MethodMatcher是用来检查目标类的方法是否可以被应用此通知，而ClassFilter是用来检查Pointcut是否应该应用到目标类上；</li>\n<li>切点标志符(designator)：execution、within、this 与 target、bean、args、@annotation；</li>\n<li>AOP代理对象生成:JDK动态代理和CGLib代理。CGLib所创建的动态代理对象的性能比JDK所创建的代理对象性能高不少，大概10倍，但CGLib在创建代理对象时所花费的时间却比JDK动态代理多大概8倍，所以对于singleton的代理对象或者具有实例池的代理，因为无需频繁的创建新的实例，所以比较适合CGLib动态代理技术，反之则适用于JDK动态代理技术。另外，由于CGLib采用动态创建子类的方式生成代理对象，所以不能对目标类中的final，private等方法进行处理。所以，大家需要根据实际的情况选择使用什么样的代理了。同样的，Spring的AOP编程中相关的ProxyFactory代理工厂内部就是使用JDK动态代理或CGLib动态代理的，通过动态代理，将增强（advice)应用到目标类中。</li>\n</ul>\n<h1 id=\"使用AOP\"><a href=\"#使用AOP\" class=\"headerlink\" title=\"使用AOP\"></a>使用AOP</h1><p>可以通过配置文件或者编程的方式来使用Spring AOP。</p>\n<p>配置可以通过xml文件来进行，大概有四种方式：<br>1.配置ProxyFactoryBean，显式地设置advisors, advice, target等<br>2.配置AutoProxyCreator，这种方式下，还是如以前一样使用定义的bean，但是从容器中获得的其实已经是代理对象<br>3.通过<aop:config>来配置<br>4.通过<aop: aspectj-autoproxy>来配置，使用AspectJ的注解来标识通知及切入点</p>\n<p>也可以直接使用ProxyFactory来以编程的方式使用Spring AOP，通过ProxyFactory提供的方法可以设置target对象, advisor等相关配置，最终通过 getProxy()方法来获取代理对象</p>\n<h1 id=\"AOP使用场景\"><a href=\"#AOP使用场景\" class=\"headerlink\" title=\"AOP使用场景\"></a>AOP使用场景</h1><ul>\n<li>Authentication 权限</li>\n<li>Caching 缓存</li>\n<li>Context passing 内容传递</li>\n<li>Error handling 错误处理</li>\n<li>Lazy loading　懒加载</li>\n<li>Debugging　　调试</li>\n<li>logging, tracing, profiling and monitoring　记录跟踪　优化　校准</li>\n<li>Performance optimization　性能优化</li>\n<li>Persistence　　持久化</li>\n<li>Resource pooling　资源池</li>\n<li>Synchronization　同步</li>\n<li>Transactions 事务</li>\n</ul>"},{"title":"spring data jpa 查询使用案例","date":"2017-03-27T09:29:11.000Z","_content":"\n```java\n/**\n * \n */\npublic String getSumAmount(final AcctDtlSearchDto searchDto, final ERecvPayFlag recvPayFlag) {  \n\tString startDate = searchDto.getStartDate();                                                \n\tString endDate = searchDto.getEndDate();                                                    \n\tEUseType useType = searchDto.getUseType();                                                  \n\tCriteriaBuilder builder = em.getCriteriaBuilder();                                          \n\tCriteriaQuery<BigDecimal> query = builder.createQuery(BigDecimal.class);                    \n\tRoot<SubAcctTrxJnlPo> root = query.from(SubAcctTrxJnlPo.class);                             \n\tPredicate predicate = builder.conjunction();                                                \n\tList<Expression<Boolean>> expressions = predicate.getExpressions();                         \n\tExpression<BigDecimal> sumTrxAmt = builder.sum(root.<BigDecimal> get(\"trxAmt\"));            \n\tif (StringUtils.isNotBlank(startDate)) {                                                    \n\t\texpressions.add(builder.greaterThanOrEqualTo(root.<String> get(\"trxDate\"), startDate)); \n\t}                                                                                           \n\tif (StringUtils.isNotBlank(endDate)) {                                                      \n\t\texpressions.add(builder.lessThanOrEqualTo(root.<String> get(\"trxDate\"), endDate));      \n\t}                                                                                           \n\tif (EUseType.ALL != useType) {                                                              \n\t\texpressions.add(builder.equal(root.<EUseType> get(\"useType\"), useType));                \n\t}                                                                                           \n\tif (null != recvPayFlag) {                                                                  \n\t\texpressions.add(builder.equal(root.<ERecvPayFlag> get(\"recvPayFlag\"), recvPayFlag));    \n\t}                                                                                           \n\tquery.where(predicate);                                                                     \n\tquery.select(sumTrxAmt);                                                                    \n\tBigDecimal result = em.createQuery(query).getSingleResult();                                \n\tresult = (null == result ? BigDecimal.ZERO : result);                                       \n\treturn result.toString();                                                                   \n}                   \n```\n<!--more-->\n```java\n/**\n * \n */\nprivate BigDecimal getWarrantedProjectAmt(final String userId) {\n\tList<ProjectPo> list = projectRepository.findAll(new Specification<ProjectPo>() {\n\t@Override\n\tpublic Predicate toPredicate(Root<ProjectPo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\tPredicate predicate = cb.conjunction();\n\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\texpressions.add(cb.equal(root.<String> get(\"wrtrId\"), userId));\n\t\tList<EProjStatus> inStatus = Arrays.asList(EProjStatus.RISK_AUDIT, EProjStatus.RISK_RATING);\n\t\texpressions.add(root.<EProjStatus> get(\"status\").in(inStatus));\n\t\treturn predicate;\n\t\t}\n\t});\n\tBigDecimal warrantAmt = BigDecimal.ZERO;\n\tfor (ProjectPo proj : list) {\n\t\twarrantAmt = warrantAmt.add(proj.getProjectAmt());\n\t}\n\treturn warrantAmt;\n}\n\n\n\n/**\n * \n */\npublic List<ProdServItemDto> getItems(final ProdServItemSearchDto searchDto, final String currUserId){\n\tlong times = System.currentTimeMillis();\n\tList<ProdServInfoPo> list = prodServInfoRepo.findAll(new Specification<ProdServInfoPo>(){\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<ProdServInfoPo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tString workDate = CommonBusinessUtil.getCurrentWorkDate();\n                List<Expression<Boolean>> expressions = predicate.getExpressions();\n                // 已授信过滤\n                expressions.add(cb.exists(getProdServParamSubQuery(query, cb, workDate, root.<String>get(\"userId\"))));\n                if(StringUtils.isNotBlank(searchDto.getName())){\n                \texpressions.add(cb.like(root.<EnterpriseInfoPo>get(\"enterpriseInfoPo\").<String>get(\"name\"), \"%\"+searchDto.getName()+\"%\"));\n                }\n                if(StringUtils.isNotBlank(searchDto.getTelephone())){\n                \texpressions.add(cb.like(root.<EnterpriseInfoPo>get(\"enterpriseInfoPo\").<String>get(\"telephone\"), \"%\"+searchDto.getTelephone()+\"%\"));\n                }\n                Expression<Boolean> servProvTypes = root.<EWarrantProdServProvType> get(\"servProvType\").in(EWarrantProdServProvType.MICRO_CMPY, EWarrantProdServProvType.WRTR_CMPY);\n                Expression<Boolean> unionServProvType = cb.and(\n                \t\tcb.equal(root.<EWarrantProdServProvType> get(\"servProvType\"), EWarrantProdServProvType.UNION_CMPY), \n                \t\tcb.exists(getSubQuery(query, cb, currUserId, root.<String> get(\"userId\"))));\n                expressions.add(cb.or(servProvTypes, unionServProvType));\n                /** 如果是小贷,不显示自己 **/\n                expressions.add(cb.notEqual(root.<String>get(\"userId\"), currUserId));\n                return predicate;\n\t\t\t}\n\t\t\tprivate Subquery<String> getSubQuery(CriteriaQuery<?> query, \n\t\t\t\t\tCriteriaBuilder cb, String fncrId, Path<String> prodServUserId) {\n                Subquery<String> subQuery = query.subquery(String.class);\n                Root<ProdServInfoPo> prodServ = subQuery.from(ProdServInfoPo.class);\n                Join<ProdServInfoPo, ProdServGroupPo> prodServGroup = prodServ.join(\"prodServGroupList\", JoinType.INNER);\n                Join<ProdServGroupPo, GroupPo> group = prodServGroup.join(\"groupPo\", JoinType.INNER);\n                Join<GroupPo, GroupUserPo> groupUser = group.join(\"groupUserPoSet\", JoinType.INNER);\n                Join<GroupUserPo, FncrInfoPo> fncrInfo = groupUser.join(\"fncrInfoPo\", JoinType.INNER);\n                return subQuery.select(prodServ.<String>get(\"userId\")).where(\n                \t\tcb.and(cb.equal(prodServ.get(\"userId\"), prodServUserId), \n                \t\t\t\tcb.equal(fncrInfo.<String> get(\"userId\"), fncrId)));\n            }\n\t\t\t\n\t\t\tprivate Subquery<String> getProdServParamSubQuery(CriteriaQuery<?> query, \n\t\t\t\t\tCriteriaBuilder cb, String workDate, Path<String> userId) {\n                Subquery<String> subQuery = query.subquery(String.class);\n                Root<ProdServParamPo> param = subQuery.from(ProdServParamPo.class);\n                return subQuery.select(param.<String>get(\"userId\")).where(\n                \t\tcb.and(cb.equal(param.get(\"userId\"), userId), \n                \t\t\t\tcb.lessThanOrEqualTo(param.<String>get(\"startDate\"), workDate), \n                \t\t\t\tcb.greaterThanOrEqualTo(param.<String>get(\"endDate\"), workDate)\n                \t\t));\n\t\t\t}\n\t\t});\n\t\tList<ProdServItemDto> items = new ArrayList<ProdServItemDto>();\n\t\tfor(ProdServInfoPo serv: list){\n\t\t\tEnterpriseInfoPo ent = serv.getEnterpriseInfoPo();\n\t\t\tProdServItemDto item = new ProdServItemDto();\n\t\t\titem.setUserId(serv.getUserId());\n\t\t\titem.setWrtrKind(serv.getWrtrKind());\n\t\t\titem.setServProvType(serv.getServProvType());\n\t\t\titem.setQq(ent.getQq());\n\t\t\titem.setName(ent.getName());\n\t\t\titem.setAddress(ent.getAddress());\n\t\t\titem.setZipCode(ent.getZipCode());\n\t\t\titem.setContractName(ent.getContractName());\n\t\t\titem.setTelephone(ent.getTelephone());\n\t\t\titem.setWrtrFileId(serv.getWrtrFileId());\n\t\t\titems.add(item);\n\t\t}\n\t\tlogger.debug(\"cost times is {} ms\", (System.currentTimeMillis()-times));\n\t\treturn items;\n\t}\n\t\n//expressions.add(cb.greaterThanOrEqualTo(root.<Date> get(\"createTs\"), DateUtils.getStartDate(DateUtils.getDate(fromDate, YYYY_MM_DD))));\n//expressions.add(cb.lessThanOrEqualTo(root.<Date> get(\"createTs\"), DateUtils.getEndDate(DateUtils.getDate(toDate, YYYY_MM_DD))));\n\n/**\n*公告查询,这里主要看根据roleIds 不同用户显示不同的公告\n*/\npublic DataTablesResponseDto<ArticleDto> getArticlesForHome(final ArticleSearchDto searchCriteria) {\nPageable pageable = PaginationUtil.buildPageable(searchCriteria,\n\t\tPersistenceUtil.getIdName(ArticlePo.class));\nSpecification<ArticlePo> specification = new Specification<ArticlePo>() {\n\t@Override\n\tpublic Predicate toPredicate(Root<ArticlePo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\tPredicate predicate = cb.conjunction();\n\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\tif (null != searchCriteria) {\n\t\t\tString nowDateStr = DateUtils.formatDate(new Date(), ApplicationConsts.DATE_FORMAT);\n\t\t\tEArticleStatus status = searchCriteria.getStatus();\n\t\t\tEColumnCategory categoryId = searchCriteria.getCategoryId();\n\t\t\tList<Predicate> predicateList = new ArrayList<Predicate>();\n\t\t\tList<UserRolePo> userRolePoList = userRoleRepository.findByUserId(securityContext\n\t\t\t\t\t.getCurrentUserId());\n\n\t\t\tfor (UserRolePo userRole : userRolePoList) {\n\t\t\t\tpredicateList.add(cb.like(root.<String> get(\"roleIds\"), \"%\" + userRole.getRoleId()\n\t\t\t\t\t\t+ \"%\"));\n\t\t\t}\n\t\t\tpredicateList.add(cb.isNull(root.<String> get(\"roleIds\")));\n\n\t\t\tPredicate[] predicate1 = new Predicate[predicateList.size()];\n\t\t\tPredicate predicate2 = cb.or(predicateList.toArray(predicate1));\n\t\t\texpressions.add(predicate2);\n\n\t\t\texpressions.add(cb.lessThanOrEqualTo(root.<String> get(\"startDt\"), nowDateStr));\n\t\t\texpressions.add(cb.greaterThanOrEqualTo(root.<String> get(\"endDt\"), nowDateStr));\n\t\t\tif (EArticleStatus.ALL != status && null != status) {\n\t\t\t\texpressions.add(cb.equal(root.<EArticleStatus> get(\"status\"), status));\n\t\t\t}\n\t\t\tif (EColumnCategory.ALL != categoryId && null != categoryId) {\n\t\t\t\texpressions.add(cb.equal(root.<EColumnCategory> get(\"categoryId\"), categoryId));\n\t\t\t}\n\t\t}\n\t\treturn predicate;\n\t}\n};\nPage<ArticlePo> articlePos = articleRepository.findAll(specification, pageable);\nDataTablesResponseDto<ArticleDto> result = PaginationUtil.populateFromPage(articlePos,\n\t\tnew Function<ArticlePo, ArticleDto>() {\n\t\t\t@Override\n\t\t\tpublic ArticleDto apply(ArticlePo po) {\n\t\t\t\tArticleDto articleDto = ConverterService.convert(po, ArticleDto.class);\n\t\t\t\treturn articleDto;\n\t\t\t}\n\t\t});\nreturn result;\n}\n\n\n\n/**\n * \n */\npublic BigDecimal getSumInvstAmt(String acctNo, String productId){\n\tCriteriaBuilder cb = em.getCriteriaBuilder();\n\tCriteriaQuery<BigDecimal> query = cb.createQuery(BigDecimal.class);\n\tRoot<ProductSubscribeDtlPo> root = query.from(ProductSubscribeDtlPo.class);\n\tExpression<BigDecimal> subsAmtCm = cb.prod(root.<BigDecimal>get(\"unitAmt\"), root.<Long>get(\"unit\").as(BigDecimal.class));\n\tExpression<BigDecimal> sumSubAmtQuery = cb.sum(subsAmtCm);\n\tPredicate predicate = cb.conjunction();\n\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\tif(StringUtils.isNotBlank(acctNo)){\n\t\texpressions.add(cb.equal(root.<String>get(\"acctNo\"), acctNo));\n\t}\n\tif(StringUtils.isNotBlank(productId)){\n\t\texpressions.add(cb.equal(root.<String>get(\"productId\"), productId));\n\t}\n\tquery.select(sumSubAmtQuery);\n\tquery.where(predicate);\n\tBigDecimal result = em.createQuery(query).getSingleResult();\n\treturn result==null?BigDecimal.ZERO:result;\n}\n\n\n/**\n * \n */\nprivate List<ProjectPo> getProjectByFncrId(final String fncrAcctNo) {\n\tList<ProjectPo> list = projectRepository.findAll(new Specification<ProjectPo>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<ProjectPo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\t\texpressions.add(cb.equal(root.<String> get(\"fncrAcctNo\"), fncrAcctNo));\n\t\t\tList<EProjStatus> inStatus = Arrays.asList(EProjStatus.INIT, EProjStatus.WRTR_AUDIT,\n\t\t\t\t\tEProjStatus.RISK_AUDIT, EProjStatus.RISK_RATING, EProjStatus.PASSED);\n\t\t\texpressions.add(root.<EProjStatus> get(\"status\").in(inStatus));\n\t\t\treturn predicate;\n\t\t}\n\t});\n\treturn list;\n}\n\n\n/**\n * \n */\n@Transactional(readOnly = true)\npublic List<SimpleMemberDto> searchFncrMembers(final String keyWord) {\n\tSort sort = new Sort(Direction.ASC, PersistenceUtil.getIdName(AcctPo.class));\n\tPageable pageable = new PageRequest(0, 20, sort);\n\tPage<AcctPo> page = acctRepository.findAll(new Specification<AcctPo>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<AcctPo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\t\texpressions.add(cb.exists(getSubQuery(query, cb, root.<String>get(\"userId\"))));\n\t\t\tString keyWordTrim = keyWord.trim();\n\t\t\tif (StringUtils.isNotBlank(keyWord)) {\n\t\t\t\texpressions.add(cb.or(\n\t\t\t\t\t\tcb.like(root.<String> get(\"acctNo\"), \"%\" + keyWordTrim + \"%\"),\n\t\t\t\t\t\tcb.or(cb.like(root.<UserPo> get(\"userPo\").<String> get(\"sname\"), \"%\" + keyWordTrim\n\t\t\t\t\t\t\t\t+ \"%\"),\n\t\t\t\t\t\t\t\tcb.like(root.<UserPo> get(\"userPo\").<String> get(\"mobile\"), \"%\" + keyWordTrim\n\t\t\t\t\t\t\t\t\t\t+ \"%\"))));\n\t\t\t} else {\n\t\t\t\texpressions.add(cb.equal(root.<String> get(\"acctNo\"), \"0\"));\n\t\t\t}\n\t\t\treturn predicate;\n\t\t}\n\t\t\n\t\tprivate Subquery<String> getSubQuery(CriteriaQuery<?> query, \n\t\t\t\tCriteriaBuilder cb, Path<String> userId) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<SimpleUserPo> suser = subQuery.from(SimpleUserPo.class);\n\t\t\tJoin<SimpleUserPo, FncrInfoPo> fncrInfo = suser.join(\"fncrInfoPo\", JoinType.INNER);\n\t\t\treturn subQuery.select(suser.<String>get(\"userId\")).where(\n\t\t\t\t\tcb.and(cb.equal(suser.get(\"userId\"), userId), \n\t\t\t\t\t\t\tcb.equal(suser.get(\"userId\"), fncrInfo.<String> get(\"userId\"))));\n\t\t}\n\t}, pageable);\n\tList<SimpleMemberDto> items = new ArrayList<SimpleMemberDto>();\n\tList<AcctPo> list = page.getContent();\n\tfor (AcctPo acct : list) {\n\t\tSimpleMemberDto dto = new SimpleMemberDto();\n\t\tUserPo userPo = acct.getUserPo();\n\t\tStringBuilder label = new StringBuilder();\n\t\tString sname = userPo.getSname();\n\t\tString mobile = userPo.getMobile();\n\t\tmobile = null == mobile ? \"\":mobile;\n\t\tString acctNo = acct.getAcctNo();\n\t\tdto.setAcctNo(acctNo);\n\t\tdto.setSname(sname);\n\t\tdto.setMobile(mobile);\n\t\tlabel.append(\"姓名:\");\n\t\tlabel.append(sname);\n\t\tlabel.append(\",手机号:\");\n\t\tlabel.append(mobile);\n\t\tlabel.append(\",交易账号:\");\n\t\tlabel.append(acctNo);\n\t\tdto.setLabel(label.toString());\n\t\titems.add(dto);\n\t}\n\treturn items;\n}\n\n\n/**\n * \n */\npublic List<GroupUserInfoDto> getInvsUsers(final GroupUserSearchDto searchDto) {\n\tSpecification<UserPo> spec = new Specification<UserPo>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<UserPo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\t\texpressions.add(cb.not(cb.exists(getSubQuery(query, cb, searchDto.getGroupId(), root.<String> get(\"userId\")))));\n\t\t\tif(searchDto!=null){\n\t\t\t\tif(StringUtils.isNotBlank(searchDto.getKeyWord())){\n\t\t\t\t\texpressions.add(cb.or(\n\t\t\t\t\t\tcb.like(root.<String>get(\"sname\"), \"%\"+searchDto.getKeyWord()+\"%\"),\n\t\t\t\t\t\tcb.like(root.<String>get(\"nickName\"), \"%\"+searchDto.getKeyWord()+\"%\"),\n\t\t\t\t\t\tcb.like(root.<String>get(\"mobile\"), \"%\"+searchDto.getKeyWord()+\"%\"),\n\t\t\t\t\t\tcb.exists(getWorkUnitSubQuery(query, cb, searchDto.getKeyWord(), root.<String> get(\"userId\")))\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// 未传关键字查询条件，则查询结果为空\n\t\t\t\t\texpressions.add(cb.equal(root.<String>get(\"userId\"),\"0\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn predicate;\n\t\t}\n\t\tprivate Subquery<String> getSubQuery(CriteriaQuery<?> query, \n\t\t\t\tCriteriaBuilder cb, String groupId, Path<String> userId) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<GroupUserPo> groupUsers = subQuery.from(GroupUserPo.class);\n\t\t\treturn subQuery.select(groupUsers.<String>get(\"userId\")).where(\n\t\t\t\t\tcb.and(cb.equal(groupUsers.<String> get(\"groupId\"), groupId)), \n\t\t\t\t\tcb.equal(groupUsers.<String> get(\"userId\"), userId));\n\t\t}\n\t\tprivate Subquery<String> getWorkUnitSubQuery(CriteriaQuery<?> query, \n\t\t\t\tCriteriaBuilder cb, String keyWord, Path<String> userId) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<PersonalInfoPo> personalInfo = subQuery.from(PersonalInfoPo.class);\n\t\t\treturn subQuery.select(personalInfo.<String>get(\"userId\")).where(\n\t\t\t\t\tcb.equal(personalInfo.<String> get(\"userId\"), userId),\n\t\t\t\t\tcb.like(personalInfo.<String> get(\"workUnit\"), \"%\"+searchDto.getKeyWord()+\"%\"));\n\t\t}\n\t\t\n\t};\n\tList<UserPo> userList = userRepository.findAll(spec);\n\tList<GroupUserInfoDto> dtoList = new ArrayList<GroupUserInfoDto>();\n\tfor(UserPo ur:userList){\n\t\tGroupUserInfoDto dto = new GroupUserInfoDto();\n\t\tdto.setName(ur.getSname());\n\t\tdto.setNickName(ur.getNickName());\n\t\tdto.setUserType(ur.getUserType());\n\t\tdto.setUserId(ur.getUserId());\n\t\tif(ur.getUserType() == EUserType.PERSON){\n\t\t\tPersonalInfoPo persnoalInfo = personalInfoRepository.findOne(ur.getUserId());\n\t\t\tif(persnoalInfo!=null){\n\t\t\t\tdto.setWorkUnit(persnoalInfo.getWorkUnit());\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tdto.setWorkUnit(null);\n\t\t}\n\t\tdtoList.add(dto);\n\t}\n\treturn dtoList;\n}\n\t\n\n/**\n * json\n */\nprivate Specification<Qfjbxxdz> getWhereClause(final JSONArray condetion,final JSONArray search) {\n\treturn new Specification<Qfjbxxdz>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<Qfjbxxdz> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\tList<Predicate> predicate = new ArrayList<>();\n\t\t\tIterator<JSONObject> iterator = condetion.iterator();\n\t\t\tPredicate preP = null;\n\t\t\twhile(iterator.hasNext()){\n\t\t\t\tJSONObject jsonObject = iterator.next();\n\t\t\t\t//注意：这里用的root.join 因为我们要用qfjbxx对象里的字段作为条件就必须这样做join方法有很多重载，使用的时候可以多根据自己业务决断\n\t\t\t\tPredicate p1 = cb.equal(root.join(\"qfjbxx\").get(\"id\").as(String.class),jsonObject.get(\"fzId\").toString());\n\t\t\t\tPredicate p2 = cb.equal(root.get(\"fzcc\").as(String.class),jsonObject.get(\"ccId\").toString());\n\t\t\t\tif(preP!=null){\n\t\t\t\t\tpreP = cb.or(preP,cb.and(p1,p2));\n\t\t\t\t}else{\n\t\t\t\t\tpreP = cb.and(p1,p2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tJSONObject jsonSearch=(JSONObject) search.get(0);\n\t\t\tPredicate p3=null;\n\t\t\tif(null!=jsonSearch.get(\"xm\")&&jsonSearch.get(\"xm\").toString().length()>0){\n\t\t\t   p3=cb.like(root.join(\"criminalInfo\").get(\"xm\").as(String.class),\"%\"+jsonSearch.get(\"xm\").toString()+\"%\");\n\t\t\t}\n\t\t\tPredicate p4=null;\n\t\t\tif(null!=jsonSearch.get(\"fzmc\")&&jsonSearch.get(\"fzmc\").toString().length()>0){\n\t\t\t\tp4=cb.like(root.join(\"qfjbxx\").get(\"fzmc\").as(String.class),\"%\"+jsonSearch.get(\"fzmc\").toString()+\"%\");\n\t\t\t}\n\t\t\tPredicate preA;\n\t\t\tif(null!=p3&&null!=p4){\n\t\t\t\tPredicate  preS =cb.and(p3,p4);\n\t\t\t\tpreA =cb.and(preP,preS);\n\t\t\t}else if(null==p3&&null!=p4){\n\t\t\t\tpreA=cb.and(preP,p4);\n\t\t\t}else if(null!=p3&&null==p4){\n\t\t\t\tpreA=cb.and(preP,p3);\n\t\t\t}else{\n\t\t\t\tpreA=preP;\n\t\t\t}\n\t\t\tpredicate.add(preA);\n\t\t\tPredicate[] pre = new Predicate[predicate.size()];\n\t\t\tquery.where(predicate.toArray(pre));\n\t\t\treturn query.getRestriction();\n\t\t}\n\t};\n}\n\n\n/**\n * \n */\nprivate List<SubAcctTrxJnlPo> getRechargeList(final String trxDate, final String serviceCenterId) {\n\treturn subAcctTrxJnlRepository.findAll(new Specification<SubAcctTrxJnlPo>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<SubAcctTrxJnlPo> root, CriteriaQuery<?> query,\n\t\t\t\tCriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\t\texpressions\n\t\t\t\t\t.add(cb.exists(getSubQuery(query, cb, root.<String> get(\"acctNo\"), serviceCenterId)));\n\t\t\texpressions.add(cb.equal(root.<String> get(\"trxDate\"), trxDate));\n\t\t\texpressions.add(cb.equal(root.<String> get(\"useType\"), EUseType.RECHARGE));\n\t\t\treturn predicate;\n\t\t}\n\n\t\tprivate Subquery<String> getSubQuery(CriteriaQuery<?> query, CriteriaBuilder cb,\n\t\t\t\tPath<String> acctNo, String serviceCenterId) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<AcctPo> rAcct = subQuery.from(AcctPo.class);\n\t\t\tRoot<InvestorInfoPo> rInvestor = subQuery.from(InvestorInfoPo.class);\n\t\t\treturn subQuery.select(rAcct.<String> get(\"acctNo\"))\n\t\t\t\t\t.where(cb.and(cb.equal(rAcct.<String> get(\"acctNo\"), acctNo),\n\t\t\t\t\t\t\tcb.equal(rAcct.<String> get(\"userId\"), rInvestor.<String> get(\"userId\")),\n\t\t\t\t\t\t\tcb.equal(rInvestor.<String> get(\"serviceCenterId\"), serviceCenterId)));\n\t\t}\n\t});\n}\n\n\n/**\n * \n */\n@Transactional(readOnly = true)\npublic List<AcctDto> getAcctInfoList(final List<String> userIdList, \n\t\tfinal List<String> groupIds, final List<EBizRole> bizRoles){\n\tSpecification<AcctPo> spec = new Specification<AcctPo>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<AcctPo> root, CriteriaQuery<?> query,\tCriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\t\tif(userIdList!=null&&!userIdList.isEmpty()){\n\t\t\t\texpressions.add(root.<String>get(\"userId\").in(userIdList));\n\t\t\t}\n\t\t\tif(bizRoles!=null && !bizRoles.isEmpty()){\n\t\t\t\texpressions.add(cb.exists(getRolesSubQuery(query, cb, \n\t\t\t\t\t\troot.<String>get(\"userId\"), getRoleIds(bizRoles))));\n\t\t\t}\n\t\t\tif(groupIds!=null && !groupIds.isEmpty()){\n\t\t\t\texpressions.add(cb.exists(getGroupsSubQuery(query, cb, \n\t\t\t\t\t\troot.<String>get(\"userId\"), getGroupIds(groupIds))));\n\t\t\t}\n\t\t\treturn predicate;\n\t\t}\n\t\tprivate Subquery<String> getRolesSubQuery(CriteriaQuery<?> query, \n\t\t\t\tCriteriaBuilder cb, Path<String> userId, Set<String> roleIds) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<UserRolePo> param = subQuery.from(UserRolePo.class);\n\t\t\treturn subQuery.select(param.<String>get(\"userId\")).where(\n\t\t\t\t\tcb.and(cb.equal(param.get(\"userId\"), userId),\n\t\t\t\t\t\t   param.<String>get(\"roleId\").in(roleIds)\n\t\t\t));\n\t\t}\n\t\tprivate Subquery<String> getGroupsSubQuery(CriteriaQuery<?> query, \n\t\t\t\tCriteriaBuilder cb, Path<String> userId, Set<String> groupIds) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<GroupUserPo> param = subQuery.from(GroupUserPo.class);\n\t\t\treturn subQuery.select(param.<String>get(\"userId\")).where(\n\t\t\t\t\tcb.and(cb.equal(param.get(\"userId\"), userId),\n\t\t\t\t\t\t   param.<String>get(\"groupId\").in(groupIds)\n\t\t\t));\n\t\t}\n\t\tprivate Set<String> getRoleIds(List<EBizRole> bizRoles){\n\t\t\tSet<String> sets = new HashSet<String>();\n\t\t\tfor(EBizRole role:bizRoles){\n\t\t\t\tsets.add(role.getRoleId());\n\t\t\t}\n\t\t\treturn sets;\n\t\t}\n\t\tprivate Set<String> getGroupIds(List<String> groupIds){\n\t\t\tSet<String> sets = new HashSet<String>();\n\t\t\tfor(String gid:groupIds){\n\t\t\t\tsets.add(gid);\n\t\t\t}\n\t\t\treturn sets;\n\t\t}\n\t};\n\tList<AcctPo> list = acctRepo.findAll(spec);\n\treturn packItems(list);\n}\n```","source":"_posts/spring-data-jpa-查询使用案例.md","raw":"---\ntitle: spring data jpa 查询使用案例\ndate: 2017-03-27 17:29:11\ntags: [java,spring data jpa]\ncategories: 技术\n---\n\n```java\n/**\n * \n */\npublic String getSumAmount(final AcctDtlSearchDto searchDto, final ERecvPayFlag recvPayFlag) {  \n\tString startDate = searchDto.getStartDate();                                                \n\tString endDate = searchDto.getEndDate();                                                    \n\tEUseType useType = searchDto.getUseType();                                                  \n\tCriteriaBuilder builder = em.getCriteriaBuilder();                                          \n\tCriteriaQuery<BigDecimal> query = builder.createQuery(BigDecimal.class);                    \n\tRoot<SubAcctTrxJnlPo> root = query.from(SubAcctTrxJnlPo.class);                             \n\tPredicate predicate = builder.conjunction();                                                \n\tList<Expression<Boolean>> expressions = predicate.getExpressions();                         \n\tExpression<BigDecimal> sumTrxAmt = builder.sum(root.<BigDecimal> get(\"trxAmt\"));            \n\tif (StringUtils.isNotBlank(startDate)) {                                                    \n\t\texpressions.add(builder.greaterThanOrEqualTo(root.<String> get(\"trxDate\"), startDate)); \n\t}                                                                                           \n\tif (StringUtils.isNotBlank(endDate)) {                                                      \n\t\texpressions.add(builder.lessThanOrEqualTo(root.<String> get(\"trxDate\"), endDate));      \n\t}                                                                                           \n\tif (EUseType.ALL != useType) {                                                              \n\t\texpressions.add(builder.equal(root.<EUseType> get(\"useType\"), useType));                \n\t}                                                                                           \n\tif (null != recvPayFlag) {                                                                  \n\t\texpressions.add(builder.equal(root.<ERecvPayFlag> get(\"recvPayFlag\"), recvPayFlag));    \n\t}                                                                                           \n\tquery.where(predicate);                                                                     \n\tquery.select(sumTrxAmt);                                                                    \n\tBigDecimal result = em.createQuery(query).getSingleResult();                                \n\tresult = (null == result ? BigDecimal.ZERO : result);                                       \n\treturn result.toString();                                                                   \n}                   \n```\n<!--more-->\n```java\n/**\n * \n */\nprivate BigDecimal getWarrantedProjectAmt(final String userId) {\n\tList<ProjectPo> list = projectRepository.findAll(new Specification<ProjectPo>() {\n\t@Override\n\tpublic Predicate toPredicate(Root<ProjectPo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\tPredicate predicate = cb.conjunction();\n\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\texpressions.add(cb.equal(root.<String> get(\"wrtrId\"), userId));\n\t\tList<EProjStatus> inStatus = Arrays.asList(EProjStatus.RISK_AUDIT, EProjStatus.RISK_RATING);\n\t\texpressions.add(root.<EProjStatus> get(\"status\").in(inStatus));\n\t\treturn predicate;\n\t\t}\n\t});\n\tBigDecimal warrantAmt = BigDecimal.ZERO;\n\tfor (ProjectPo proj : list) {\n\t\twarrantAmt = warrantAmt.add(proj.getProjectAmt());\n\t}\n\treturn warrantAmt;\n}\n\n\n\n/**\n * \n */\npublic List<ProdServItemDto> getItems(final ProdServItemSearchDto searchDto, final String currUserId){\n\tlong times = System.currentTimeMillis();\n\tList<ProdServInfoPo> list = prodServInfoRepo.findAll(new Specification<ProdServInfoPo>(){\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<ProdServInfoPo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tString workDate = CommonBusinessUtil.getCurrentWorkDate();\n                List<Expression<Boolean>> expressions = predicate.getExpressions();\n                // 已授信过滤\n                expressions.add(cb.exists(getProdServParamSubQuery(query, cb, workDate, root.<String>get(\"userId\"))));\n                if(StringUtils.isNotBlank(searchDto.getName())){\n                \texpressions.add(cb.like(root.<EnterpriseInfoPo>get(\"enterpriseInfoPo\").<String>get(\"name\"), \"%\"+searchDto.getName()+\"%\"));\n                }\n                if(StringUtils.isNotBlank(searchDto.getTelephone())){\n                \texpressions.add(cb.like(root.<EnterpriseInfoPo>get(\"enterpriseInfoPo\").<String>get(\"telephone\"), \"%\"+searchDto.getTelephone()+\"%\"));\n                }\n                Expression<Boolean> servProvTypes = root.<EWarrantProdServProvType> get(\"servProvType\").in(EWarrantProdServProvType.MICRO_CMPY, EWarrantProdServProvType.WRTR_CMPY);\n                Expression<Boolean> unionServProvType = cb.and(\n                \t\tcb.equal(root.<EWarrantProdServProvType> get(\"servProvType\"), EWarrantProdServProvType.UNION_CMPY), \n                \t\tcb.exists(getSubQuery(query, cb, currUserId, root.<String> get(\"userId\"))));\n                expressions.add(cb.or(servProvTypes, unionServProvType));\n                /** 如果是小贷,不显示自己 **/\n                expressions.add(cb.notEqual(root.<String>get(\"userId\"), currUserId));\n                return predicate;\n\t\t\t}\n\t\t\tprivate Subquery<String> getSubQuery(CriteriaQuery<?> query, \n\t\t\t\t\tCriteriaBuilder cb, String fncrId, Path<String> prodServUserId) {\n                Subquery<String> subQuery = query.subquery(String.class);\n                Root<ProdServInfoPo> prodServ = subQuery.from(ProdServInfoPo.class);\n                Join<ProdServInfoPo, ProdServGroupPo> prodServGroup = prodServ.join(\"prodServGroupList\", JoinType.INNER);\n                Join<ProdServGroupPo, GroupPo> group = prodServGroup.join(\"groupPo\", JoinType.INNER);\n                Join<GroupPo, GroupUserPo> groupUser = group.join(\"groupUserPoSet\", JoinType.INNER);\n                Join<GroupUserPo, FncrInfoPo> fncrInfo = groupUser.join(\"fncrInfoPo\", JoinType.INNER);\n                return subQuery.select(prodServ.<String>get(\"userId\")).where(\n                \t\tcb.and(cb.equal(prodServ.get(\"userId\"), prodServUserId), \n                \t\t\t\tcb.equal(fncrInfo.<String> get(\"userId\"), fncrId)));\n            }\n\t\t\t\n\t\t\tprivate Subquery<String> getProdServParamSubQuery(CriteriaQuery<?> query, \n\t\t\t\t\tCriteriaBuilder cb, String workDate, Path<String> userId) {\n                Subquery<String> subQuery = query.subquery(String.class);\n                Root<ProdServParamPo> param = subQuery.from(ProdServParamPo.class);\n                return subQuery.select(param.<String>get(\"userId\")).where(\n                \t\tcb.and(cb.equal(param.get(\"userId\"), userId), \n                \t\t\t\tcb.lessThanOrEqualTo(param.<String>get(\"startDate\"), workDate), \n                \t\t\t\tcb.greaterThanOrEqualTo(param.<String>get(\"endDate\"), workDate)\n                \t\t));\n\t\t\t}\n\t\t});\n\t\tList<ProdServItemDto> items = new ArrayList<ProdServItemDto>();\n\t\tfor(ProdServInfoPo serv: list){\n\t\t\tEnterpriseInfoPo ent = serv.getEnterpriseInfoPo();\n\t\t\tProdServItemDto item = new ProdServItemDto();\n\t\t\titem.setUserId(serv.getUserId());\n\t\t\titem.setWrtrKind(serv.getWrtrKind());\n\t\t\titem.setServProvType(serv.getServProvType());\n\t\t\titem.setQq(ent.getQq());\n\t\t\titem.setName(ent.getName());\n\t\t\titem.setAddress(ent.getAddress());\n\t\t\titem.setZipCode(ent.getZipCode());\n\t\t\titem.setContractName(ent.getContractName());\n\t\t\titem.setTelephone(ent.getTelephone());\n\t\t\titem.setWrtrFileId(serv.getWrtrFileId());\n\t\t\titems.add(item);\n\t\t}\n\t\tlogger.debug(\"cost times is {} ms\", (System.currentTimeMillis()-times));\n\t\treturn items;\n\t}\n\t\n//expressions.add(cb.greaterThanOrEqualTo(root.<Date> get(\"createTs\"), DateUtils.getStartDate(DateUtils.getDate(fromDate, YYYY_MM_DD))));\n//expressions.add(cb.lessThanOrEqualTo(root.<Date> get(\"createTs\"), DateUtils.getEndDate(DateUtils.getDate(toDate, YYYY_MM_DD))));\n\n/**\n*公告查询,这里主要看根据roleIds 不同用户显示不同的公告\n*/\npublic DataTablesResponseDto<ArticleDto> getArticlesForHome(final ArticleSearchDto searchCriteria) {\nPageable pageable = PaginationUtil.buildPageable(searchCriteria,\n\t\tPersistenceUtil.getIdName(ArticlePo.class));\nSpecification<ArticlePo> specification = new Specification<ArticlePo>() {\n\t@Override\n\tpublic Predicate toPredicate(Root<ArticlePo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\tPredicate predicate = cb.conjunction();\n\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\tif (null != searchCriteria) {\n\t\t\tString nowDateStr = DateUtils.formatDate(new Date(), ApplicationConsts.DATE_FORMAT);\n\t\t\tEArticleStatus status = searchCriteria.getStatus();\n\t\t\tEColumnCategory categoryId = searchCriteria.getCategoryId();\n\t\t\tList<Predicate> predicateList = new ArrayList<Predicate>();\n\t\t\tList<UserRolePo> userRolePoList = userRoleRepository.findByUserId(securityContext\n\t\t\t\t\t.getCurrentUserId());\n\n\t\t\tfor (UserRolePo userRole : userRolePoList) {\n\t\t\t\tpredicateList.add(cb.like(root.<String> get(\"roleIds\"), \"%\" + userRole.getRoleId()\n\t\t\t\t\t\t+ \"%\"));\n\t\t\t}\n\t\t\tpredicateList.add(cb.isNull(root.<String> get(\"roleIds\")));\n\n\t\t\tPredicate[] predicate1 = new Predicate[predicateList.size()];\n\t\t\tPredicate predicate2 = cb.or(predicateList.toArray(predicate1));\n\t\t\texpressions.add(predicate2);\n\n\t\t\texpressions.add(cb.lessThanOrEqualTo(root.<String> get(\"startDt\"), nowDateStr));\n\t\t\texpressions.add(cb.greaterThanOrEqualTo(root.<String> get(\"endDt\"), nowDateStr));\n\t\t\tif (EArticleStatus.ALL != status && null != status) {\n\t\t\t\texpressions.add(cb.equal(root.<EArticleStatus> get(\"status\"), status));\n\t\t\t}\n\t\t\tif (EColumnCategory.ALL != categoryId && null != categoryId) {\n\t\t\t\texpressions.add(cb.equal(root.<EColumnCategory> get(\"categoryId\"), categoryId));\n\t\t\t}\n\t\t}\n\t\treturn predicate;\n\t}\n};\nPage<ArticlePo> articlePos = articleRepository.findAll(specification, pageable);\nDataTablesResponseDto<ArticleDto> result = PaginationUtil.populateFromPage(articlePos,\n\t\tnew Function<ArticlePo, ArticleDto>() {\n\t\t\t@Override\n\t\t\tpublic ArticleDto apply(ArticlePo po) {\n\t\t\t\tArticleDto articleDto = ConverterService.convert(po, ArticleDto.class);\n\t\t\t\treturn articleDto;\n\t\t\t}\n\t\t});\nreturn result;\n}\n\n\n\n/**\n * \n */\npublic BigDecimal getSumInvstAmt(String acctNo, String productId){\n\tCriteriaBuilder cb = em.getCriteriaBuilder();\n\tCriteriaQuery<BigDecimal> query = cb.createQuery(BigDecimal.class);\n\tRoot<ProductSubscribeDtlPo> root = query.from(ProductSubscribeDtlPo.class);\n\tExpression<BigDecimal> subsAmtCm = cb.prod(root.<BigDecimal>get(\"unitAmt\"), root.<Long>get(\"unit\").as(BigDecimal.class));\n\tExpression<BigDecimal> sumSubAmtQuery = cb.sum(subsAmtCm);\n\tPredicate predicate = cb.conjunction();\n\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\tif(StringUtils.isNotBlank(acctNo)){\n\t\texpressions.add(cb.equal(root.<String>get(\"acctNo\"), acctNo));\n\t}\n\tif(StringUtils.isNotBlank(productId)){\n\t\texpressions.add(cb.equal(root.<String>get(\"productId\"), productId));\n\t}\n\tquery.select(sumSubAmtQuery);\n\tquery.where(predicate);\n\tBigDecimal result = em.createQuery(query).getSingleResult();\n\treturn result==null?BigDecimal.ZERO:result;\n}\n\n\n/**\n * \n */\nprivate List<ProjectPo> getProjectByFncrId(final String fncrAcctNo) {\n\tList<ProjectPo> list = projectRepository.findAll(new Specification<ProjectPo>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<ProjectPo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\t\texpressions.add(cb.equal(root.<String> get(\"fncrAcctNo\"), fncrAcctNo));\n\t\t\tList<EProjStatus> inStatus = Arrays.asList(EProjStatus.INIT, EProjStatus.WRTR_AUDIT,\n\t\t\t\t\tEProjStatus.RISK_AUDIT, EProjStatus.RISK_RATING, EProjStatus.PASSED);\n\t\t\texpressions.add(root.<EProjStatus> get(\"status\").in(inStatus));\n\t\t\treturn predicate;\n\t\t}\n\t});\n\treturn list;\n}\n\n\n/**\n * \n */\n@Transactional(readOnly = true)\npublic List<SimpleMemberDto> searchFncrMembers(final String keyWord) {\n\tSort sort = new Sort(Direction.ASC, PersistenceUtil.getIdName(AcctPo.class));\n\tPageable pageable = new PageRequest(0, 20, sort);\n\tPage<AcctPo> page = acctRepository.findAll(new Specification<AcctPo>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<AcctPo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\t\texpressions.add(cb.exists(getSubQuery(query, cb, root.<String>get(\"userId\"))));\n\t\t\tString keyWordTrim = keyWord.trim();\n\t\t\tif (StringUtils.isNotBlank(keyWord)) {\n\t\t\t\texpressions.add(cb.or(\n\t\t\t\t\t\tcb.like(root.<String> get(\"acctNo\"), \"%\" + keyWordTrim + \"%\"),\n\t\t\t\t\t\tcb.or(cb.like(root.<UserPo> get(\"userPo\").<String> get(\"sname\"), \"%\" + keyWordTrim\n\t\t\t\t\t\t\t\t+ \"%\"),\n\t\t\t\t\t\t\t\tcb.like(root.<UserPo> get(\"userPo\").<String> get(\"mobile\"), \"%\" + keyWordTrim\n\t\t\t\t\t\t\t\t\t\t+ \"%\"))));\n\t\t\t} else {\n\t\t\t\texpressions.add(cb.equal(root.<String> get(\"acctNo\"), \"0\"));\n\t\t\t}\n\t\t\treturn predicate;\n\t\t}\n\t\t\n\t\tprivate Subquery<String> getSubQuery(CriteriaQuery<?> query, \n\t\t\t\tCriteriaBuilder cb, Path<String> userId) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<SimpleUserPo> suser = subQuery.from(SimpleUserPo.class);\n\t\t\tJoin<SimpleUserPo, FncrInfoPo> fncrInfo = suser.join(\"fncrInfoPo\", JoinType.INNER);\n\t\t\treturn subQuery.select(suser.<String>get(\"userId\")).where(\n\t\t\t\t\tcb.and(cb.equal(suser.get(\"userId\"), userId), \n\t\t\t\t\t\t\tcb.equal(suser.get(\"userId\"), fncrInfo.<String> get(\"userId\"))));\n\t\t}\n\t}, pageable);\n\tList<SimpleMemberDto> items = new ArrayList<SimpleMemberDto>();\n\tList<AcctPo> list = page.getContent();\n\tfor (AcctPo acct : list) {\n\t\tSimpleMemberDto dto = new SimpleMemberDto();\n\t\tUserPo userPo = acct.getUserPo();\n\t\tStringBuilder label = new StringBuilder();\n\t\tString sname = userPo.getSname();\n\t\tString mobile = userPo.getMobile();\n\t\tmobile = null == mobile ? \"\":mobile;\n\t\tString acctNo = acct.getAcctNo();\n\t\tdto.setAcctNo(acctNo);\n\t\tdto.setSname(sname);\n\t\tdto.setMobile(mobile);\n\t\tlabel.append(\"姓名:\");\n\t\tlabel.append(sname);\n\t\tlabel.append(\",手机号:\");\n\t\tlabel.append(mobile);\n\t\tlabel.append(\",交易账号:\");\n\t\tlabel.append(acctNo);\n\t\tdto.setLabel(label.toString());\n\t\titems.add(dto);\n\t}\n\treturn items;\n}\n\n\n/**\n * \n */\npublic List<GroupUserInfoDto> getInvsUsers(final GroupUserSearchDto searchDto) {\n\tSpecification<UserPo> spec = new Specification<UserPo>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<UserPo> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\t\texpressions.add(cb.not(cb.exists(getSubQuery(query, cb, searchDto.getGroupId(), root.<String> get(\"userId\")))));\n\t\t\tif(searchDto!=null){\n\t\t\t\tif(StringUtils.isNotBlank(searchDto.getKeyWord())){\n\t\t\t\t\texpressions.add(cb.or(\n\t\t\t\t\t\tcb.like(root.<String>get(\"sname\"), \"%\"+searchDto.getKeyWord()+\"%\"),\n\t\t\t\t\t\tcb.like(root.<String>get(\"nickName\"), \"%\"+searchDto.getKeyWord()+\"%\"),\n\t\t\t\t\t\tcb.like(root.<String>get(\"mobile\"), \"%\"+searchDto.getKeyWord()+\"%\"),\n\t\t\t\t\t\tcb.exists(getWorkUnitSubQuery(query, cb, searchDto.getKeyWord(), root.<String> get(\"userId\")))\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// 未传关键字查询条件，则查询结果为空\n\t\t\t\t\texpressions.add(cb.equal(root.<String>get(\"userId\"),\"0\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn predicate;\n\t\t}\n\t\tprivate Subquery<String> getSubQuery(CriteriaQuery<?> query, \n\t\t\t\tCriteriaBuilder cb, String groupId, Path<String> userId) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<GroupUserPo> groupUsers = subQuery.from(GroupUserPo.class);\n\t\t\treturn subQuery.select(groupUsers.<String>get(\"userId\")).where(\n\t\t\t\t\tcb.and(cb.equal(groupUsers.<String> get(\"groupId\"), groupId)), \n\t\t\t\t\tcb.equal(groupUsers.<String> get(\"userId\"), userId));\n\t\t}\n\t\tprivate Subquery<String> getWorkUnitSubQuery(CriteriaQuery<?> query, \n\t\t\t\tCriteriaBuilder cb, String keyWord, Path<String> userId) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<PersonalInfoPo> personalInfo = subQuery.from(PersonalInfoPo.class);\n\t\t\treturn subQuery.select(personalInfo.<String>get(\"userId\")).where(\n\t\t\t\t\tcb.equal(personalInfo.<String> get(\"userId\"), userId),\n\t\t\t\t\tcb.like(personalInfo.<String> get(\"workUnit\"), \"%\"+searchDto.getKeyWord()+\"%\"));\n\t\t}\n\t\t\n\t};\n\tList<UserPo> userList = userRepository.findAll(spec);\n\tList<GroupUserInfoDto> dtoList = new ArrayList<GroupUserInfoDto>();\n\tfor(UserPo ur:userList){\n\t\tGroupUserInfoDto dto = new GroupUserInfoDto();\n\t\tdto.setName(ur.getSname());\n\t\tdto.setNickName(ur.getNickName());\n\t\tdto.setUserType(ur.getUserType());\n\t\tdto.setUserId(ur.getUserId());\n\t\tif(ur.getUserType() == EUserType.PERSON){\n\t\t\tPersonalInfoPo persnoalInfo = personalInfoRepository.findOne(ur.getUserId());\n\t\t\tif(persnoalInfo!=null){\n\t\t\t\tdto.setWorkUnit(persnoalInfo.getWorkUnit());\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tdto.setWorkUnit(null);\n\t\t}\n\t\tdtoList.add(dto);\n\t}\n\treturn dtoList;\n}\n\t\n\n/**\n * json\n */\nprivate Specification<Qfjbxxdz> getWhereClause(final JSONArray condetion,final JSONArray search) {\n\treturn new Specification<Qfjbxxdz>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<Qfjbxxdz> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\tList<Predicate> predicate = new ArrayList<>();\n\t\t\tIterator<JSONObject> iterator = condetion.iterator();\n\t\t\tPredicate preP = null;\n\t\t\twhile(iterator.hasNext()){\n\t\t\t\tJSONObject jsonObject = iterator.next();\n\t\t\t\t//注意：这里用的root.join 因为我们要用qfjbxx对象里的字段作为条件就必须这样做join方法有很多重载，使用的时候可以多根据自己业务决断\n\t\t\t\tPredicate p1 = cb.equal(root.join(\"qfjbxx\").get(\"id\").as(String.class),jsonObject.get(\"fzId\").toString());\n\t\t\t\tPredicate p2 = cb.equal(root.get(\"fzcc\").as(String.class),jsonObject.get(\"ccId\").toString());\n\t\t\t\tif(preP!=null){\n\t\t\t\t\tpreP = cb.or(preP,cb.and(p1,p2));\n\t\t\t\t}else{\n\t\t\t\t\tpreP = cb.and(p1,p2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tJSONObject jsonSearch=(JSONObject) search.get(0);\n\t\t\tPredicate p3=null;\n\t\t\tif(null!=jsonSearch.get(\"xm\")&&jsonSearch.get(\"xm\").toString().length()>0){\n\t\t\t   p3=cb.like(root.join(\"criminalInfo\").get(\"xm\").as(String.class),\"%\"+jsonSearch.get(\"xm\").toString()+\"%\");\n\t\t\t}\n\t\t\tPredicate p4=null;\n\t\t\tif(null!=jsonSearch.get(\"fzmc\")&&jsonSearch.get(\"fzmc\").toString().length()>0){\n\t\t\t\tp4=cb.like(root.join(\"qfjbxx\").get(\"fzmc\").as(String.class),\"%\"+jsonSearch.get(\"fzmc\").toString()+\"%\");\n\t\t\t}\n\t\t\tPredicate preA;\n\t\t\tif(null!=p3&&null!=p4){\n\t\t\t\tPredicate  preS =cb.and(p3,p4);\n\t\t\t\tpreA =cb.and(preP,preS);\n\t\t\t}else if(null==p3&&null!=p4){\n\t\t\t\tpreA=cb.and(preP,p4);\n\t\t\t}else if(null!=p3&&null==p4){\n\t\t\t\tpreA=cb.and(preP,p3);\n\t\t\t}else{\n\t\t\t\tpreA=preP;\n\t\t\t}\n\t\t\tpredicate.add(preA);\n\t\t\tPredicate[] pre = new Predicate[predicate.size()];\n\t\t\tquery.where(predicate.toArray(pre));\n\t\t\treturn query.getRestriction();\n\t\t}\n\t};\n}\n\n\n/**\n * \n */\nprivate List<SubAcctTrxJnlPo> getRechargeList(final String trxDate, final String serviceCenterId) {\n\treturn subAcctTrxJnlRepository.findAll(new Specification<SubAcctTrxJnlPo>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<SubAcctTrxJnlPo> root, CriteriaQuery<?> query,\n\t\t\t\tCriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\t\texpressions\n\t\t\t\t\t.add(cb.exists(getSubQuery(query, cb, root.<String> get(\"acctNo\"), serviceCenterId)));\n\t\t\texpressions.add(cb.equal(root.<String> get(\"trxDate\"), trxDate));\n\t\t\texpressions.add(cb.equal(root.<String> get(\"useType\"), EUseType.RECHARGE));\n\t\t\treturn predicate;\n\t\t}\n\n\t\tprivate Subquery<String> getSubQuery(CriteriaQuery<?> query, CriteriaBuilder cb,\n\t\t\t\tPath<String> acctNo, String serviceCenterId) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<AcctPo> rAcct = subQuery.from(AcctPo.class);\n\t\t\tRoot<InvestorInfoPo> rInvestor = subQuery.from(InvestorInfoPo.class);\n\t\t\treturn subQuery.select(rAcct.<String> get(\"acctNo\"))\n\t\t\t\t\t.where(cb.and(cb.equal(rAcct.<String> get(\"acctNo\"), acctNo),\n\t\t\t\t\t\t\tcb.equal(rAcct.<String> get(\"userId\"), rInvestor.<String> get(\"userId\")),\n\t\t\t\t\t\t\tcb.equal(rInvestor.<String> get(\"serviceCenterId\"), serviceCenterId)));\n\t\t}\n\t});\n}\n\n\n/**\n * \n */\n@Transactional(readOnly = true)\npublic List<AcctDto> getAcctInfoList(final List<String> userIdList, \n\t\tfinal List<String> groupIds, final List<EBizRole> bizRoles){\n\tSpecification<AcctPo> spec = new Specification<AcctPo>() {\n\t\t@Override\n\t\tpublic Predicate toPredicate(Root<AcctPo> root, CriteriaQuery<?> query,\tCriteriaBuilder cb) {\n\t\t\tPredicate predicate = cb.conjunction();\n\t\t\tList<Expression<Boolean>> expressions = predicate.getExpressions();\n\t\t\tif(userIdList!=null&&!userIdList.isEmpty()){\n\t\t\t\texpressions.add(root.<String>get(\"userId\").in(userIdList));\n\t\t\t}\n\t\t\tif(bizRoles!=null && !bizRoles.isEmpty()){\n\t\t\t\texpressions.add(cb.exists(getRolesSubQuery(query, cb, \n\t\t\t\t\t\troot.<String>get(\"userId\"), getRoleIds(bizRoles))));\n\t\t\t}\n\t\t\tif(groupIds!=null && !groupIds.isEmpty()){\n\t\t\t\texpressions.add(cb.exists(getGroupsSubQuery(query, cb, \n\t\t\t\t\t\troot.<String>get(\"userId\"), getGroupIds(groupIds))));\n\t\t\t}\n\t\t\treturn predicate;\n\t\t}\n\t\tprivate Subquery<String> getRolesSubQuery(CriteriaQuery<?> query, \n\t\t\t\tCriteriaBuilder cb, Path<String> userId, Set<String> roleIds) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<UserRolePo> param = subQuery.from(UserRolePo.class);\n\t\t\treturn subQuery.select(param.<String>get(\"userId\")).where(\n\t\t\t\t\tcb.and(cb.equal(param.get(\"userId\"), userId),\n\t\t\t\t\t\t   param.<String>get(\"roleId\").in(roleIds)\n\t\t\t));\n\t\t}\n\t\tprivate Subquery<String> getGroupsSubQuery(CriteriaQuery<?> query, \n\t\t\t\tCriteriaBuilder cb, Path<String> userId, Set<String> groupIds) {\n\t\t\tSubquery<String> subQuery = query.subquery(String.class);\n\t\t\tRoot<GroupUserPo> param = subQuery.from(GroupUserPo.class);\n\t\t\treturn subQuery.select(param.<String>get(\"userId\")).where(\n\t\t\t\t\tcb.and(cb.equal(param.get(\"userId\"), userId),\n\t\t\t\t\t\t   param.<String>get(\"groupId\").in(groupIds)\n\t\t\t));\n\t\t}\n\t\tprivate Set<String> getRoleIds(List<EBizRole> bizRoles){\n\t\t\tSet<String> sets = new HashSet<String>();\n\t\t\tfor(EBizRole role:bizRoles){\n\t\t\t\tsets.add(role.getRoleId());\n\t\t\t}\n\t\t\treturn sets;\n\t\t}\n\t\tprivate Set<String> getGroupIds(List<String> groupIds){\n\t\t\tSet<String> sets = new HashSet<String>();\n\t\t\tfor(String gid:groupIds){\n\t\t\t\tsets.add(gid);\n\t\t\t}\n\t\t\treturn sets;\n\t\t}\n\t};\n\tList<AcctPo> list = acctRepo.findAll(spec);\n\treturn packItems(list);\n}\n```","slug":"spring-data-jpa-查询使用案例","published":1,"updated":"2017-04-26T08:44:48.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc594w000qcoqhzdcos4jd","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getSumAmount</span><span class=\"params\">(<span class=\"keyword\">final</span> AcctDtlSearchDto searchDto, <span class=\"keyword\">final</span> ERecvPayFlag recvPayFlag)</span> </span>&#123;  </div><div class=\"line\">\tString startDate = searchDto.getStartDate();                                                </div><div class=\"line\">\tString endDate = searchDto.getEndDate();                                                    </div><div class=\"line\">\tEUseType useType = searchDto.getUseType();                                                  </div><div class=\"line\">\tCriteriaBuilder builder = em.getCriteriaBuilder();                                          </div><div class=\"line\">\tCriteriaQuery&lt;BigDecimal&gt; query = builder.createQuery(BigDecimal.class);                    </div><div class=\"line\">\tRoot&lt;SubAcctTrxJnlPo&gt; root = query.from(SubAcctTrxJnlPo.class);                             </div><div class=\"line\">\tPredicate predicate = builder.conjunction();                                                </div><div class=\"line\">\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();                         </div><div class=\"line\">\tExpression&lt;BigDecimal&gt; sumTrxAmt = builder.sum(root.&lt;BigDecimal&gt; get(<span class=\"string\">\"trxAmt\"</span>));            </div><div class=\"line\">\t<span class=\"keyword\">if</span> (StringUtils.isNotBlank(startDate)) &#123;                                                    </div><div class=\"line\">\t\texpressions.add(builder.greaterThanOrEqualTo(root.&lt;String&gt; get(<span class=\"string\">\"trxDate\"</span>), startDate)); </div><div class=\"line\">\t&#125;                                                                                           </div><div class=\"line\">\t<span class=\"keyword\">if</span> (StringUtils.isNotBlank(endDate)) &#123;                                                      </div><div class=\"line\">\t\texpressions.add(builder.lessThanOrEqualTo(root.&lt;String&gt; get(<span class=\"string\">\"trxDate\"</span>), endDate));      </div><div class=\"line\">\t&#125;                                                                                           </div><div class=\"line\">\t<span class=\"keyword\">if</span> (EUseType.ALL != useType) &#123;                                                              </div><div class=\"line\">\t\texpressions.add(builder.equal(root.&lt;EUseType&gt; get(<span class=\"string\">\"useType\"</span>), useType));                </div><div class=\"line\">\t&#125;                                                                                           </div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != recvPayFlag) &#123;                                                                  </div><div class=\"line\">\t\texpressions.add(builder.equal(root.&lt;ERecvPayFlag&gt; get(<span class=\"string\">\"recvPayFlag\"</span>), recvPayFlag));    </div><div class=\"line\">\t&#125;                                                                                           </div><div class=\"line\">\tquery.where(predicate);                                                                     </div><div class=\"line\">\tquery.select(sumTrxAmt);                                                                    </div><div class=\"line\">\tBigDecimal result = em.createQuery(query).getSingleResult();                                </div><div class=\"line\">\tresult = (<span class=\"keyword\">null</span> == result ? BigDecimal.ZERO : result);                                       </div><div class=\"line\">\t<span class=\"keyword\">return</span> result.toString();                                                                   </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> BigDecimal <span class=\"title\">getWarrantedProjectAmt</span><span class=\"params\">(<span class=\"keyword\">final</span> String userId)</span> </span>&#123;</div><div class=\"line\">\tList&lt;ProjectPo&gt; list = projectRepository.findAll(<span class=\"keyword\">new</span> Specification&lt;ProjectPo&gt;() &#123;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;ProjectPo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\texpressions.add(cb.equal(root.&lt;String&gt; get(<span class=\"string\">\"wrtrId\"</span>), userId));</div><div class=\"line\">\t\tList&lt;EProjStatus&gt; inStatus = Arrays.asList(EProjStatus.RISK_AUDIT, EProjStatus.RISK_RATING);</div><div class=\"line\">\t\texpressions.add(root.&lt;EProjStatus&gt; get(<span class=\"string\">\"status\"</span>).in(inStatus));</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">\tBigDecimal warrantAmt = BigDecimal.ZERO;</div><div class=\"line\">\t<span class=\"keyword\">for</span> (ProjectPo proj : list) &#123;</div><div class=\"line\">\t\twarrantAmt = warrantAmt.add(proj.getProjectAmt());</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> warrantAmt;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;ProdServItemDto&gt; <span class=\"title\">getItems</span><span class=\"params\">(<span class=\"keyword\">final</span> ProdServItemSearchDto searchDto, <span class=\"keyword\">final</span> String currUserId)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">long</span> times = System.currentTimeMillis();</div><div class=\"line\">\tList&lt;ProdServInfoPo&gt; list = prodServInfoRepo.findAll(<span class=\"keyword\">new</span> Specification&lt;ProdServInfoPo&gt;()&#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;ProdServInfoPo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tString workDate = CommonBusinessUtil.getCurrentWorkDate();</div><div class=\"line\">                List&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">                <span class=\"comment\">// 已授信过滤</span></div><div class=\"line\">                expressions.add(cb.exists(getProdServParamSubQuery(query, cb, workDate, root.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>))));</div><div class=\"line\">                <span class=\"keyword\">if</span>(StringUtils.isNotBlank(searchDto.getName()))&#123;</div><div class=\"line\">                \texpressions.add(cb.like(root.&lt;EnterpriseInfoPo&gt;get(<span class=\"string\">\"enterpriseInfoPo\"</span>).&lt;String&gt;get(<span class=\"string\">\"name\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getName()+<span class=\"string\">\"%\"</span>));</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">if</span>(StringUtils.isNotBlank(searchDto.getTelephone()))&#123;</div><div class=\"line\">                \texpressions.add(cb.like(root.&lt;EnterpriseInfoPo&gt;get(<span class=\"string\">\"enterpriseInfoPo\"</span>).&lt;String&gt;get(<span class=\"string\">\"telephone\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getTelephone()+<span class=\"string\">\"%\"</span>));</div><div class=\"line\">                &#125;</div><div class=\"line\">                Expression&lt;Boolean&gt; servProvTypes = root.&lt;EWarrantProdServProvType&gt; get(<span class=\"string\">\"servProvType\"</span>).in(EWarrantProdServProvType.MICRO_CMPY, EWarrantProdServProvType.WRTR_CMPY);</div><div class=\"line\">                Expression&lt;Boolean&gt; unionServProvType = cb.and(</div><div class=\"line\">                \t\tcb.equal(root.&lt;EWarrantProdServProvType&gt; get(<span class=\"string\">\"servProvType\"</span>), EWarrantProdServProvType.UNION_CMPY), </div><div class=\"line\">                \t\tcb.exists(getSubQuery(query, cb, currUserId, root.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>))));</div><div class=\"line\">                expressions.add(cb.or(servProvTypes, unionServProvType));</div><div class=\"line\">                <span class=\"comment\">/** 如果是小贷,不显示自己 **/</span></div><div class=\"line\">                expressions.add(cb.notEqual(root.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>), currUserId));</div><div class=\"line\">                <span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </span></span></div><div class=\"line\">\t\t\t\t\tCriteriaBuilder cb, String fncrId, Path&lt;String&gt; prodServUserId) &#123;</div><div class=\"line\">                Subquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">                Root&lt;ProdServInfoPo&gt; prodServ = subQuery.from(ProdServInfoPo.class);</div><div class=\"line\">                Join&lt;ProdServInfoPo, ProdServGroupPo&gt; prodServGroup = prodServ.join(<span class=\"string\">\"prodServGroupList\"</span>, JoinType.INNER);</div><div class=\"line\">                Join&lt;ProdServGroupPo, GroupPo&gt; group = prodServGroup.join(<span class=\"string\">\"groupPo\"</span>, JoinType.INNER);</div><div class=\"line\">                Join&lt;GroupPo, GroupUserPo&gt; groupUser = group.join(<span class=\"string\">\"groupUserPoSet\"</span>, JoinType.INNER);</div><div class=\"line\">                Join&lt;GroupUserPo, FncrInfoPo&gt; fncrInfo = groupUser.join(<span class=\"string\">\"fncrInfoPo\"</span>, JoinType.INNER);</div><div class=\"line\">                <span class=\"keyword\">return</span> subQuery.select(prodServ.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">                \t\tcb.and(cb.equal(prodServ.get(<span class=\"string\">\"userId\"</span>), prodServUserId), </div><div class=\"line\">                \t\t\t\tcb.equal(fncrInfo.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>), fncrId)));</div><div class=\"line\">            &#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getProdServParamSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </span></span></div><div class=\"line\">\t\t\t\t\tCriteriaBuilder cb, String workDate, Path&lt;String&gt; userId) &#123;</div><div class=\"line\">                Subquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">                Root&lt;ProdServParamPo&gt; param = subQuery.from(ProdServParamPo.class);</div><div class=\"line\">                <span class=\"keyword\">return</span> subQuery.select(param.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">                \t\tcb.and(cb.equal(param.get(<span class=\"string\">\"userId\"</span>), userId), </div><div class=\"line\">                \t\t\t\tcb.lessThanOrEqualTo(param.&lt;String&gt;get(<span class=\"string\">\"startDate\"</span>), workDate), </div><div class=\"line\">                \t\t\t\tcb.greaterThanOrEqualTo(param.&lt;String&gt;get(<span class=\"string\">\"endDate\"</span>), workDate)</div><div class=\"line\">                \t\t));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t\tList&lt;ProdServItemDto&gt; items = <span class=\"keyword\">new</span> ArrayList&lt;ProdServItemDto&gt;();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(ProdServInfoPo serv: list)&#123;</div><div class=\"line\">\t\t\tEnterpriseInfoPo ent = serv.getEnterpriseInfoPo();</div><div class=\"line\">\t\t\tProdServItemDto item = <span class=\"keyword\">new</span> ProdServItemDto();</div><div class=\"line\">\t\t\titem.setUserId(serv.getUserId());</div><div class=\"line\">\t\t\titem.setWrtrKind(serv.getWrtrKind());</div><div class=\"line\">\t\t\titem.setServProvType(serv.getServProvType());</div><div class=\"line\">\t\t\titem.setQq(ent.getQq());</div><div class=\"line\">\t\t\titem.setName(ent.getName());</div><div class=\"line\">\t\t\titem.setAddress(ent.getAddress());</div><div class=\"line\">\t\t\titem.setZipCode(ent.getZipCode());</div><div class=\"line\">\t\t\titem.setContractName(ent.getContractName());</div><div class=\"line\">\t\t\titem.setTelephone(ent.getTelephone());</div><div class=\"line\">\t\t\titem.setWrtrFileId(serv.getWrtrFileId());</div><div class=\"line\">\t\t\titems.add(item);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tlogger.debug(<span class=\"string\">\"cost times is &#123;&#125; ms\"</span>, (System.currentTimeMillis()-times));</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> items;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\"><span class=\"comment\">//expressions.add(cb.greaterThanOrEqualTo(root.&lt;Date&gt; get(\"createTs\"), DateUtils.getStartDate(DateUtils.getDate(fromDate, YYYY_MM_DD))));</span></div><div class=\"line\"><span class=\"comment\">//expressions.add(cb.lessThanOrEqualTo(root.&lt;Date&gt; get(\"createTs\"), DateUtils.getEndDate(DateUtils.getDate(toDate, YYYY_MM_DD))));</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\">*公告查询,这里主要看根据roleIds 不同用户显示不同的公告</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> DataTablesResponseDto&lt;ArticleDto&gt; <span class=\"title\">getArticlesForHome</span><span class=\"params\">(<span class=\"keyword\">final</span> ArticleSearchDto searchCriteria)</span> </span>&#123;</div><div class=\"line\">Pageable pageable = PaginationUtil.buildPageable(searchCriteria,</div><div class=\"line\">\t\tPersistenceUtil.getIdName(ArticlePo.class));</div><div class=\"line\">Specification&lt;ArticlePo&gt; specification = <span class=\"keyword\">new</span> Specification&lt;ArticlePo&gt;() &#123;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;ArticlePo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != searchCriteria) &#123;</div><div class=\"line\">\t\t\tString nowDateStr = DateUtils.formatDate(<span class=\"keyword\">new</span> Date(), ApplicationConsts.DATE_FORMAT);</div><div class=\"line\">\t\t\tEArticleStatus status = searchCriteria.getStatus();</div><div class=\"line\">\t\t\tEColumnCategory categoryId = searchCriteria.getCategoryId();</div><div class=\"line\">\t\t\tList&lt;Predicate&gt; predicateList = <span class=\"keyword\">new</span> ArrayList&lt;Predicate&gt;();</div><div class=\"line\">\t\t\tList&lt;UserRolePo&gt; userRolePoList = userRoleRepository.findByUserId(securityContext</div><div class=\"line\">\t\t\t\t\t.getCurrentUserId());</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (UserRolePo userRole : userRolePoList) &#123;</div><div class=\"line\">\t\t\t\tpredicateList.add(cb.like(root.&lt;String&gt; get(<span class=\"string\">\"roleIds\"</span>), <span class=\"string\">\"%\"</span> + userRole.getRoleId()</div><div class=\"line\">\t\t\t\t\t\t+ <span class=\"string\">\"%\"</span>));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tpredicateList.add(cb.isNull(root.&lt;String&gt; get(<span class=\"string\">\"roleIds\"</span>)));</div><div class=\"line\"></div><div class=\"line\">\t\t\tPredicate[] predicate1 = <span class=\"keyword\">new</span> Predicate[predicateList.size()];</div><div class=\"line\">\t\t\tPredicate predicate2 = cb.or(predicateList.toArray(predicate1));</div><div class=\"line\">\t\t\texpressions.add(predicate2);</div><div class=\"line\"></div><div class=\"line\">\t\t\texpressions.add(cb.lessThanOrEqualTo(root.&lt;String&gt; get(<span class=\"string\">\"startDt\"</span>), nowDateStr));</div><div class=\"line\">\t\t\texpressions.add(cb.greaterThanOrEqualTo(root.&lt;String&gt; get(<span class=\"string\">\"endDt\"</span>), nowDateStr));</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (EArticleStatus.ALL != status &amp;&amp; <span class=\"keyword\">null</span> != status) &#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.equal(root.&lt;EArticleStatus&gt; get(<span class=\"string\">\"status\"</span>), status));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (EColumnCategory.ALL != categoryId &amp;&amp; <span class=\"keyword\">null</span> != categoryId) &#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.equal(root.&lt;EColumnCategory&gt; get(<span class=\"string\">\"categoryId\"</span>), categoryId));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">Page&lt;ArticlePo&gt; articlePos = articleRepository.findAll(specification, pageable);</div><div class=\"line\">DataTablesResponseDto&lt;ArticleDto&gt; result = PaginationUtil.populateFromPage(articlePos,</div><div class=\"line\">\t\t<span class=\"keyword\">new</span> Function&lt;ArticlePo, ArticleDto&gt;() &#123;</div><div class=\"line\">\t\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> ArticleDto <span class=\"title\">apply</span><span class=\"params\">(ArticlePo po)</span> </span>&#123;</div><div class=\"line\">\t\t\t\tArticleDto articleDto = ConverterService.convert(po, ArticleDto.class);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> articleDto;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\"><span class=\"keyword\">return</span> result;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> BigDecimal <span class=\"title\">getSumInvstAmt</span><span class=\"params\">(String acctNo, String productId)</span></span>&#123;</div><div class=\"line\">\tCriteriaBuilder cb = em.getCriteriaBuilder();</div><div class=\"line\">\tCriteriaQuery&lt;BigDecimal&gt; query = cb.createQuery(BigDecimal.class);</div><div class=\"line\">\tRoot&lt;ProductSubscribeDtlPo&gt; root = query.from(ProductSubscribeDtlPo.class);</div><div class=\"line\">\tExpression&lt;BigDecimal&gt; subsAmtCm = cb.prod(root.&lt;BigDecimal&gt;get(<span class=\"string\">\"unitAmt\"</span>), root.&lt;Long&gt;get(<span class=\"string\">\"unit\"</span>).as(BigDecimal.class));</div><div class=\"line\">\tExpression&lt;BigDecimal&gt; sumSubAmtQuery = cb.sum(subsAmtCm);</div><div class=\"line\">\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t<span class=\"keyword\">if</span>(StringUtils.isNotBlank(acctNo))&#123;</div><div class=\"line\">\t\texpressions.add(cb.equal(root.&lt;String&gt;get(<span class=\"string\">\"acctNo\"</span>), acctNo));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(StringUtils.isNotBlank(productId))&#123;</div><div class=\"line\">\t\texpressions.add(cb.equal(root.&lt;String&gt;get(<span class=\"string\">\"productId\"</span>), productId));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tquery.select(sumSubAmtQuery);</div><div class=\"line\">\tquery.where(predicate);</div><div class=\"line\">\tBigDecimal result = em.createQuery(query).getSingleResult();</div><div class=\"line\">\t<span class=\"keyword\">return</span> result==<span class=\"keyword\">null</span>?BigDecimal.ZERO:result;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> List&lt;ProjectPo&gt; <span class=\"title\">getProjectByFncrId</span><span class=\"params\">(<span class=\"keyword\">final</span> String fncrAcctNo)</span> </span>&#123;</div><div class=\"line\">\tList&lt;ProjectPo&gt; list = projectRepository.findAll(<span class=\"keyword\">new</span> Specification&lt;ProjectPo&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;ProjectPo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t\texpressions.add(cb.equal(root.&lt;String&gt; get(<span class=\"string\">\"fncrAcctNo\"</span>), fncrAcctNo));</div><div class=\"line\">\t\t\tList&lt;EProjStatus&gt; inStatus = Arrays.asList(EProjStatus.INIT, EProjStatus.WRTR_AUDIT,</div><div class=\"line\">\t\t\t\t\tEProjStatus.RISK_AUDIT, EProjStatus.RISK_RATING, EProjStatus.PASSED);</div><div class=\"line\">\t\t\texpressions.add(root.&lt;EProjStatus&gt; get(<span class=\"string\">\"status\"</span>).in(inStatus));</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">\t<span class=\"keyword\">return</span> list;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@Transactional</span>(readOnly = <span class=\"keyword\">true</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;SimpleMemberDto&gt; <span class=\"title\">searchFncrMembers</span><span class=\"params\">(<span class=\"keyword\">final</span> String keyWord)</span> </span>&#123;</div><div class=\"line\">\tSort sort = <span class=\"keyword\">new</span> Sort(Direction.ASC, PersistenceUtil.getIdName(AcctPo.class));</div><div class=\"line\">\tPageable pageable = <span class=\"keyword\">new</span> PageRequest(<span class=\"number\">0</span>, <span class=\"number\">20</span>, sort);</div><div class=\"line\">\tPage&lt;AcctPo&gt; page = acctRepository.findAll(<span class=\"keyword\">new</span> Specification&lt;AcctPo&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;AcctPo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t\texpressions.add(cb.exists(getSubQuery(query, cb, root.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>))));</div><div class=\"line\">\t\t\tString keyWordTrim = keyWord.trim();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (StringUtils.isNotBlank(keyWord)) &#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.or(</div><div class=\"line\">\t\t\t\t\t\tcb.like(root.&lt;String&gt; get(<span class=\"string\">\"acctNo\"</span>), <span class=\"string\">\"%\"</span> + keyWordTrim + <span class=\"string\">\"%\"</span>),</div><div class=\"line\">\t\t\t\t\t\tcb.or(cb.like(root.&lt;UserPo&gt; get(<span class=\"string\">\"userPo\"</span>).&lt;String&gt; get(<span class=\"string\">\"sname\"</span>), <span class=\"string\">\"%\"</span> + keyWordTrim</div><div class=\"line\">\t\t\t\t\t\t\t\t+ <span class=\"string\">\"%\"</span>),</div><div class=\"line\">\t\t\t\t\t\t\t\tcb.like(root.&lt;UserPo&gt; get(<span class=\"string\">\"userPo\"</span>).&lt;String&gt; get(<span class=\"string\">\"mobile\"</span>), <span class=\"string\">\"%\"</span> + keyWordTrim</div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t+ <span class=\"string\">\"%\"</span>))));</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.equal(root.&lt;String&gt; get(<span class=\"string\">\"acctNo\"</span>), <span class=\"string\">\"0\"</span>));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </span></span></div><div class=\"line\">\t\t\t\tCriteriaBuilder cb, Path&lt;String&gt; userId) &#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;SimpleUserPo&gt; suser = subQuery.from(SimpleUserPo.class);</div><div class=\"line\">\t\t\tJoin&lt;SimpleUserPo, FncrInfoPo&gt; fncrInfo = suser.join(<span class=\"string\">\"fncrInfoPo\"</span>, JoinType.INNER);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(suser.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">\t\t\t\t\tcb.and(cb.equal(suser.get(<span class=\"string\">\"userId\"</span>), userId), </div><div class=\"line\">\t\t\t\t\t\t\tcb.equal(suser.get(<span class=\"string\">\"userId\"</span>), fncrInfo.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>))));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;, pageable);</div><div class=\"line\">\tList&lt;SimpleMemberDto&gt; items = <span class=\"keyword\">new</span> ArrayList&lt;SimpleMemberDto&gt;();</div><div class=\"line\">\tList&lt;AcctPo&gt; list = page.getContent();</div><div class=\"line\">\t<span class=\"keyword\">for</span> (AcctPo acct : list) &#123;</div><div class=\"line\">\t\tSimpleMemberDto dto = <span class=\"keyword\">new</span> SimpleMemberDto();</div><div class=\"line\">\t\tUserPo userPo = acct.getUserPo();</div><div class=\"line\">\t\tStringBuilder label = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">\t\tString sname = userPo.getSname();</div><div class=\"line\">\t\tString mobile = userPo.getMobile();</div><div class=\"line\">\t\tmobile = <span class=\"keyword\">null</span> == mobile ? <span class=\"string\">\"\"</span>:mobile;</div><div class=\"line\">\t\tString acctNo = acct.getAcctNo();</div><div class=\"line\">\t\tdto.setAcctNo(acctNo);</div><div class=\"line\">\t\tdto.setSname(sname);</div><div class=\"line\">\t\tdto.setMobile(mobile);</div><div class=\"line\">\t\tlabel.append(<span class=\"string\">\"姓名:\"</span>);</div><div class=\"line\">\t\tlabel.append(sname);</div><div class=\"line\">\t\tlabel.append(<span class=\"string\">\",手机号:\"</span>);</div><div class=\"line\">\t\tlabel.append(mobile);</div><div class=\"line\">\t\tlabel.append(<span class=\"string\">\",交易账号:\"</span>);</div><div class=\"line\">\t\tlabel.append(acctNo);</div><div class=\"line\">\t\tdto.setLabel(label.toString());</div><div class=\"line\">\t\titems.add(dto);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> items;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;GroupUserInfoDto&gt; <span class=\"title\">getInvsUsers</span><span class=\"params\">(<span class=\"keyword\">final</span> GroupUserSearchDto searchDto)</span> </span>&#123;</div><div class=\"line\">\tSpecification&lt;UserPo&gt; spec = <span class=\"keyword\">new</span> Specification&lt;UserPo&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;UserPo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t\texpressions.add(cb.not(cb.exists(getSubQuery(query, cb, searchDto.getGroupId(), root.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>)))));</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(searchDto!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(StringUtils.isNotBlank(searchDto.getKeyWord()))&#123;</div><div class=\"line\">\t\t\t\t\texpressions.add(cb.or(</div><div class=\"line\">\t\t\t\t\t\tcb.like(root.&lt;String&gt;get(<span class=\"string\">\"sname\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getKeyWord()+<span class=\"string\">\"%\"</span>),</div><div class=\"line\">\t\t\t\t\t\tcb.like(root.&lt;String&gt;get(<span class=\"string\">\"nickName\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getKeyWord()+<span class=\"string\">\"%\"</span>),</div><div class=\"line\">\t\t\t\t\t\tcb.like(root.&lt;String&gt;get(<span class=\"string\">\"mobile\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getKeyWord()+<span class=\"string\">\"%\"</span>),</div><div class=\"line\">\t\t\t\t\t\tcb.exists(getWorkUnitSubQuery(query, cb, searchDto.getKeyWord(), root.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>)))</div><div class=\"line\">\t\t\t\t\t));</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 未传关键字查询条件，则查询结果为空</span></div><div class=\"line\">\t\t\t\t\texpressions.add(cb.equal(root.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>),<span class=\"string\">\"0\"</span>));</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </span></span></div><div class=\"line\">\t\t\t\tCriteriaBuilder cb, String groupId, Path&lt;String&gt; userId) &#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;GroupUserPo&gt; groupUsers = subQuery.from(GroupUserPo.class);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(groupUsers.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">\t\t\t\t\tcb.and(cb.equal(groupUsers.&lt;String&gt; get(<span class=\"string\">\"groupId\"</span>), groupId)), </div><div class=\"line\">\t\t\t\t\tcb.equal(groupUsers.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>), userId));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getWorkUnitSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </span></span></div><div class=\"line\">\t\t\t\tCriteriaBuilder cb, String keyWord, Path&lt;String&gt; userId) &#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;PersonalInfoPo&gt; personalInfo = subQuery.from(PersonalInfoPo.class);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(personalInfo.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">\t\t\t\t\tcb.equal(personalInfo.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>), userId),</div><div class=\"line\">\t\t\t\t\tcb.like(personalInfo.&lt;String&gt; get(<span class=\"string\">\"workUnit\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getKeyWord()+<span class=\"string\">\"%\"</span>));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tList&lt;UserPo&gt; userList = userRepository.findAll(spec);</div><div class=\"line\">\tList&lt;GroupUserInfoDto&gt; dtoList = <span class=\"keyword\">new</span> ArrayList&lt;GroupUserInfoDto&gt;();</div><div class=\"line\">\t<span class=\"keyword\">for</span>(UserPo ur:userList)&#123;</div><div class=\"line\">\t\tGroupUserInfoDto dto = <span class=\"keyword\">new</span> GroupUserInfoDto();</div><div class=\"line\">\t\tdto.setName(ur.getSname());</div><div class=\"line\">\t\tdto.setNickName(ur.getNickName());</div><div class=\"line\">\t\tdto.setUserType(ur.getUserType());</div><div class=\"line\">\t\tdto.setUserId(ur.getUserId());</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(ur.getUserType() == EUserType.PERSON)&#123;</div><div class=\"line\">\t\t\tPersonalInfoPo persnoalInfo = personalInfoRepository.findOne(ur.getUserId());</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(persnoalInfo!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\t\tdto.setWorkUnit(persnoalInfo.getWorkUnit());</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\tdto.setWorkUnit(<span class=\"keyword\">null</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tdtoList.add(dto);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> dtoList;</div><div class=\"line\">&#125;</div><div class=\"line\">\t</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * json</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Specification&lt;Qfjbxxdz&gt; <span class=\"title\">getWhereClause</span><span class=\"params\">(<span class=\"keyword\">final</span> JSONArray condetion,<span class=\"keyword\">final</span> JSONArray search)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Specification&lt;Qfjbxxdz&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;Qfjbxxdz&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tList&lt;Predicate&gt; predicate = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</div><div class=\"line\">\t\t\tIterator&lt;JSONObject&gt; iterator = condetion.iterator();</div><div class=\"line\">\t\t\tPredicate preP = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span>(iterator.hasNext())&#123;</div><div class=\"line\">\t\t\t\tJSONObject jsonObject = iterator.next();</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//注意：这里用的root.join 因为我们要用qfjbxx对象里的字段作为条件就必须这样做join方法有很多重载，使用的时候可以多根据自己业务决断</span></div><div class=\"line\">\t\t\t\tPredicate p1 = cb.equal(root.join(<span class=\"string\">\"qfjbxx\"</span>).get(<span class=\"string\">\"id\"</span>).as(String.class),jsonObject.get(<span class=\"string\">\"fzId\"</span>).toString());</div><div class=\"line\">\t\t\t\tPredicate p2 = cb.equal(root.get(<span class=\"string\">\"fzcc\"</span>).as(String.class),jsonObject.get(<span class=\"string\">\"ccId\"</span>).toString());</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(preP!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\t\t\tpreP = cb.or(preP,cb.and(p1,p2));</div><div class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\t\tpreP = cb.and(p1,p2);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tJSONObject jsonSearch=(JSONObject) search.get(<span class=\"number\">0</span>);</div><div class=\"line\">\t\t\tPredicate p3=<span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span>!=jsonSearch.get(<span class=\"string\">\"xm\"</span>)&amp;&amp;jsonSearch.get(<span class=\"string\">\"xm\"</span>).toString().length()&gt;<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t   p3=cb.like(root.join(<span class=\"string\">\"criminalInfo\"</span>).get(<span class=\"string\">\"xm\"</span>).as(String.class),<span class=\"string\">\"%\"</span>+jsonSearch.get(<span class=\"string\">\"xm\"</span>).toString()+<span class=\"string\">\"%\"</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tPredicate p4=<span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span>!=jsonSearch.get(<span class=\"string\">\"fzmc\"</span>)&amp;&amp;jsonSearch.get(<span class=\"string\">\"fzmc\"</span>).toString().length()&gt;<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t\tp4=cb.like(root.join(<span class=\"string\">\"qfjbxx\"</span>).get(<span class=\"string\">\"fzmc\"</span>).as(String.class),<span class=\"string\">\"%\"</span>+jsonSearch.get(<span class=\"string\">\"fzmc\"</span>).toString()+<span class=\"string\">\"%\"</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tPredicate preA;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span>!=p3&amp;&amp;<span class=\"keyword\">null</span>!=p4)&#123;</div><div class=\"line\">\t\t\t\tPredicate  preS =cb.and(p3,p4);</div><div class=\"line\">\t\t\t\tpreA =cb.and(preP,preS);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"keyword\">null</span>==p3&amp;&amp;<span class=\"keyword\">null</span>!=p4)&#123;</div><div class=\"line\">\t\t\t\tpreA=cb.and(preP,p4);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"keyword\">null</span>!=p3&amp;&amp;<span class=\"keyword\">null</span>==p4)&#123;</div><div class=\"line\">\t\t\t\tpreA=cb.and(preP,p3);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\tpreA=preP;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tpredicate.add(preA);</div><div class=\"line\">\t\t\tPredicate[] pre = <span class=\"keyword\">new</span> Predicate[predicate.size()];</div><div class=\"line\">\t\t\tquery.where(predicate.toArray(pre));</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> query.getRestriction();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> List&lt;SubAcctTrxJnlPo&gt; <span class=\"title\">getRechargeList</span><span class=\"params\">(<span class=\"keyword\">final</span> String trxDate, <span class=\"keyword\">final</span> String serviceCenterId)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> subAcctTrxJnlRepository.findAll(<span class=\"keyword\">new</span> Specification&lt;SubAcctTrxJnlPo&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;SubAcctTrxJnlPo&gt; root, CriteriaQuery&lt;?&gt; query,</span></span></div><div class=\"line\">\t\t\t\tCriteriaBuilder cb) &#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t\texpressions</div><div class=\"line\">\t\t\t\t\t.add(cb.exists(getSubQuery(query, cb, root.&lt;String&gt; get(<span class=\"string\">\"acctNo\"</span>), serviceCenterId)));</div><div class=\"line\">\t\t\texpressions.add(cb.equal(root.&lt;String&gt; get(<span class=\"string\">\"trxDate\"</span>), trxDate));</div><div class=\"line\">\t\t\texpressions.add(cb.equal(root.&lt;String&gt; get(<span class=\"string\">\"useType\"</span>), EUseType.RECHARGE));</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb,</span></span></div><div class=\"line\">\t\t\t\tPath&lt;String&gt; acctNo, String serviceCenterId) &#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;AcctPo&gt; rAcct = subQuery.from(AcctPo.class);</div><div class=\"line\">\t\t\tRoot&lt;InvestorInfoPo&gt; rInvestor = subQuery.from(InvestorInfoPo.class);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(rAcct.&lt;String&gt; get(<span class=\"string\">\"acctNo\"</span>))</div><div class=\"line\">\t\t\t\t\t.where(cb.and(cb.equal(rAcct.&lt;String&gt; get(<span class=\"string\">\"acctNo\"</span>), acctNo),</div><div class=\"line\">\t\t\t\t\t\t\tcb.equal(rAcct.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>), rInvestor.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>)),</div><div class=\"line\">\t\t\t\t\t\t\tcb.equal(rInvestor.&lt;String&gt; get(<span class=\"string\">\"serviceCenterId\"</span>), serviceCenterId)));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@Transactional</span>(readOnly = <span class=\"keyword\">true</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;AcctDto&gt; <span class=\"title\">getAcctInfoList</span><span class=\"params\">(<span class=\"keyword\">final</span> List&lt;String&gt; userIdList, </span></span></div><div class=\"line\">\t\t<span class=\"keyword\">final</span> List&lt;String&gt; groupIds, <span class=\"keyword\">final</span> List&lt;EBizRole&gt; bizRoles)&#123;</div><div class=\"line\">\tSpecification&lt;AcctPo&gt; spec = <span class=\"keyword\">new</span> Specification&lt;AcctPo&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;AcctPo&gt; root, CriteriaQuery&lt;?&gt; query,\tCriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(userIdList!=<span class=\"keyword\">null</span>&amp;&amp;!userIdList.isEmpty())&#123;</div><div class=\"line\">\t\t\t\texpressions.add(root.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>).in(userIdList));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(bizRoles!=<span class=\"keyword\">null</span> &amp;&amp; !bizRoles.isEmpty())&#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.exists(getRolesSubQuery(query, cb, </div><div class=\"line\">\t\t\t\t\t\troot.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>), getRoleIds(bizRoles))));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(groupIds!=<span class=\"keyword\">null</span> &amp;&amp; !groupIds.isEmpty())&#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.exists(getGroupsSubQuery(query, cb, </div><div class=\"line\">\t\t\t\t\t\troot.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>), getGroupIds(groupIds))));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getRolesSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </span></span></div><div class=\"line\">\t\t\t\tCriteriaBuilder cb, Path&lt;String&gt; userId, Set&lt;String&gt; roleIds) &#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;UserRolePo&gt; param = subQuery.from(UserRolePo.class);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(param.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">\t\t\t\t\tcb.and(cb.equal(param.get(<span class=\"string\">\"userId\"</span>), userId),</div><div class=\"line\">\t\t\t\t\t\t   param.&lt;String&gt;get(<span class=\"string\">\"roleId\"</span>).in(roleIds)</div><div class=\"line\">\t\t\t));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getGroupsSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </span></span></div><div class=\"line\">\t\t\t\tCriteriaBuilder cb, Path&lt;String&gt; userId, Set&lt;String&gt; groupIds) &#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;GroupUserPo&gt; param = subQuery.from(GroupUserPo.class);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(param.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">\t\t\t\t\tcb.and(cb.equal(param.get(<span class=\"string\">\"userId\"</span>), userId),</div><div class=\"line\">\t\t\t\t\t\t   param.&lt;String&gt;get(<span class=\"string\">\"groupId\"</span>).in(groupIds)</div><div class=\"line\">\t\t\t));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Set&lt;String&gt; <span class=\"title\">getRoleIds</span><span class=\"params\">(List&lt;EBizRole&gt; bizRoles)</span></span>&#123;</div><div class=\"line\">\t\t\tSet&lt;String&gt; sets = <span class=\"keyword\">new</span> HashSet&lt;String&gt;();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(EBizRole role:bizRoles)&#123;</div><div class=\"line\">\t\t\t\tsets.add(role.getRoleId());</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> sets;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Set&lt;String&gt; <span class=\"title\">getGroupIds</span><span class=\"params\">(List&lt;String&gt; groupIds)</span></span>&#123;</div><div class=\"line\">\t\t\tSet&lt;String&gt; sets = <span class=\"keyword\">new</span> HashSet&lt;String&gt;();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(String gid:groupIds)&#123;</div><div class=\"line\">\t\t\t\tsets.add(gid);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> sets;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tList&lt;AcctPo&gt; list = acctRepo.findAll(spec);</div><div class=\"line\">\t<span class=\"keyword\">return</span> packItems(list);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","excerpt":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getSumAmount</span><span class=\"params\">(<span class=\"keyword\">final</span> AcctDtlSearchDto searchDto, <span class=\"keyword\">final</span> ERecvPayFlag recvPayFlag)</span> </span>&#123;  </div><div class=\"line\">\tString startDate = searchDto.getStartDate();                                                </div><div class=\"line\">\tString endDate = searchDto.getEndDate();                                                    </div><div class=\"line\">\tEUseType useType = searchDto.getUseType();                                                  </div><div class=\"line\">\tCriteriaBuilder builder = em.getCriteriaBuilder();                                          </div><div class=\"line\">\tCriteriaQuery&lt;BigDecimal&gt; query = builder.createQuery(BigDecimal.class);                    </div><div class=\"line\">\tRoot&lt;SubAcctTrxJnlPo&gt; root = query.from(SubAcctTrxJnlPo.class);                             </div><div class=\"line\">\tPredicate predicate = builder.conjunction();                                                </div><div class=\"line\">\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();                         </div><div class=\"line\">\tExpression&lt;BigDecimal&gt; sumTrxAmt = builder.sum(root.&lt;BigDecimal&gt; get(<span class=\"string\">\"trxAmt\"</span>));            </div><div class=\"line\">\t<span class=\"keyword\">if</span> (StringUtils.isNotBlank(startDate)) &#123;                                                    </div><div class=\"line\">\t\texpressions.add(builder.greaterThanOrEqualTo(root.&lt;String&gt; get(<span class=\"string\">\"trxDate\"</span>), startDate)); </div><div class=\"line\">\t&#125;                                                                                           </div><div class=\"line\">\t<span class=\"keyword\">if</span> (StringUtils.isNotBlank(endDate)) &#123;                                                      </div><div class=\"line\">\t\texpressions.add(builder.lessThanOrEqualTo(root.&lt;String&gt; get(<span class=\"string\">\"trxDate\"</span>), endDate));      </div><div class=\"line\">\t&#125;                                                                                           </div><div class=\"line\">\t<span class=\"keyword\">if</span> (EUseType.ALL != useType) &#123;                                                              </div><div class=\"line\">\t\texpressions.add(builder.equal(root.&lt;EUseType&gt; get(<span class=\"string\">\"useType\"</span>), useType));                </div><div class=\"line\">\t&#125;                                                                                           </div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != recvPayFlag) &#123;                                                                  </div><div class=\"line\">\t\texpressions.add(builder.equal(root.&lt;ERecvPayFlag&gt; get(<span class=\"string\">\"recvPayFlag\"</span>), recvPayFlag));    </div><div class=\"line\">\t&#125;                                                                                           </div><div class=\"line\">\tquery.where(predicate);                                                                     </div><div class=\"line\">\tquery.select(sumTrxAmt);                                                                    </div><div class=\"line\">\tBigDecimal result = em.createQuery(query).getSingleResult();                                </div><div class=\"line\">\tresult = (<span class=\"keyword\">null</span> == result ? BigDecimal.ZERO : result);                                       </div><div class=\"line\">\t<span class=\"keyword\">return</span> result.toString();                                                                   </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> BigDecimal <span class=\"title\">getWarrantedProjectAmt</span><span class=\"params\">(<span class=\"keyword\">final</span> String userId)</span> </span>&#123;</div><div class=\"line\">\tList&lt;ProjectPo&gt; list = projectRepository.findAll(<span class=\"keyword\">new</span> Specification&lt;ProjectPo&gt;() &#123;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;ProjectPo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\texpressions.add(cb.equal(root.&lt;String&gt; get(<span class=\"string\">\"wrtrId\"</span>), userId));</div><div class=\"line\">\t\tList&lt;EProjStatus&gt; inStatus = Arrays.asList(EProjStatus.RISK_AUDIT, EProjStatus.RISK_RATING);</div><div class=\"line\">\t\texpressions.add(root.&lt;EProjStatus&gt; get(<span class=\"string\">\"status\"</span>).in(inStatus));</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">\tBigDecimal warrantAmt = BigDecimal.ZERO;</div><div class=\"line\">\t<span class=\"keyword\">for</span> (ProjectPo proj : list) &#123;</div><div class=\"line\">\t\twarrantAmt = warrantAmt.add(proj.getProjectAmt());</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> warrantAmt;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;ProdServItemDto&gt; <span class=\"title\">getItems</span><span class=\"params\">(<span class=\"keyword\">final</span> ProdServItemSearchDto searchDto, <span class=\"keyword\">final</span> String currUserId)</span></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">long</span> times = System.currentTimeMillis();</div><div class=\"line\">\tList&lt;ProdServInfoPo&gt; list = prodServInfoRepo.findAll(<span class=\"keyword\">new</span> Specification&lt;ProdServInfoPo&gt;()&#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;ProdServInfoPo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tString workDate = CommonBusinessUtil.getCurrentWorkDate();</div><div class=\"line\">                List&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">                <span class=\"comment\">// 已授信过滤</span></div><div class=\"line\">                expressions.add(cb.exists(getProdServParamSubQuery(query, cb, workDate, root.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>))));</div><div class=\"line\">                <span class=\"keyword\">if</span>(StringUtils.isNotBlank(searchDto.getName()))&#123;</div><div class=\"line\">                \texpressions.add(cb.like(root.&lt;EnterpriseInfoPo&gt;get(<span class=\"string\">\"enterpriseInfoPo\"</span>).&lt;String&gt;get(<span class=\"string\">\"name\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getName()+<span class=\"string\">\"%\"</span>));</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">if</span>(StringUtils.isNotBlank(searchDto.getTelephone()))&#123;</div><div class=\"line\">                \texpressions.add(cb.like(root.&lt;EnterpriseInfoPo&gt;get(<span class=\"string\">\"enterpriseInfoPo\"</span>).&lt;String&gt;get(<span class=\"string\">\"telephone\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getTelephone()+<span class=\"string\">\"%\"</span>));</div><div class=\"line\">                &#125;</div><div class=\"line\">                Expression&lt;Boolean&gt; servProvTypes = root.&lt;EWarrantProdServProvType&gt; get(<span class=\"string\">\"servProvType\"</span>).in(EWarrantProdServProvType.MICRO_CMPY, EWarrantProdServProvType.WRTR_CMPY);</div><div class=\"line\">                Expression&lt;Boolean&gt; unionServProvType = cb.and(</div><div class=\"line\">                \t\tcb.equal(root.&lt;EWarrantProdServProvType&gt; get(<span class=\"string\">\"servProvType\"</span>), EWarrantProdServProvType.UNION_CMPY), </div><div class=\"line\">                \t\tcb.exists(getSubQuery(query, cb, currUserId, root.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>))));</div><div class=\"line\">                expressions.add(cb.or(servProvTypes, unionServProvType));</div><div class=\"line\">                <span class=\"comment\">/** 如果是小贷,不显示自己 **/</span></div><div class=\"line\">                expressions.add(cb.notEqual(root.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>), currUserId));</div><div class=\"line\">                <span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </div><div class=\"line\">\t\t\t\t\tCriteriaBuilder cb, String fncrId, Path&lt;String&gt; prodServUserId)</span> </span>&#123;</div><div class=\"line\">                Subquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">                Root&lt;ProdServInfoPo&gt; prodServ = subQuery.from(ProdServInfoPo.class);</div><div class=\"line\">                Join&lt;ProdServInfoPo, ProdServGroupPo&gt; prodServGroup = prodServ.join(<span class=\"string\">\"prodServGroupList\"</span>, JoinType.INNER);</div><div class=\"line\">                Join&lt;ProdServGroupPo, GroupPo&gt; group = prodServGroup.join(<span class=\"string\">\"groupPo\"</span>, JoinType.INNER);</div><div class=\"line\">                Join&lt;GroupPo, GroupUserPo&gt; groupUser = group.join(<span class=\"string\">\"groupUserPoSet\"</span>, JoinType.INNER);</div><div class=\"line\">                Join&lt;GroupUserPo, FncrInfoPo&gt; fncrInfo = groupUser.join(<span class=\"string\">\"fncrInfoPo\"</span>, JoinType.INNER);</div><div class=\"line\">                <span class=\"keyword\">return</span> subQuery.select(prodServ.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">                \t\tcb.and(cb.equal(prodServ.get(<span class=\"string\">\"userId\"</span>), prodServUserId), </div><div class=\"line\">                \t\t\t\tcb.equal(fncrInfo.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>), fncrId)));</div><div class=\"line\">            &#125;</div><div class=\"line\">\t\t\t</div><div class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getProdServParamSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </div><div class=\"line\">\t\t\t\t\tCriteriaBuilder cb, String workDate, Path&lt;String&gt; userId)</span> </span>&#123;</div><div class=\"line\">                Subquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">                Root&lt;ProdServParamPo&gt; param = subQuery.from(ProdServParamPo.class);</div><div class=\"line\">                <span class=\"keyword\">return</span> subQuery.select(param.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">                \t\tcb.and(cb.equal(param.get(<span class=\"string\">\"userId\"</span>), userId), </div><div class=\"line\">                \t\t\t\tcb.lessThanOrEqualTo(param.&lt;String&gt;get(<span class=\"string\">\"startDate\"</span>), workDate), </div><div class=\"line\">                \t\t\t\tcb.greaterThanOrEqualTo(param.&lt;String&gt;get(<span class=\"string\">\"endDate\"</span>), workDate)</div><div class=\"line\">                \t\t));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">\t\tList&lt;ProdServItemDto&gt; items = <span class=\"keyword\">new</span> ArrayList&lt;ProdServItemDto&gt;();</div><div class=\"line\">\t\t<span class=\"keyword\">for</span>(ProdServInfoPo serv: list)&#123;</div><div class=\"line\">\t\t\tEnterpriseInfoPo ent = serv.getEnterpriseInfoPo();</div><div class=\"line\">\t\t\tProdServItemDto item = <span class=\"keyword\">new</span> ProdServItemDto();</div><div class=\"line\">\t\t\titem.setUserId(serv.getUserId());</div><div class=\"line\">\t\t\titem.setWrtrKind(serv.getWrtrKind());</div><div class=\"line\">\t\t\titem.setServProvType(serv.getServProvType());</div><div class=\"line\">\t\t\titem.setQq(ent.getQq());</div><div class=\"line\">\t\t\titem.setName(ent.getName());</div><div class=\"line\">\t\t\titem.setAddress(ent.getAddress());</div><div class=\"line\">\t\t\titem.setZipCode(ent.getZipCode());</div><div class=\"line\">\t\t\titem.setContractName(ent.getContractName());</div><div class=\"line\">\t\t\titem.setTelephone(ent.getTelephone());</div><div class=\"line\">\t\t\titem.setWrtrFileId(serv.getWrtrFileId());</div><div class=\"line\">\t\t\titems.add(item);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tlogger.debug(<span class=\"string\">\"cost times is &#123;&#125; ms\"</span>, (System.currentTimeMillis()-times));</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> items;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\"><span class=\"comment\">//expressions.add(cb.greaterThanOrEqualTo(root.&lt;Date&gt; get(\"createTs\"), DateUtils.getStartDate(DateUtils.getDate(fromDate, YYYY_MM_DD))));</span></div><div class=\"line\"><span class=\"comment\">//expressions.add(cb.lessThanOrEqualTo(root.&lt;Date&gt; get(\"createTs\"), DateUtils.getEndDate(DateUtils.getDate(toDate, YYYY_MM_DD))));</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\">*公告查询,这里主要看根据roleIds 不同用户显示不同的公告</div><div class=\"line\">*/</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> DataTablesResponseDto&lt;ArticleDto&gt; <span class=\"title\">getArticlesForHome</span><span class=\"params\">(<span class=\"keyword\">final</span> ArticleSearchDto searchCriteria)</span> </span>&#123;</div><div class=\"line\">Pageable pageable = PaginationUtil.buildPageable(searchCriteria,</div><div class=\"line\">\t\tPersistenceUtil.getIdName(ArticlePo.class));</div><div class=\"line\">Specification&lt;ArticlePo&gt; specification = <span class=\"keyword\">new</span> Specification&lt;ArticlePo&gt;() &#123;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;ArticlePo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != searchCriteria) &#123;</div><div class=\"line\">\t\t\tString nowDateStr = DateUtils.formatDate(<span class=\"keyword\">new</span> Date(), ApplicationConsts.DATE_FORMAT);</div><div class=\"line\">\t\t\tEArticleStatus status = searchCriteria.getStatus();</div><div class=\"line\">\t\t\tEColumnCategory categoryId = searchCriteria.getCategoryId();</div><div class=\"line\">\t\t\tList&lt;Predicate&gt; predicateList = <span class=\"keyword\">new</span> ArrayList&lt;Predicate&gt;();</div><div class=\"line\">\t\t\tList&lt;UserRolePo&gt; userRolePoList = userRoleRepository.findByUserId(securityContext</div><div class=\"line\">\t\t\t\t\t.getCurrentUserId());</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (UserRolePo userRole : userRolePoList) &#123;</div><div class=\"line\">\t\t\t\tpredicateList.add(cb.like(root.&lt;String&gt; get(<span class=\"string\">\"roleIds\"</span>), <span class=\"string\">\"%\"</span> + userRole.getRoleId()</div><div class=\"line\">\t\t\t\t\t\t+ <span class=\"string\">\"%\"</span>));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tpredicateList.add(cb.isNull(root.&lt;String&gt; get(<span class=\"string\">\"roleIds\"</span>)));</div><div class=\"line\"></div><div class=\"line\">\t\t\tPredicate[] predicate1 = <span class=\"keyword\">new</span> Predicate[predicateList.size()];</div><div class=\"line\">\t\t\tPredicate predicate2 = cb.or(predicateList.toArray(predicate1));</div><div class=\"line\">\t\t\texpressions.add(predicate2);</div><div class=\"line\"></div><div class=\"line\">\t\t\texpressions.add(cb.lessThanOrEqualTo(root.&lt;String&gt; get(<span class=\"string\">\"startDt\"</span>), nowDateStr));</div><div class=\"line\">\t\t\texpressions.add(cb.greaterThanOrEqualTo(root.&lt;String&gt; get(<span class=\"string\">\"endDt\"</span>), nowDateStr));</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (EArticleStatus.ALL != status &amp;&amp; <span class=\"keyword\">null</span> != status) &#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.equal(root.&lt;EArticleStatus&gt; get(<span class=\"string\">\"status\"</span>), status));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (EColumnCategory.ALL != categoryId &amp;&amp; <span class=\"keyword\">null</span> != categoryId) &#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.equal(root.&lt;EColumnCategory&gt; get(<span class=\"string\">\"categoryId\"</span>), categoryId));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;;</div><div class=\"line\">Page&lt;ArticlePo&gt; articlePos = articleRepository.findAll(specification, pageable);</div><div class=\"line\">DataTablesResponseDto&lt;ArticleDto&gt; result = PaginationUtil.populateFromPage(articlePos,</div><div class=\"line\">\t\t<span class=\"keyword\">new</span> Function&lt;ArticlePo, ArticleDto&gt;() &#123;</div><div class=\"line\">\t\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> ArticleDto <span class=\"title\">apply</span><span class=\"params\">(ArticlePo po)</span> </span>&#123;</div><div class=\"line\">\t\t\t\tArticleDto articleDto = ConverterService.convert(po, ArticleDto.class);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> articleDto;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\"><span class=\"keyword\">return</span> result;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> BigDecimal <span class=\"title\">getSumInvstAmt</span><span class=\"params\">(String acctNo, String productId)</span></span>&#123;</div><div class=\"line\">\tCriteriaBuilder cb = em.getCriteriaBuilder();</div><div class=\"line\">\tCriteriaQuery&lt;BigDecimal&gt; query = cb.createQuery(BigDecimal.class);</div><div class=\"line\">\tRoot&lt;ProductSubscribeDtlPo&gt; root = query.from(ProductSubscribeDtlPo.class);</div><div class=\"line\">\tExpression&lt;BigDecimal&gt; subsAmtCm = cb.prod(root.&lt;BigDecimal&gt;get(<span class=\"string\">\"unitAmt\"</span>), root.&lt;Long&gt;get(<span class=\"string\">\"unit\"</span>).as(BigDecimal.class));</div><div class=\"line\">\tExpression&lt;BigDecimal&gt; sumSubAmtQuery = cb.sum(subsAmtCm);</div><div class=\"line\">\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t<span class=\"keyword\">if</span>(StringUtils.isNotBlank(acctNo))&#123;</div><div class=\"line\">\t\texpressions.add(cb.equal(root.&lt;String&gt;get(<span class=\"string\">\"acctNo\"</span>), acctNo));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">if</span>(StringUtils.isNotBlank(productId))&#123;</div><div class=\"line\">\t\texpressions.add(cb.equal(root.&lt;String&gt;get(<span class=\"string\">\"productId\"</span>), productId));</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tquery.select(sumSubAmtQuery);</div><div class=\"line\">\tquery.where(predicate);</div><div class=\"line\">\tBigDecimal result = em.createQuery(query).getSingleResult();</div><div class=\"line\">\t<span class=\"keyword\">return</span> result==<span class=\"keyword\">null</span>?BigDecimal.ZERO:result;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> List&lt;ProjectPo&gt; <span class=\"title\">getProjectByFncrId</span><span class=\"params\">(<span class=\"keyword\">final</span> String fncrAcctNo)</span> </span>&#123;</div><div class=\"line\">\tList&lt;ProjectPo&gt; list = projectRepository.findAll(<span class=\"keyword\">new</span> Specification&lt;ProjectPo&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;ProjectPo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t\texpressions.add(cb.equal(root.&lt;String&gt; get(<span class=\"string\">\"fncrAcctNo\"</span>), fncrAcctNo));</div><div class=\"line\">\t\t\tList&lt;EProjStatus&gt; inStatus = Arrays.asList(EProjStatus.INIT, EProjStatus.WRTR_AUDIT,</div><div class=\"line\">\t\t\t\t\tEProjStatus.RISK_AUDIT, EProjStatus.RISK_RATING, EProjStatus.PASSED);</div><div class=\"line\">\t\t\texpressions.add(root.&lt;EProjStatus&gt; get(<span class=\"string\">\"status\"</span>).in(inStatus));</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">\t<span class=\"keyword\">return</span> list;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@Transactional</span>(readOnly = <span class=\"keyword\">true</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;SimpleMemberDto&gt; <span class=\"title\">searchFncrMembers</span><span class=\"params\">(<span class=\"keyword\">final</span> String keyWord)</span> </span>&#123;</div><div class=\"line\">\tSort sort = <span class=\"keyword\">new</span> Sort(Direction.ASC, PersistenceUtil.getIdName(AcctPo.class));</div><div class=\"line\">\tPageable pageable = <span class=\"keyword\">new</span> PageRequest(<span class=\"number\">0</span>, <span class=\"number\">20</span>, sort);</div><div class=\"line\">\tPage&lt;AcctPo&gt; page = acctRepository.findAll(<span class=\"keyword\">new</span> Specification&lt;AcctPo&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;AcctPo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t\texpressions.add(cb.exists(getSubQuery(query, cb, root.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>))));</div><div class=\"line\">\t\t\tString keyWordTrim = keyWord.trim();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (StringUtils.isNotBlank(keyWord)) &#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.or(</div><div class=\"line\">\t\t\t\t\t\tcb.like(root.&lt;String&gt; get(<span class=\"string\">\"acctNo\"</span>), <span class=\"string\">\"%\"</span> + keyWordTrim + <span class=\"string\">\"%\"</span>),</div><div class=\"line\">\t\t\t\t\t\tcb.or(cb.like(root.&lt;UserPo&gt; get(<span class=\"string\">\"userPo\"</span>).&lt;String&gt; get(<span class=\"string\">\"sname\"</span>), <span class=\"string\">\"%\"</span> + keyWordTrim</div><div class=\"line\">\t\t\t\t\t\t\t\t+ <span class=\"string\">\"%\"</span>),</div><div class=\"line\">\t\t\t\t\t\t\t\tcb.like(root.&lt;UserPo&gt; get(<span class=\"string\">\"userPo\"</span>).&lt;String&gt; get(<span class=\"string\">\"mobile\"</span>), <span class=\"string\">\"%\"</span> + keyWordTrim</div><div class=\"line\">\t\t\t\t\t\t\t\t\t\t+ <span class=\"string\">\"%\"</span>))));</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.equal(root.&lt;String&gt; get(<span class=\"string\">\"acctNo\"</span>), <span class=\"string\">\"0\"</span>));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </div><div class=\"line\">\t\t\t\tCriteriaBuilder cb, Path&lt;String&gt; userId)</span> </span>&#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;SimpleUserPo&gt; suser = subQuery.from(SimpleUserPo.class);</div><div class=\"line\">\t\t\tJoin&lt;SimpleUserPo, FncrInfoPo&gt; fncrInfo = suser.join(<span class=\"string\">\"fncrInfoPo\"</span>, JoinType.INNER);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(suser.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">\t\t\t\t\tcb.and(cb.equal(suser.get(<span class=\"string\">\"userId\"</span>), userId), </div><div class=\"line\">\t\t\t\t\t\t\tcb.equal(suser.get(<span class=\"string\">\"userId\"</span>), fncrInfo.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>))));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;, pageable);</div><div class=\"line\">\tList&lt;SimpleMemberDto&gt; items = <span class=\"keyword\">new</span> ArrayList&lt;SimpleMemberDto&gt;();</div><div class=\"line\">\tList&lt;AcctPo&gt; list = page.getContent();</div><div class=\"line\">\t<span class=\"keyword\">for</span> (AcctPo acct : list) &#123;</div><div class=\"line\">\t\tSimpleMemberDto dto = <span class=\"keyword\">new</span> SimpleMemberDto();</div><div class=\"line\">\t\tUserPo userPo = acct.getUserPo();</div><div class=\"line\">\t\tStringBuilder label = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">\t\tString sname = userPo.getSname();</div><div class=\"line\">\t\tString mobile = userPo.getMobile();</div><div class=\"line\">\t\tmobile = <span class=\"keyword\">null</span> == mobile ? <span class=\"string\">\"\"</span>:mobile;</div><div class=\"line\">\t\tString acctNo = acct.getAcctNo();</div><div class=\"line\">\t\tdto.setAcctNo(acctNo);</div><div class=\"line\">\t\tdto.setSname(sname);</div><div class=\"line\">\t\tdto.setMobile(mobile);</div><div class=\"line\">\t\tlabel.append(<span class=\"string\">\"姓名:\"</span>);</div><div class=\"line\">\t\tlabel.append(sname);</div><div class=\"line\">\t\tlabel.append(<span class=\"string\">\",手机号:\"</span>);</div><div class=\"line\">\t\tlabel.append(mobile);</div><div class=\"line\">\t\tlabel.append(<span class=\"string\">\",交易账号:\"</span>);</div><div class=\"line\">\t\tlabel.append(acctNo);</div><div class=\"line\">\t\tdto.setLabel(label.toString());</div><div class=\"line\">\t\titems.add(dto);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> items;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;GroupUserInfoDto&gt; <span class=\"title\">getInvsUsers</span><span class=\"params\">(<span class=\"keyword\">final</span> GroupUserSearchDto searchDto)</span> </span>&#123;</div><div class=\"line\">\tSpecification&lt;UserPo&gt; spec = <span class=\"keyword\">new</span> Specification&lt;UserPo&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;UserPo&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t\texpressions.add(cb.not(cb.exists(getSubQuery(query, cb, searchDto.getGroupId(), root.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>)))));</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(searchDto!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(StringUtils.isNotBlank(searchDto.getKeyWord()))&#123;</div><div class=\"line\">\t\t\t\t\texpressions.add(cb.or(</div><div class=\"line\">\t\t\t\t\t\tcb.like(root.&lt;String&gt;get(<span class=\"string\">\"sname\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getKeyWord()+<span class=\"string\">\"%\"</span>),</div><div class=\"line\">\t\t\t\t\t\tcb.like(root.&lt;String&gt;get(<span class=\"string\">\"nickName\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getKeyWord()+<span class=\"string\">\"%\"</span>),</div><div class=\"line\">\t\t\t\t\t\tcb.like(root.&lt;String&gt;get(<span class=\"string\">\"mobile\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getKeyWord()+<span class=\"string\">\"%\"</span>),</div><div class=\"line\">\t\t\t\t\t\tcb.exists(getWorkUnitSubQuery(query, cb, searchDto.getKeyWord(), root.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>)))</div><div class=\"line\">\t\t\t\t\t));</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\t\t<span class=\"comment\">// 未传关键字查询条件，则查询结果为空</span></div><div class=\"line\">\t\t\t\t\texpressions.add(cb.equal(root.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>),<span class=\"string\">\"0\"</span>));</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </div><div class=\"line\">\t\t\t\tCriteriaBuilder cb, String groupId, Path&lt;String&gt; userId)</span> </span>&#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;GroupUserPo&gt; groupUsers = subQuery.from(GroupUserPo.class);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(groupUsers.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">\t\t\t\t\tcb.and(cb.equal(groupUsers.&lt;String&gt; get(<span class=\"string\">\"groupId\"</span>), groupId)), </div><div class=\"line\">\t\t\t\t\tcb.equal(groupUsers.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>), userId));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getWorkUnitSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </div><div class=\"line\">\t\t\t\tCriteriaBuilder cb, String keyWord, Path&lt;String&gt; userId)</span> </span>&#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;PersonalInfoPo&gt; personalInfo = subQuery.from(PersonalInfoPo.class);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(personalInfo.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">\t\t\t\t\tcb.equal(personalInfo.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>), userId),</div><div class=\"line\">\t\t\t\t\tcb.like(personalInfo.&lt;String&gt; get(<span class=\"string\">\"workUnit\"</span>), <span class=\"string\">\"%\"</span>+searchDto.getKeyWord()+<span class=\"string\">\"%\"</span>));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t</div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tList&lt;UserPo&gt; userList = userRepository.findAll(spec);</div><div class=\"line\">\tList&lt;GroupUserInfoDto&gt; dtoList = <span class=\"keyword\">new</span> ArrayList&lt;GroupUserInfoDto&gt;();</div><div class=\"line\">\t<span class=\"keyword\">for</span>(UserPo ur:userList)&#123;</div><div class=\"line\">\t\tGroupUserInfoDto dto = <span class=\"keyword\">new</span> GroupUserInfoDto();</div><div class=\"line\">\t\tdto.setName(ur.getSname());</div><div class=\"line\">\t\tdto.setNickName(ur.getNickName());</div><div class=\"line\">\t\tdto.setUserType(ur.getUserType());</div><div class=\"line\">\t\tdto.setUserId(ur.getUserId());</div><div class=\"line\">\t\t<span class=\"keyword\">if</span>(ur.getUserType() == EUserType.PERSON)&#123;</div><div class=\"line\">\t\t\tPersonalInfoPo persnoalInfo = personalInfoRepository.findOne(ur.getUserId());</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(persnoalInfo!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\t\tdto.setWorkUnit(persnoalInfo.getWorkUnit());</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\tdto.setWorkUnit(<span class=\"keyword\">null</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tdtoList.add(dto);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> dtoList;</div><div class=\"line\">&#125;</div><div class=\"line\">\t</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * json</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> Specification&lt;Qfjbxxdz&gt; <span class=\"title\">getWhereClause</span><span class=\"params\">(<span class=\"keyword\">final</span> JSONArray condetion,<span class=\"keyword\">final</span> JSONArray search)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Specification&lt;Qfjbxxdz&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;Qfjbxxdz&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tList&lt;Predicate&gt; predicate = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</div><div class=\"line\">\t\t\tIterator&lt;JSONObject&gt; iterator = condetion.iterator();</div><div class=\"line\">\t\t\tPredicate preP = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">while</span>(iterator.hasNext())&#123;</div><div class=\"line\">\t\t\t\tJSONObject jsonObject = iterator.next();</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//注意：这里用的root.join 因为我们要用qfjbxx对象里的字段作为条件就必须这样做join方法有很多重载，使用的时候可以多根据自己业务决断</span></div><div class=\"line\">\t\t\t\tPredicate p1 = cb.equal(root.join(<span class=\"string\">\"qfjbxx\"</span>).get(<span class=\"string\">\"id\"</span>).as(String.class),jsonObject.get(<span class=\"string\">\"fzId\"</span>).toString());</div><div class=\"line\">\t\t\t\tPredicate p2 = cb.equal(root.get(<span class=\"string\">\"fzcc\"</span>).as(String.class),jsonObject.get(<span class=\"string\">\"ccId\"</span>).toString());</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(preP!=<span class=\"keyword\">null</span>)&#123;</div><div class=\"line\">\t\t\t\t\tpreP = cb.or(preP,cb.and(p1,p2));</div><div class=\"line\">\t\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\t\tpreP = cb.and(p1,p2);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tJSONObject jsonSearch=(JSONObject) search.get(<span class=\"number\">0</span>);</div><div class=\"line\">\t\t\tPredicate p3=<span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span>!=jsonSearch.get(<span class=\"string\">\"xm\"</span>)&amp;&amp;jsonSearch.get(<span class=\"string\">\"xm\"</span>).toString().length()&gt;<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t   p3=cb.like(root.join(<span class=\"string\">\"criminalInfo\"</span>).get(<span class=\"string\">\"xm\"</span>).as(String.class),<span class=\"string\">\"%\"</span>+jsonSearch.get(<span class=\"string\">\"xm\"</span>).toString()+<span class=\"string\">\"%\"</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tPredicate p4=<span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span>!=jsonSearch.get(<span class=\"string\">\"fzmc\"</span>)&amp;&amp;jsonSearch.get(<span class=\"string\">\"fzmc\"</span>).toString().length()&gt;<span class=\"number\">0</span>)&#123;</div><div class=\"line\">\t\t\t\tp4=cb.like(root.join(<span class=\"string\">\"qfjbxx\"</span>).get(<span class=\"string\">\"fzmc\"</span>).as(String.class),<span class=\"string\">\"%\"</span>+jsonSearch.get(<span class=\"string\">\"fzmc\"</span>).toString()+<span class=\"string\">\"%\"</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tPredicate preA;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span>!=p3&amp;&amp;<span class=\"keyword\">null</span>!=p4)&#123;</div><div class=\"line\">\t\t\t\tPredicate  preS =cb.and(p3,p4);</div><div class=\"line\">\t\t\t\tpreA =cb.and(preP,preS);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"keyword\">null</span>==p3&amp;&amp;<span class=\"keyword\">null</span>!=p4)&#123;</div><div class=\"line\">\t\t\t\tpreA=cb.and(preP,p4);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"keyword\">null</span>!=p3&amp;&amp;<span class=\"keyword\">null</span>==p4)&#123;</div><div class=\"line\">\t\t\t\tpreA=cb.and(preP,p3);</div><div class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</div><div class=\"line\">\t\t\t\tpreA=preP;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tpredicate.add(preA);</div><div class=\"line\">\t\t\tPredicate[] pre = <span class=\"keyword\">new</span> Predicate[predicate.size()];</div><div class=\"line\">\t\t\tquery.where(predicate.toArray(pre));</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> query.getRestriction();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> List&lt;SubAcctTrxJnlPo&gt; <span class=\"title\">getRechargeList</span><span class=\"params\">(<span class=\"keyword\">final</span> String trxDate, <span class=\"keyword\">final</span> String serviceCenterId)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> subAcctTrxJnlRepository.findAll(<span class=\"keyword\">new</span> Specification&lt;SubAcctTrxJnlPo&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;SubAcctTrxJnlPo&gt; root, CriteriaQuery&lt;?&gt; query,</div><div class=\"line\">\t\t\t\tCriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t\texpressions</div><div class=\"line\">\t\t\t\t\t.add(cb.exists(getSubQuery(query, cb, root.&lt;String&gt; get(<span class=\"string\">\"acctNo\"</span>), serviceCenterId)));</div><div class=\"line\">\t\t\texpressions.add(cb.equal(root.&lt;String&gt; get(<span class=\"string\">\"trxDate\"</span>), trxDate));</div><div class=\"line\">\t\t\texpressions.add(cb.equal(root.&lt;String&gt; get(<span class=\"string\">\"useType\"</span>), EUseType.RECHARGE));</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, CriteriaBuilder cb,</div><div class=\"line\">\t\t\t\tPath&lt;String&gt; acctNo, String serviceCenterId)</span> </span>&#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;AcctPo&gt; rAcct = subQuery.from(AcctPo.class);</div><div class=\"line\">\t\t\tRoot&lt;InvestorInfoPo&gt; rInvestor = subQuery.from(InvestorInfoPo.class);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(rAcct.&lt;String&gt; get(<span class=\"string\">\"acctNo\"</span>))</div><div class=\"line\">\t\t\t\t\t.where(cb.and(cb.equal(rAcct.&lt;String&gt; get(<span class=\"string\">\"acctNo\"</span>), acctNo),</div><div class=\"line\">\t\t\t\t\t\t\tcb.equal(rAcct.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>), rInvestor.&lt;String&gt; get(<span class=\"string\">\"userId\"</span>)),</div><div class=\"line\">\t\t\t\t\t\t\tcb.equal(rInvestor.&lt;String&gt; get(<span class=\"string\">\"serviceCenterId\"</span>), serviceCenterId)));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@Transactional</span>(readOnly = <span class=\"keyword\">true</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;AcctDto&gt; <span class=\"title\">getAcctInfoList</span><span class=\"params\">(<span class=\"keyword\">final</span> List&lt;String&gt; userIdList, </div><div class=\"line\">\t\t<span class=\"keyword\">final</span> List&lt;String&gt; groupIds, <span class=\"keyword\">final</span> List&lt;EBizRole&gt; bizRoles)</span></span>&#123;</div><div class=\"line\">\tSpecification&lt;AcctPo&gt; spec = <span class=\"keyword\">new</span> Specification&lt;AcctPo&gt;() &#123;</div><div class=\"line\">\t\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> Predicate <span class=\"title\">toPredicate</span><span class=\"params\">(Root&lt;AcctPo&gt; root, CriteriaQuery&lt;?&gt; query,\tCriteriaBuilder cb)</span> </span>&#123;</div><div class=\"line\">\t\t\tPredicate predicate = cb.conjunction();</div><div class=\"line\">\t\t\tList&lt;Expression&lt;Boolean&gt;&gt; expressions = predicate.getExpressions();</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(userIdList!=<span class=\"keyword\">null</span>&amp;&amp;!userIdList.isEmpty())&#123;</div><div class=\"line\">\t\t\t\texpressions.add(root.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>).in(userIdList));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(bizRoles!=<span class=\"keyword\">null</span> &amp;&amp; !bizRoles.isEmpty())&#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.exists(getRolesSubQuery(query, cb, </div><div class=\"line\">\t\t\t\t\t\troot.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>), getRoleIds(bizRoles))));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span>(groupIds!=<span class=\"keyword\">null</span> &amp;&amp; !groupIds.isEmpty())&#123;</div><div class=\"line\">\t\t\t\texpressions.add(cb.exists(getGroupsSubQuery(query, cb, </div><div class=\"line\">\t\t\t\t\t\troot.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>), getGroupIds(groupIds))));</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> predicate;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getRolesSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </div><div class=\"line\">\t\t\t\tCriteriaBuilder cb, Path&lt;String&gt; userId, Set&lt;String&gt; roleIds)</span> </span>&#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;UserRolePo&gt; param = subQuery.from(UserRolePo.class);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(param.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">\t\t\t\t\tcb.and(cb.equal(param.get(<span class=\"string\">\"userId\"</span>), userId),</div><div class=\"line\">\t\t\t\t\t\t   param.&lt;String&gt;get(<span class=\"string\">\"roleId\"</span>).in(roleIds)</div><div class=\"line\">\t\t\t));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Subquery&lt;String&gt; <span class=\"title\">getGroupsSubQuery</span><span class=\"params\">(CriteriaQuery&lt;?&gt; query, </div><div class=\"line\">\t\t\t\tCriteriaBuilder cb, Path&lt;String&gt; userId, Set&lt;String&gt; groupIds)</span> </span>&#123;</div><div class=\"line\">\t\t\tSubquery&lt;String&gt; subQuery = query.subquery(String.class);</div><div class=\"line\">\t\t\tRoot&lt;GroupUserPo&gt; param = subQuery.from(GroupUserPo.class);</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> subQuery.select(param.&lt;String&gt;get(<span class=\"string\">\"userId\"</span>)).where(</div><div class=\"line\">\t\t\t\t\tcb.and(cb.equal(param.get(<span class=\"string\">\"userId\"</span>), userId),</div><div class=\"line\">\t\t\t\t\t\t   param.&lt;String&gt;get(<span class=\"string\">\"groupId\"</span>).in(groupIds)</div><div class=\"line\">\t\t\t));</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Set&lt;String&gt; <span class=\"title\">getRoleIds</span><span class=\"params\">(List&lt;EBizRole&gt; bizRoles)</span></span>&#123;</div><div class=\"line\">\t\t\tSet&lt;String&gt; sets = <span class=\"keyword\">new</span> HashSet&lt;String&gt;();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(EBizRole role:bizRoles)&#123;</div><div class=\"line\">\t\t\t\tsets.add(role.getRoleId());</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> sets;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">private</span> Set&lt;String&gt; <span class=\"title\">getGroupIds</span><span class=\"params\">(List&lt;String&gt; groupIds)</span></span>&#123;</div><div class=\"line\">\t\t\tSet&lt;String&gt; sets = <span class=\"keyword\">new</span> HashSet&lt;String&gt;();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span>(String gid:groupIds)&#123;</div><div class=\"line\">\t\t\t\tsets.add(gid);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> sets;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;;</div><div class=\"line\">\tList&lt;AcctPo&gt; list = acctRepo.findAll(spec);</div><div class=\"line\">\t<span class=\"keyword\">return</span> packItems(list);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"spring事务的隔离级别和传播属性","date":"2017-03-27T08:08:25.000Z","_content":"## 前言\n\n对于事务的理解,在日常的开发过程中,相对来说还是比较重要的.不同的业务功能,所需要的事务传播属性以及隔离级别都是不一样的,当然,大多数情况下,我们使用默认的配置就行了,但是,某些特殊情境,我们就需要特殊配置.这里我就大概来说一说事务.\n<!-- more --> \n- 事务的传播属性:\n```java\n\n/**\n\n* Support a current transaction, create a new one if none exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n* <p>This is the default setting of a transaction annotation.\n\n*/\n\n// 支持当前事务,如果没有,创建一个新事务.(默认属性,也是最常用的)\nREQUIRED(TransactionDefinition.PROPAGATION_REQUIRED),\n\n\n/**\n\n* Support a current transaction, execute non-transactionally if none exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n* <p>Note: For transaction managers with transaction synchronization,\n\n* PROPAGATION_SUPPORTS is slightly different from no transaction at all,\n\n* as it defines a transaction scope that synchronization will apply for.\n\n* As a consequence, the same resources (JDBC Connection, Hibernate Session, etc)\n\n* will be shared for the entire specified scope. Note that this depends on\n\n* the actual synchronization configuration of the transaction manager.\n\n* @see  org.springframework.transaction.support.AbstractPlatformTransactionManager#setTransactionSynchronization\n\n*/\n\n//支持当前事务,如果没有事务,就以非事务状态执行\nSUPPORTS(TransactionDefinition.PROPAGATION_SUPPORTS),\n\n\n/**\n\n* Support a current transaction, throw an exception if none exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n*/\n\n//支持当前事务,如果没有事务,抛出异常\nMANDATORY(TransactionDefinition.PROPAGATION_MANDATORY),\n\n\n/**\n\n* Create a new transaction, suspend the current transaction if one exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n* <p>Note: Actual transaction suspension will not work on out-of-the-box\n\n* on all transaction managers. This in particular applies to JtaTransactionManager,\n\n* which requires the {@code  javax.transaction.TransactionManager} to be\n\n* made available it to it (which is server-specific in standard J2EE).\n\n* @see  org.springframework.transaction.jta.JtaTransactionManager#setTransactionManager\n\n*/\n\n//新建事务,若当前存在事务,则挂起当前事务\nREQUIRES_NEW(TransactionDefinition.PROPAGATION_REQUIRES_NEW),\n\n\n/**\n\n* Execute non-transactionally, suspend the current transaction if one exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n* <p>Note: Actual transaction suspension will not work on out-of-the-box\n\n* on all transaction managers. This in particular applies to JtaTransactionManager,\n\n* which requires the {@code  javax.transaction.TransactionManager} to be\n\n* made available it to it (which is server-specific in standard J2EE).\n\n* @see  org.springframework.transaction.jta.JtaTransactionManager#setTransactionManager\n\n*/\n\n//以非事务方式执行.若当前存在事务,则挂起当前事务\nNOT_SUPPORTED(TransactionDefinition.PROPAGATION_NOT_SUPPORTED),\n\n\n\n/**\n\n* Execute non-transactionally, throw an exception if a transaction exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n*/\n\n//以非事务方式执行.若当前存在事务,则跑出异常\nNEVER(TransactionDefinition.PROPAGATION_NEVER),\n\n/**\n\n* Execute within a nested transaction if a current transaction exists,\n\n* behave like PROPAGATION_REQUIRED else. There is no analogous feature in EJB.\n\n* <p>Note: Actual creation of a nested transaction will only work on specific\n\n* transaction managers. Out of the box, this only applies to the JDBC\n\n* DataSourceTransactionManager when working on a JDBC 3.0 driver.\n\n* Some JTA providers might support nested transactions as well.\n\n* @see org.springframework.jdbc.datasource.DataSourceTransactionManager\n\n*/\n\n//执行嵌套事务,如果当前存在事务\nNESTED(TransactionDefinition.PROPAGATION_NESTED);\n```\n- 事务的隔离级别:\n\n```java\n/**\n\n* Use the default isolation level of the underlying datastore.\n\n* All other levels correspond to the JDBC isolation levels.\n\n* @see java.sql.Connection\n\n*/\n\n//使用数据库默认的隔离级别\nDEFAULT(TransactionDefinition.ISOLATION_DEFAULT),\n\n\n/**\n\n* A constant indicating that dirty reads, non-repeatable reads and phantom reads\n\n* can occur. This level allows a row changed by one transaction to be read by\n\n* another transaction before any changes in that row have been committed\n\n* (a \"dirty read\"). If any of the changes are rolled back, the second\n\n* transaction will have retrieved an invalid row.\n\n* @see java.sql.Connection#TRANSACTION_READ_UNCOMMITTED\n\n*/\n\n//读取未提交数据(级别最低,允许事务读取另一个事务未提交的数据)\nREAD_UNCOMMITTED(TransactionDefinition.ISOLATION_READ_UNCOMMITTED),\n\n\n/**\n\n* A constant indicating that dirty reads are prevented; non-repeatable reads\n\n* and phantom reads can occur. This level only prohibits a transaction\n\n* from reading a row with uncommitted changes in it.\n\n* @see java.sql.Connection#TRANSACTION_READ_COMMITTED\n\n*/\n\n//读取提交数据(允许事务读取另一个事务提交的数据)\nREAD_COMMITTED(TransactionDefinition.ISOLATION_READ_COMMITTED),\n\n\n\n/**\n\n* A constant indicating that dirty reads and non-repeatable reads are\n\n* prevented; phantom reads can occur. This level prohibits a transaction\n\n* from reading a row with uncommitted changes in it, and it also prohibits\n\n* the situation where one transaction reads a row, a second transaction\n\n* alters the row, and the first transaction rereads the row, getting\n\n* different values the second time (a \"non-repeatable read\").\n\n* @see java.sql.Connection#TRANSACTION_REPEATABLE_READ\n\n*/\n\n\n//可重复读\nREPEATABLE_READ(TransactionDefinition.ISOLATION_REPEATABLE_READ),\n\n\n/**\n\n* A constant indicating that dirty reads, non-repeatable reads and phantom\n\n* reads are prevented. This level includes the prohibitions in\n\n* {@code ISOLATION_REPEATABLE_READ} and further prohibits the situation\n\n* where one transaction reads all rows that satisfy a {@code WHERE}\n\n* condition, a second transaction inserts a row that satisfies that\n\n* {@code WHERE} condition, and the first transaction rereads for the\n\n* same condition, retrieving the additional \"phantom\" row in the second read.\n\n* @see java.sql.Connection#TRANSACTION_SERIALIZABLE\n\n*/\n\n\n//顺序执行读取(级别最高,最可靠)\nSERIALIZABLE(TransactionDefinition.ISOLATION_SERIALIZABLE);\n```\n下面整理一张表.\n\n|       |丢失更新|\t脏读 |非重复读| 覆盖更新| 幻读  |\n| :--------:  | :-----:  | :----:  | :----:  | :----:  | :----: |\n|未提交读|   N|\tY|\tY|\tY|\tY|\n|已提交读|   N|\tN|\tY|  Y|\tY|\n|可重复读|   N|\tN|\tN|\tN|\tY|\n|串行化(顺序读)|\tN|\tN|\tN|\tN|\tN|\n\n\n- 名词解释\n\n\n**未提交读**:允许读取未提交数据,如果一个事务已经开始写数据，则另外一个事务则不允许同时进行写操作，但允许其他事务读此行数据。\n\n**已提交读**:当一个事务开始了,则只有等这个事务提交结束了,才允许其他事务读,\n\n**可重复读**: 读取数据的事务将会禁止写事务（但允许读事务），写事务则禁止任何其他事务\n\n**串行化读**:按照顺序,一个事务一个事务的执行.\n\n\n\n**丢失更新**:撤销一个事务时，把其他事务已提交的更新数据覆盖（A和B事务并发执行，A事务执行更新后，提交；B事务在A事务更新后，B事务结束前也做了对该行数据的更新操作，然后回滚，则两次更新操作都丢失了）。\n\n**脏读**:一个事务读到另一个事务未提交的更新数据（事务T1将某一值修改，然后事务T2读取该值，此后T1因为某种原因撤销对该值的修改，这就导致了T2所读取到的数据是无效的）。\n\n**不可重复读**:一个事务读到另一个事务已提交的更新数据（一个事务范围内两个相同的查询却返回了不同数据。这是由于查询时系统中其他事务修改的提交而引起的。比如事务T1读取某一数据，事务T2读取并修改了该数据，T1为了对读取值进行检验而再次读取该数据，便得到了不同的结果）。\n\n**覆盖更新**:这是不可重复读中的特例，一个事务覆盖另一个事务已提交的更新数据（即A事务更新数据，然后B事务更新该数据，A事务查询发现自己更新的数据变了）。\n\n**虚读（幻读）**:一个事务读到另一个事务已提交的新插入的数据（A和B事务并发执行，A事务查询数据，B事务插入或者删除数据，A事务再次查询发现结果集中有以前没有的数据或者以前有的数据消失了）。\n\n\n\noracle 支持**Read Committed**和 **Serializable**和**oracle特有的Read-only** 这三种事务隔离级别,**默认Read Committed**\n\nmysql支持**Read Uncommitted, Read Committed, Repeatable Read,Serializable, 默认Repeatable Read**","source":"_posts/spring事务的隔离级别和传播属性.md","raw":"---\ntitle: spring事务的隔离级别和传播属性\ndate: 2017-03-27 16:08:25\ntags: [java,spring,事务]\ncategories: 技术\n---\n## 前言\n\n对于事务的理解,在日常的开发过程中,相对来说还是比较重要的.不同的业务功能,所需要的事务传播属性以及隔离级别都是不一样的,当然,大多数情况下,我们使用默认的配置就行了,但是,某些特殊情境,我们就需要特殊配置.这里我就大概来说一说事务.\n<!-- more --> \n- 事务的传播属性:\n```java\n\n/**\n\n* Support a current transaction, create a new one if none exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n* <p>This is the default setting of a transaction annotation.\n\n*/\n\n// 支持当前事务,如果没有,创建一个新事务.(默认属性,也是最常用的)\nREQUIRED(TransactionDefinition.PROPAGATION_REQUIRED),\n\n\n/**\n\n* Support a current transaction, execute non-transactionally if none exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n* <p>Note: For transaction managers with transaction synchronization,\n\n* PROPAGATION_SUPPORTS is slightly different from no transaction at all,\n\n* as it defines a transaction scope that synchronization will apply for.\n\n* As a consequence, the same resources (JDBC Connection, Hibernate Session, etc)\n\n* will be shared for the entire specified scope. Note that this depends on\n\n* the actual synchronization configuration of the transaction manager.\n\n* @see  org.springframework.transaction.support.AbstractPlatformTransactionManager#setTransactionSynchronization\n\n*/\n\n//支持当前事务,如果没有事务,就以非事务状态执行\nSUPPORTS(TransactionDefinition.PROPAGATION_SUPPORTS),\n\n\n/**\n\n* Support a current transaction, throw an exception if none exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n*/\n\n//支持当前事务,如果没有事务,抛出异常\nMANDATORY(TransactionDefinition.PROPAGATION_MANDATORY),\n\n\n/**\n\n* Create a new transaction, suspend the current transaction if one exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n* <p>Note: Actual transaction suspension will not work on out-of-the-box\n\n* on all transaction managers. This in particular applies to JtaTransactionManager,\n\n* which requires the {@code  javax.transaction.TransactionManager} to be\n\n* made available it to it (which is server-specific in standard J2EE).\n\n* @see  org.springframework.transaction.jta.JtaTransactionManager#setTransactionManager\n\n*/\n\n//新建事务,若当前存在事务,则挂起当前事务\nREQUIRES_NEW(TransactionDefinition.PROPAGATION_REQUIRES_NEW),\n\n\n/**\n\n* Execute non-transactionally, suspend the current transaction if one exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n* <p>Note: Actual transaction suspension will not work on out-of-the-box\n\n* on all transaction managers. This in particular applies to JtaTransactionManager,\n\n* which requires the {@code  javax.transaction.TransactionManager} to be\n\n* made available it to it (which is server-specific in standard J2EE).\n\n* @see  org.springframework.transaction.jta.JtaTransactionManager#setTransactionManager\n\n*/\n\n//以非事务方式执行.若当前存在事务,则挂起当前事务\nNOT_SUPPORTED(TransactionDefinition.PROPAGATION_NOT_SUPPORTED),\n\n\n\n/**\n\n* Execute non-transactionally, throw an exception if a transaction exists.\n\n* Analogous to EJB transaction attribute of the same name.\n\n*/\n\n//以非事务方式执行.若当前存在事务,则跑出异常\nNEVER(TransactionDefinition.PROPAGATION_NEVER),\n\n/**\n\n* Execute within a nested transaction if a current transaction exists,\n\n* behave like PROPAGATION_REQUIRED else. There is no analogous feature in EJB.\n\n* <p>Note: Actual creation of a nested transaction will only work on specific\n\n* transaction managers. Out of the box, this only applies to the JDBC\n\n* DataSourceTransactionManager when working on a JDBC 3.0 driver.\n\n* Some JTA providers might support nested transactions as well.\n\n* @see org.springframework.jdbc.datasource.DataSourceTransactionManager\n\n*/\n\n//执行嵌套事务,如果当前存在事务\nNESTED(TransactionDefinition.PROPAGATION_NESTED);\n```\n- 事务的隔离级别:\n\n```java\n/**\n\n* Use the default isolation level of the underlying datastore.\n\n* All other levels correspond to the JDBC isolation levels.\n\n* @see java.sql.Connection\n\n*/\n\n//使用数据库默认的隔离级别\nDEFAULT(TransactionDefinition.ISOLATION_DEFAULT),\n\n\n/**\n\n* A constant indicating that dirty reads, non-repeatable reads and phantom reads\n\n* can occur. This level allows a row changed by one transaction to be read by\n\n* another transaction before any changes in that row have been committed\n\n* (a \"dirty read\"). If any of the changes are rolled back, the second\n\n* transaction will have retrieved an invalid row.\n\n* @see java.sql.Connection#TRANSACTION_READ_UNCOMMITTED\n\n*/\n\n//读取未提交数据(级别最低,允许事务读取另一个事务未提交的数据)\nREAD_UNCOMMITTED(TransactionDefinition.ISOLATION_READ_UNCOMMITTED),\n\n\n/**\n\n* A constant indicating that dirty reads are prevented; non-repeatable reads\n\n* and phantom reads can occur. This level only prohibits a transaction\n\n* from reading a row with uncommitted changes in it.\n\n* @see java.sql.Connection#TRANSACTION_READ_COMMITTED\n\n*/\n\n//读取提交数据(允许事务读取另一个事务提交的数据)\nREAD_COMMITTED(TransactionDefinition.ISOLATION_READ_COMMITTED),\n\n\n\n/**\n\n* A constant indicating that dirty reads and non-repeatable reads are\n\n* prevented; phantom reads can occur. This level prohibits a transaction\n\n* from reading a row with uncommitted changes in it, and it also prohibits\n\n* the situation where one transaction reads a row, a second transaction\n\n* alters the row, and the first transaction rereads the row, getting\n\n* different values the second time (a \"non-repeatable read\").\n\n* @see java.sql.Connection#TRANSACTION_REPEATABLE_READ\n\n*/\n\n\n//可重复读\nREPEATABLE_READ(TransactionDefinition.ISOLATION_REPEATABLE_READ),\n\n\n/**\n\n* A constant indicating that dirty reads, non-repeatable reads and phantom\n\n* reads are prevented. This level includes the prohibitions in\n\n* {@code ISOLATION_REPEATABLE_READ} and further prohibits the situation\n\n* where one transaction reads all rows that satisfy a {@code WHERE}\n\n* condition, a second transaction inserts a row that satisfies that\n\n* {@code WHERE} condition, and the first transaction rereads for the\n\n* same condition, retrieving the additional \"phantom\" row in the second read.\n\n* @see java.sql.Connection#TRANSACTION_SERIALIZABLE\n\n*/\n\n\n//顺序执行读取(级别最高,最可靠)\nSERIALIZABLE(TransactionDefinition.ISOLATION_SERIALIZABLE);\n```\n下面整理一张表.\n\n|       |丢失更新|\t脏读 |非重复读| 覆盖更新| 幻读  |\n| :--------:  | :-----:  | :----:  | :----:  | :----:  | :----: |\n|未提交读|   N|\tY|\tY|\tY|\tY|\n|已提交读|   N|\tN|\tY|  Y|\tY|\n|可重复读|   N|\tN|\tN|\tN|\tY|\n|串行化(顺序读)|\tN|\tN|\tN|\tN|\tN|\n\n\n- 名词解释\n\n\n**未提交读**:允许读取未提交数据,如果一个事务已经开始写数据，则另外一个事务则不允许同时进行写操作，但允许其他事务读此行数据。\n\n**已提交读**:当一个事务开始了,则只有等这个事务提交结束了,才允许其他事务读,\n\n**可重复读**: 读取数据的事务将会禁止写事务（但允许读事务），写事务则禁止任何其他事务\n\n**串行化读**:按照顺序,一个事务一个事务的执行.\n\n\n\n**丢失更新**:撤销一个事务时，把其他事务已提交的更新数据覆盖（A和B事务并发执行，A事务执行更新后，提交；B事务在A事务更新后，B事务结束前也做了对该行数据的更新操作，然后回滚，则两次更新操作都丢失了）。\n\n**脏读**:一个事务读到另一个事务未提交的更新数据（事务T1将某一值修改，然后事务T2读取该值，此后T1因为某种原因撤销对该值的修改，这就导致了T2所读取到的数据是无效的）。\n\n**不可重复读**:一个事务读到另一个事务已提交的更新数据（一个事务范围内两个相同的查询却返回了不同数据。这是由于查询时系统中其他事务修改的提交而引起的。比如事务T1读取某一数据，事务T2读取并修改了该数据，T1为了对读取值进行检验而再次读取该数据，便得到了不同的结果）。\n\n**覆盖更新**:这是不可重复读中的特例，一个事务覆盖另一个事务已提交的更新数据（即A事务更新数据，然后B事务更新该数据，A事务查询发现自己更新的数据变了）。\n\n**虚读（幻读）**:一个事务读到另一个事务已提交的新插入的数据（A和B事务并发执行，A事务查询数据，B事务插入或者删除数据，A事务再次查询发现结果集中有以前没有的数据或者以前有的数据消失了）。\n\n\n\noracle 支持**Read Committed**和 **Serializable**和**oracle特有的Read-only** 这三种事务隔离级别,**默认Read Committed**\n\nmysql支持**Read Uncommitted, Read Committed, Repeatable Read,Serializable, 默认Repeatable Read**","slug":"spring事务的隔离级别和传播属性","published":1,"updated":"2017-04-11T09:30:39.218Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc594z000tcoqhfboib5k5","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>对于事务的理解,在日常的开发过程中,相对来说还是比较重要的.不同的业务功能,所需要的事务传播属性以及隔离级别都是不一样的,当然,大多数情况下,我们使用默认的配置就行了,但是,某些特殊情境,我们就需要特殊配置.这里我就大概来说一说事务.<br><a id=\"more\"></a> </p>\n<ul>\n<li><p>事务的传播属性:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* Support a current transaction, create a new one if none exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">* &lt;p&gt;This is the default setting of a transaction annotation.</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 支持当前事务,如果没有,创建一个新事务.(默认属性,也是最常用的)</span></div><div class=\"line\">REQUIRED(TransactionDefinition.PROPAGATION_REQUIRED),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* Support a current transaction, execute non-transactionally if none exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">* &lt;p&gt;Note: For transaction managers with transaction synchronization,</div><div class=\"line\"></div><div class=\"line\">* PROPAGATION_SUPPORTS is slightly different from no transaction at all,</div><div class=\"line\"></div><div class=\"line\">* as it defines a transaction scope that synchronization will apply for.</div><div class=\"line\"></div><div class=\"line\">* As a consequence, the same resources (JDBC Connection, Hibernate Session, etc)</div><div class=\"line\"></div><div class=\"line\">* will be shared for the entire specified scope. Note that this depends on</div><div class=\"line\"></div><div class=\"line\">* the actual synchronization configuration of the transaction manager.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span>  org.springframework.transaction.support.AbstractPlatformTransactionManager#setTransactionSynchronization</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//支持当前事务,如果没有事务,就以非事务状态执行</span></div><div class=\"line\">SUPPORTS(TransactionDefinition.PROPAGATION_SUPPORTS),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* Support a current transaction, throw an exception if none exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//支持当前事务,如果没有事务,抛出异常</span></div><div class=\"line\">MANDATORY(TransactionDefinition.PROPAGATION_MANDATORY),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* Create a new transaction, suspend the current transaction if one exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">* &lt;p&gt;Note: Actual transaction suspension will not work on out-of-the-box</div><div class=\"line\"></div><div class=\"line\">* on all transaction managers. This in particular applies to JtaTransactionManager,</div><div class=\"line\"></div><div class=\"line\">* which requires the &#123;<span class=\"doctag\">@code</span>  javax.transaction.TransactionManager&#125; to be</div><div class=\"line\"></div><div class=\"line\">* made available it to it (which is server-specific in standard J2EE).</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span>  org.springframework.transaction.jta.JtaTransactionManager#setTransactionManager</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//新建事务,若当前存在事务,则挂起当前事务</span></div><div class=\"line\">REQUIRES_NEW(TransactionDefinition.PROPAGATION_REQUIRES_NEW),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* Execute non-transactionally, suspend the current transaction if one exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">* &lt;p&gt;Note: Actual transaction suspension will not work on out-of-the-box</div><div class=\"line\"></div><div class=\"line\">* on all transaction managers. This in particular applies to JtaTransactionManager,</div><div class=\"line\"></div><div class=\"line\">* which requires the &#123;<span class=\"doctag\">@code</span>  javax.transaction.TransactionManager&#125; to be</div><div class=\"line\"></div><div class=\"line\">* made available it to it (which is server-specific in standard J2EE).</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span>  org.springframework.transaction.jta.JtaTransactionManager#setTransactionManager</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//以非事务方式执行.若当前存在事务,则挂起当前事务</span></div><div class=\"line\">NOT_SUPPORTED(TransactionDefinition.PROPAGATION_NOT_SUPPORTED),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* Execute non-transactionally, throw an exception if a transaction exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//以非事务方式执行.若当前存在事务,则跑出异常</span></div><div class=\"line\">NEVER(TransactionDefinition.PROPAGATION_NEVER),</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* Execute within a nested transaction if a current transaction exists,</div><div class=\"line\"></div><div class=\"line\">* behave like PROPAGATION_REQUIRED else. There is no analogous feature in EJB.</div><div class=\"line\"></div><div class=\"line\">* &lt;p&gt;Note: Actual creation of a nested transaction will only work on specific</div><div class=\"line\"></div><div class=\"line\">* transaction managers. Out of the box, this only applies to the JDBC</div><div class=\"line\"></div><div class=\"line\">* DataSourceTransactionManager when working on a JDBC 3.0 driver.</div><div class=\"line\"></div><div class=\"line\">* Some JTA providers might support nested transactions as well.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> org.springframework.jdbc.datasource.DataSourceTransactionManager</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//执行嵌套事务,如果当前存在事务</span></div><div class=\"line\">NESTED(TransactionDefinition.PROPAGATION_NESTED);</div></pre></td></tr></table></figure>\n</li>\n<li><p>事务的隔离级别:</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* Use the default isolation level of the underlying datastore.</div><div class=\"line\"></div><div class=\"line\">* All other levels correspond to the JDBC isolation levels.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> java.sql.Connection</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//使用数据库默认的隔离级别</span></div><div class=\"line\">DEFAULT(TransactionDefinition.ISOLATION_DEFAULT),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* A constant indicating that dirty reads, non-repeatable reads and phantom reads</div><div class=\"line\"></div><div class=\"line\">* can occur. This level allows a row changed by one transaction to be read by</div><div class=\"line\"></div><div class=\"line\">* another transaction before any changes in that row have been committed</div><div class=\"line\"></div><div class=\"line\">* (a \"dirty read\"). If any of the changes are rolled back, the second</div><div class=\"line\"></div><div class=\"line\">* transaction will have retrieved an invalid row.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> java.sql.Connection#TRANSACTION_READ_UNCOMMITTED</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取未提交数据(级别最低,允许事务读取另一个事务未提交的数据)</span></div><div class=\"line\">READ_UNCOMMITTED(TransactionDefinition.ISOLATION_READ_UNCOMMITTED),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* A constant indicating that dirty reads are prevented; non-repeatable reads</div><div class=\"line\"></div><div class=\"line\">* and phantom reads can occur. This level only prohibits a transaction</div><div class=\"line\"></div><div class=\"line\">* from reading a row with uncommitted changes in it.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> java.sql.Connection#TRANSACTION_READ_COMMITTED</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取提交数据(允许事务读取另一个事务提交的数据)</span></div><div class=\"line\">READ_COMMITTED(TransactionDefinition.ISOLATION_READ_COMMITTED),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* A constant indicating that dirty reads and non-repeatable reads are</div><div class=\"line\"></div><div class=\"line\">* prevented; phantom reads can occur. This level prohibits a transaction</div><div class=\"line\"></div><div class=\"line\">* from reading a row with uncommitted changes in it, and it also prohibits</div><div class=\"line\"></div><div class=\"line\">* the situation where one transaction reads a row, a second transaction</div><div class=\"line\"></div><div class=\"line\">* alters the row, and the first transaction rereads the row, getting</div><div class=\"line\"></div><div class=\"line\">* different values the second time (a \"non-repeatable read\").</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> java.sql.Connection#TRANSACTION_REPEATABLE_READ</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//可重复读</span></div><div class=\"line\">REPEATABLE_READ(TransactionDefinition.ISOLATION_REPEATABLE_READ),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">* A constant indicating that dirty reads, non-repeatable reads and phantom</div><div class=\"line\"></div><div class=\"line\">* reads are prevented. This level includes the prohibitions in</div><div class=\"line\"></div><div class=\"line\">* &#123;<span class=\"doctag\">@code</span> ISOLATION_REPEATABLE_READ&#125; and further prohibits the situation</div><div class=\"line\"></div><div class=\"line\">* where one transaction reads all rows that satisfy a &#123;<span class=\"doctag\">@code</span> WHERE&#125;</div><div class=\"line\"></div><div class=\"line\">* condition, a second transaction inserts a row that satisfies that</div><div class=\"line\"></div><div class=\"line\">* &#123;<span class=\"doctag\">@code</span> WHERE&#125; condition, and the first transaction rereads for the</div><div class=\"line\"></div><div class=\"line\">* same condition, retrieving the additional \"phantom\" row in the second read.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> java.sql.Connection#TRANSACTION_SERIALIZABLE</div><div class=\"line\"></div><div class=\"line\">*/</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//顺序执行读取(级别最高,最可靠)</span></div><div class=\"line\">SERIALIZABLE(TransactionDefinition.ISOLATION_SERIALIZABLE);</div></pre></td></tr></table></figure>\n<p>下面整理一张表.</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">丢失更新</th>\n<th style=\"text-align:center\">脏读</th>\n<th style=\"text-align:center\">非重复读</th>\n<th style=\"text-align:center\">覆盖更新</th>\n<th style=\"text-align:center\">幻读</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">未提交读</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">已提交读</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">可重复读</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">串行化(顺序读)</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>名词解释</li>\n</ul>\n<p><strong>未提交读</strong>:允许读取未提交数据,如果一个事务已经开始写数据，则另外一个事务则不允许同时进行写操作，但允许其他事务读此行数据。</p>\n<p><strong>已提交读</strong>:当一个事务开始了,则只有等这个事务提交结束了,才允许其他事务读,</p>\n<p><strong>可重复读</strong>: 读取数据的事务将会禁止写事务（但允许读事务），写事务则禁止任何其他事务</p>\n<p><strong>串行化读</strong>:按照顺序,一个事务一个事务的执行.</p>\n<p><strong>丢失更新</strong>:撤销一个事务时，把其他事务已提交的更新数据覆盖（A和B事务并发执行，A事务执行更新后，提交；B事务在A事务更新后，B事务结束前也做了对该行数据的更新操作，然后回滚，则两次更新操作都丢失了）。</p>\n<p><strong>脏读</strong>:一个事务读到另一个事务未提交的更新数据（事务T1将某一值修改，然后事务T2读取该值，此后T1因为某种原因撤销对该值的修改，这就导致了T2所读取到的数据是无效的）。</p>\n<p><strong>不可重复读</strong>:一个事务读到另一个事务已提交的更新数据（一个事务范围内两个相同的查询却返回了不同数据。这是由于查询时系统中其他事务修改的提交而引起的。比如事务T1读取某一数据，事务T2读取并修改了该数据，T1为了对读取值进行检验而再次读取该数据，便得到了不同的结果）。</p>\n<p><strong>覆盖更新</strong>:这是不可重复读中的特例，一个事务覆盖另一个事务已提交的更新数据（即A事务更新数据，然后B事务更新该数据，A事务查询发现自己更新的数据变了）。</p>\n<p><strong>虚读（幻读）</strong>:一个事务读到另一个事务已提交的新插入的数据（A和B事务并发执行，A事务查询数据，B事务插入或者删除数据，A事务再次查询发现结果集中有以前没有的数据或者以前有的数据消失了）。</p>\n<p>oracle 支持<strong>Read Committed</strong>和 <strong>Serializable</strong>和<strong>oracle特有的Read-only</strong> 这三种事务隔离级别,<strong>默认Read Committed</strong></p>\n<p>mysql支持<strong>Read Uncommitted, Read Committed, Repeatable Read,Serializable, 默认Repeatable Read</strong></p>\n","excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>对于事务的理解,在日常的开发过程中,相对来说还是比较重要的.不同的业务功能,所需要的事务传播属性以及隔离级别都是不一样的,当然,大多数情况下,我们使用默认的配置就行了,但是,某些特殊情境,我们就需要特殊配置.这里我就大概来说一说事务.<br>","more":"</p>\n<ul>\n<li><p>事务的传播属性:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* Support a current transaction, create a new one if none exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">* &lt;p&gt;This is the default setting of a transaction annotation.</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 支持当前事务,如果没有,创建一个新事务.(默认属性,也是最常用的)</span></div><div class=\"line\">REQUIRED(TransactionDefinition.PROPAGATION_REQUIRED),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* Support a current transaction, execute non-transactionally if none exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">* &lt;p&gt;Note: For transaction managers with transaction synchronization,</div><div class=\"line\"></div><div class=\"line\">* PROPAGATION_SUPPORTS is slightly different from no transaction at all,</div><div class=\"line\"></div><div class=\"line\">* as it defines a transaction scope that synchronization will apply for.</div><div class=\"line\"></div><div class=\"line\">* As a consequence, the same resources (JDBC Connection, Hibernate Session, etc)</div><div class=\"line\"></div><div class=\"line\">* will be shared for the entire specified scope. Note that this depends on</div><div class=\"line\"></div><div class=\"line\">* the actual synchronization configuration of the transaction manager.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span>  org.springframework.transaction.support.AbstractPlatformTransactionManager#setTransactionSynchronization</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//支持当前事务,如果没有事务,就以非事务状态执行</span></div><div class=\"line\">SUPPORTS(TransactionDefinition.PROPAGATION_SUPPORTS),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* Support a current transaction, throw an exception if none exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//支持当前事务,如果没有事务,抛出异常</span></div><div class=\"line\">MANDATORY(TransactionDefinition.PROPAGATION_MANDATORY),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* Create a new transaction, suspend the current transaction if one exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">* &lt;p&gt;Note: Actual transaction suspension will not work on out-of-the-box</div><div class=\"line\"></div><div class=\"line\">* on all transaction managers. This in particular applies to JtaTransactionManager,</div><div class=\"line\"></div><div class=\"line\">* which requires the &#123;<span class=\"doctag\">@code</span>  javax.transaction.TransactionManager&#125; to be</div><div class=\"line\"></div><div class=\"line\">* made available it to it (which is server-specific in standard J2EE).</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span>  org.springframework.transaction.jta.JtaTransactionManager#setTransactionManager</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//新建事务,若当前存在事务,则挂起当前事务</span></div><div class=\"line\">REQUIRES_NEW(TransactionDefinition.PROPAGATION_REQUIRES_NEW),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* Execute non-transactionally, suspend the current transaction if one exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">* &lt;p&gt;Note: Actual transaction suspension will not work on out-of-the-box</div><div class=\"line\"></div><div class=\"line\">* on all transaction managers. This in particular applies to JtaTransactionManager,</div><div class=\"line\"></div><div class=\"line\">* which requires the &#123;<span class=\"doctag\">@code</span>  javax.transaction.TransactionManager&#125; to be</div><div class=\"line\"></div><div class=\"line\">* made available it to it (which is server-specific in standard J2EE).</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span>  org.springframework.transaction.jta.JtaTransactionManager#setTransactionManager</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//以非事务方式执行.若当前存在事务,则挂起当前事务</span></div><div class=\"line\">NOT_SUPPORTED(TransactionDefinition.PROPAGATION_NOT_SUPPORTED),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* Execute non-transactionally, throw an exception if a transaction exists.</div><div class=\"line\"></div><div class=\"line\">* Analogous to EJB transaction attribute of the same name.</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//以非事务方式执行.若当前存在事务,则跑出异常</span></div><div class=\"line\">NEVER(TransactionDefinition.PROPAGATION_NEVER),</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* Execute within a nested transaction if a current transaction exists,</div><div class=\"line\"></div><div class=\"line\">* behave like PROPAGATION_REQUIRED else. There is no analogous feature in EJB.</div><div class=\"line\"></div><div class=\"line\">* &lt;p&gt;Note: Actual creation of a nested transaction will only work on specific</div><div class=\"line\"></div><div class=\"line\">* transaction managers. Out of the box, this only applies to the JDBC</div><div class=\"line\"></div><div class=\"line\">* DataSourceTransactionManager when working on a JDBC 3.0 driver.</div><div class=\"line\"></div><div class=\"line\">* Some JTA providers might support nested transactions as well.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> org.springframework.jdbc.datasource.DataSourceTransactionManager</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//执行嵌套事务,如果当前存在事务</span></div><div class=\"line\">NESTED(TransactionDefinition.PROPAGATION_NESTED);</div></pre></td></tr></table></figure>\n</li>\n<li><p>事务的隔离级别:</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* Use the default isolation level of the underlying datastore.</div><div class=\"line\"></div><div class=\"line\">* All other levels correspond to the JDBC isolation levels.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> java.sql.Connection</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//使用数据库默认的隔离级别</span></div><div class=\"line\">DEFAULT(TransactionDefinition.ISOLATION_DEFAULT),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* A constant indicating that dirty reads, non-repeatable reads and phantom reads</div><div class=\"line\"></div><div class=\"line\">* can occur. This level allows a row changed by one transaction to be read by</div><div class=\"line\"></div><div class=\"line\">* another transaction before any changes in that row have been committed</div><div class=\"line\"></div><div class=\"line\">* (a \"dirty read\"). If any of the changes are rolled back, the second</div><div class=\"line\"></div><div class=\"line\">* transaction will have retrieved an invalid row.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> java.sql.Connection#TRANSACTION_READ_UNCOMMITTED</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取未提交数据(级别最低,允许事务读取另一个事务未提交的数据)</span></div><div class=\"line\">READ_UNCOMMITTED(TransactionDefinition.ISOLATION_READ_UNCOMMITTED),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* A constant indicating that dirty reads are prevented; non-repeatable reads</div><div class=\"line\"></div><div class=\"line\">* and phantom reads can occur. This level only prohibits a transaction</div><div class=\"line\"></div><div class=\"line\">* from reading a row with uncommitted changes in it.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> java.sql.Connection#TRANSACTION_READ_COMMITTED</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取提交数据(允许事务读取另一个事务提交的数据)</span></div><div class=\"line\">READ_COMMITTED(TransactionDefinition.ISOLATION_READ_COMMITTED),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* A constant indicating that dirty reads and non-repeatable reads are</div><div class=\"line\"></div><div class=\"line\">* prevented; phantom reads can occur. This level prohibits a transaction</div><div class=\"line\"></div><div class=\"line\">* from reading a row with uncommitted changes in it, and it also prohibits</div><div class=\"line\"></div><div class=\"line\">* the situation where one transaction reads a row, a second transaction</div><div class=\"line\"></div><div class=\"line\">* alters the row, and the first transaction rereads the row, getting</div><div class=\"line\"></div><div class=\"line\">* different values the second time (a \"non-repeatable read\").</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> java.sql.Connection#TRANSACTION_REPEATABLE_READ</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//可重复读</span></div><div class=\"line\">REPEATABLE_READ(TransactionDefinition.ISOLATION_REPEATABLE_READ),</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">* A constant indicating that dirty reads, non-repeatable reads and phantom</div><div class=\"line\"></div><div class=\"line\">* reads are prevented. This level includes the prohibitions in</div><div class=\"line\"></div><div class=\"line\">* &#123;<span class=\"doctag\">@code</span> ISOLATION_REPEATABLE_READ&#125; and further prohibits the situation</div><div class=\"line\"></div><div class=\"line\">* where one transaction reads all rows that satisfy a &#123;<span class=\"doctag\">@code</span> WHERE&#125;</div><div class=\"line\"></div><div class=\"line\">* condition, a second transaction inserts a row that satisfies that</div><div class=\"line\"></div><div class=\"line\">* &#123;<span class=\"doctag\">@code</span> WHERE&#125; condition, and the first transaction rereads for the</div><div class=\"line\"></div><div class=\"line\">* same condition, retrieving the additional \"phantom\" row in the second read.</div><div class=\"line\"></div><div class=\"line\">* <span class=\"doctag\">@see</span> java.sql.Connection#TRANSACTION_SERIALIZABLE</div><div class=\"line\"></div><div class=\"line\">*/</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//顺序执行读取(级别最高,最可靠)</span></div><div class=\"line\">SERIALIZABLE(TransactionDefinition.ISOLATION_SERIALIZABLE);</div></pre></td></tr></table></figure>\n<p>下面整理一张表.</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">丢失更新</th>\n<th style=\"text-align:center\">脏读</th>\n<th style=\"text-align:center\">非重复读</th>\n<th style=\"text-align:center\">覆盖更新</th>\n<th style=\"text-align:center\">幻读</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">未提交读</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">已提交读</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">可重复读</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">Y</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">串行化(顺序读)</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">N</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>名词解释</li>\n</ul>\n<p><strong>未提交读</strong>:允许读取未提交数据,如果一个事务已经开始写数据，则另外一个事务则不允许同时进行写操作，但允许其他事务读此行数据。</p>\n<p><strong>已提交读</strong>:当一个事务开始了,则只有等这个事务提交结束了,才允许其他事务读,</p>\n<p><strong>可重复读</strong>: 读取数据的事务将会禁止写事务（但允许读事务），写事务则禁止任何其他事务</p>\n<p><strong>串行化读</strong>:按照顺序,一个事务一个事务的执行.</p>\n<p><strong>丢失更新</strong>:撤销一个事务时，把其他事务已提交的更新数据覆盖（A和B事务并发执行，A事务执行更新后，提交；B事务在A事务更新后，B事务结束前也做了对该行数据的更新操作，然后回滚，则两次更新操作都丢失了）。</p>\n<p><strong>脏读</strong>:一个事务读到另一个事务未提交的更新数据（事务T1将某一值修改，然后事务T2读取该值，此后T1因为某种原因撤销对该值的修改，这就导致了T2所读取到的数据是无效的）。</p>\n<p><strong>不可重复读</strong>:一个事务读到另一个事务已提交的更新数据（一个事务范围内两个相同的查询却返回了不同数据。这是由于查询时系统中其他事务修改的提交而引起的。比如事务T1读取某一数据，事务T2读取并修改了该数据，T1为了对读取值进行检验而再次读取该数据，便得到了不同的结果）。</p>\n<p><strong>覆盖更新</strong>:这是不可重复读中的特例，一个事务覆盖另一个事务已提交的更新数据（即A事务更新数据，然后B事务更新该数据，A事务查询发现自己更新的数据变了）。</p>\n<p><strong>虚读（幻读）</strong>:一个事务读到另一个事务已提交的新插入的数据（A和B事务并发执行，A事务查询数据，B事务插入或者删除数据，A事务再次查询发现结果集中有以前没有的数据或者以前有的数据消失了）。</p>\n<p>oracle 支持<strong>Read Committed</strong>和 <strong>Serializable</strong>和<strong>oracle特有的Read-only</strong> 这三种事务隔离级别,<strong>默认Read Committed</strong></p>\n<p>mysql支持<strong>Read Uncommitted, Read Committed, Repeatable Read,Serializable, 默认Repeatable Read</strong></p>"},{"title":"夜行者的伤","date":"2017-04-01T07:18:45.000Z","_content":"<blockquote class=\"blockquote-center\">\n你充满阳光\n我怕见到你\n\n有太阳就会有影子\n而我是个夜行者\n<!-- more --> \n我不怕黑夜\n一个人\n连影子都别跟着我\n\n我不怕孤独\n一个人\n去浪迹天涯\n\n我不怕无助\n一个人\n躲在被窝里哭\n我也不会求助\n\n我不怕\n我无牵无挂\n</blockquote>\n","source":"_posts/夜行者的伤.md","raw":"---\ntitle: 夜行者的伤\ndate: 2017-04-01 15:18:45\ntags: 现代诗\ncategories: 文艺\n---\n<blockquote class=\"blockquote-center\">\n你充满阳光\n我怕见到你\n\n有太阳就会有影子\n而我是个夜行者\n<!-- more --> \n我不怕黑夜\n一个人\n连影子都别跟着我\n\n我不怕孤独\n一个人\n去浪迹天涯\n\n我不怕无助\n一个人\n躲在被窝里哭\n我也不会求助\n\n我不怕\n我无牵无挂\n</blockquote>\n","slug":"夜行者的伤","published":1,"updated":"2017-04-11T09:32:42.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc5951000xcoqhhnwyg8lq","content":"<blockquote class=\"blockquote-center\"><br>你充满阳光<br>我怕见到你<br><br>有太阳就会有影子<br>而我是个夜行者<br><a id=\"more\"></a><br>我不怕黑夜<br>一个人<br>连影子都别跟着我<br><br>我不怕孤独<br>一个人<br>去浪迹天涯<br><br>我不怕无助<br>一个人<br>躲在被窝里哭<br>我也不会求助<br><br>我不怕<br>我无牵无挂<br></blockquote>\n","excerpt":"<blockquote class=\"blockquote-center\"><br>你充满阳光<br>我怕见到你<br><br>有太阳就会有影子<br>而我是个夜行者<br>","more":"<br>我不怕黑夜<br>一个人<br>连影子都别跟着我<br><br>我不怕孤独<br>一个人<br>去浪迹天涯<br><br>我不怕无助<br>一个人<br>躲在被窝里哭<br>我也不会求助<br><br>我不怕<br>我无牵无挂<br></blockquote>"},{"title":"原本两个人","date":"2017-04-01T07:01:49.000Z","_content":"<blockquote class=\"blockquote-center\">\n以前\n一个人是享受\n躺在床上\n看着天花板\n数着星星\n可它并不透明\n我却看到整个星空\n一个人的世界\n一个人的梦\n<!-- more --> \n后来\n一个人是罪无可恕\n躺在草地上\n望着夜空\n却再也见不到星星\n但这可是天空\n我也不是很懂\n一个人的牢笼\n一个人的痛\n</blockquote>\n","source":"_posts/原本两个人.md","raw":"---\ntitle: 原本两个人\ndate: 2017-04-01 15:01:49\ntags: 现代诗\ncategories: 文艺\n---\n<blockquote class=\"blockquote-center\">\n以前\n一个人是享受\n躺在床上\n看着天花板\n数着星星\n可它并不透明\n我却看到整个星空\n一个人的世界\n一个人的梦\n<!-- more --> \n后来\n一个人是罪无可恕\n躺在草地上\n望着夜空\n却再也见不到星星\n但这可是天空\n我也不是很懂\n一个人的牢笼\n一个人的痛\n</blockquote>\n","slug":"原本两个人","published":1,"updated":"2017-04-11T09:33:02.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc59530010coqhk5uznpyx","content":"<blockquote class=\"blockquote-center\"><br>以前<br>一个人是享受<br>躺在床上<br>看着天花板<br>数着星星<br>可它并不透明<br>我却看到整个星空<br>一个人的世界<br>一个人的梦<br><a id=\"more\"></a><br>后来<br>一个人是罪无可恕<br>躺在草地上<br>望着夜空<br>却再也见不到星星<br>但这可是天空<br>我也不是很懂<br>一个人的牢笼<br>一个人的痛<br></blockquote>\n","excerpt":"<blockquote class=\"blockquote-center\"><br>以前<br>一个人是享受<br>躺在床上<br>看着天花板<br>数着星星<br>可它并不透明<br>我却看到整个星空<br>一个人的世界<br>一个人的梦<br>","more":"<br>后来<br>一个人是罪无可恕<br>躺在草地上<br>望着夜空<br>却再也见不到星星<br>但这可是天空<br>我也不是很懂<br>一个人的牢笼<br>一个人的痛<br></blockquote>"},{"title":"常用工具","date":"2017-03-28T05:47:17.000Z","_content":"**远程连接服务器**: winscp/putty/Xshell\n\n**ftp**: Xftp\n\n**mongodbGUI**: Robomongo\n\n**编辑器**: notepad++, vim\n\n**接口调试**: postman\n\n**监控分析**: BTrace","source":"_posts/常用工具.md","raw":"---\ntitle: 常用工具\ndate: 2017-03-28 13:47:17\ntags: 其他\ncategories: 其他\n---\n**远程连接服务器**: winscp/putty/Xshell\n\n**ftp**: Xftp\n\n**mongodbGUI**: Robomongo\n\n**编辑器**: notepad++, vim\n\n**接口调试**: postman\n\n**监控分析**: BTrace","slug":"常用工具","published":1,"updated":"2017-04-26T08:45:01.492Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc59560015coqh1aeft35p","content":"<p><strong>远程连接服务器</strong>: winscp/putty/Xshell</p>\n<p><strong>ftp</strong>: Xftp</p>\n<p><strong>mongodbGUI</strong>: Robomongo</p>\n<p><strong>编辑器</strong>: notepad++, vim</p>\n<p><strong>接口调试</strong>: postman</p>\n<p><strong>监控分析</strong>: BTrace</p>\n","excerpt":"","more":"<p><strong>远程连接服务器</strong>: winscp/putty/Xshell</p>\n<p><strong>ftp</strong>: Xftp</p>\n<p><strong>mongodbGUI</strong>: Robomongo</p>\n<p><strong>编辑器</strong>: notepad++, vim</p>\n<p><strong>接口调试</strong>: postman</p>\n<p><strong>监控分析</strong>: BTrace</p>\n"},{"title":"对象拷贝类PropertyUtils，BeanUtils，BeanCopier","date":"2017-03-27T07:42:15.000Z","_content":"### 目前流行的较为公用认可的工具类：\n\n#### Apache的两个版本：（反射机制）\n```java\norg.apache.commons.beanutils.PropertyUtils.copyProperties(Object dest, Object orig)\norg.apache.commons.beanutils.BeanUtils.copyProperties(Object dest, Object orig)\n```\n<!-- more --> \n#### Spring版本：（反射机制）\n```java\norg.springframework.beans.BeanUtils.copyProperties(Object source, Object target, Class editable, String[] ignoreProperties)\n```\n#### cglib版本：（使用动态代理，效率高）\n```java\nnet.sf.cglib.beans.BeanCopier.copy(Object paramObject1, Object paramObject2, Converter paramConverter)\n```\n### 原理简介\n\n#### 反射类型：（apache）\n\n都使用静态类调用，最终转化虚拟机中两个单例的工具对象。\n```java\npublic BeanUtilsBean()\n{\n  this(new ConvertUtilsBean(), new PropertyUtilsBean());\n}\n```\nConvertUtilsBean可以通过ConvertUtils全局自定义注册。\n```java\nConvertUtils.register(new DateConvert(), java.util.Date.class);\n```\nPropertyUtilsBean的copyProperties方法实现了拷贝的算法。\n1、  动态bean：\n```java\norig instanceof DynaBean：Object value = ((DynaBean)orig).get(name);\n```\n然后把value复制到动态bean类\n2、  Map类型：orig instanceof Map：key值逐个拷贝\n3、  其他普通类：：从beanInfo【每一个对象都有一个缓存的bean信息，包含属性字段等】取出name，然后把sourceClass和targetClass逐个拷贝\n#### Cglib类型：BeanCopier\n```java\ncopier = BeanCopier.create(source.getClass(), target.getClass(), false);\ncopier.copy(source, target, null);\n```\nCreate对象过程：产生sourceClass-》TargetClass的拷贝代理类，放入jvm中，所以创建的代理类的时候比较耗时。最好保证这个对象的单例模式，可以参照最后一部分的优化方案。\n创建过程：源代码见\n```java\njdk：net.sf.cglib.beans.BeanCopier.Generator.generateClass(ClassVisitor)\n```\n1、  获取sourceClass的所有public get 方法-》PropertyDescriptor[] getters\n2、  获取TargetClass 的所有 public set 方法-》PropertyDescriptor[] setters\n3、  遍历setters的每一个属性，执行4和5\n4、  按setters的name生成sourceClass的所有setter方法-》PropertyDescriptor getter【不符合javabean规范的类将会可能出现空指针异常】\n5、  PropertyDescriptor[] setters-》PropertyDescriptor setter\n6、  将setter和getter名字和类型 配对，生成代理类的拷贝方法。\nCopy属性过程：调用生成的代理类，代理类的代码和手工操作的代码很类似，效率非常高。\n","source":"_posts/对象拷贝类PropertyUtils，BeanUtils，BeanCopier.md","raw":"---\ntitle: 对象拷贝类PropertyUtils，BeanUtils，BeanCopier\ndate: 2017-03-27 15:42:15\ntags: [java,反射]\ncategories: 技术\n---\n### 目前流行的较为公用认可的工具类：\n\n#### Apache的两个版本：（反射机制）\n```java\norg.apache.commons.beanutils.PropertyUtils.copyProperties(Object dest, Object orig)\norg.apache.commons.beanutils.BeanUtils.copyProperties(Object dest, Object orig)\n```\n<!-- more --> \n#### Spring版本：（反射机制）\n```java\norg.springframework.beans.BeanUtils.copyProperties(Object source, Object target, Class editable, String[] ignoreProperties)\n```\n#### cglib版本：（使用动态代理，效率高）\n```java\nnet.sf.cglib.beans.BeanCopier.copy(Object paramObject1, Object paramObject2, Converter paramConverter)\n```\n### 原理简介\n\n#### 反射类型：（apache）\n\n都使用静态类调用，最终转化虚拟机中两个单例的工具对象。\n```java\npublic BeanUtilsBean()\n{\n  this(new ConvertUtilsBean(), new PropertyUtilsBean());\n}\n```\nConvertUtilsBean可以通过ConvertUtils全局自定义注册。\n```java\nConvertUtils.register(new DateConvert(), java.util.Date.class);\n```\nPropertyUtilsBean的copyProperties方法实现了拷贝的算法。\n1、  动态bean：\n```java\norig instanceof DynaBean：Object value = ((DynaBean)orig).get(name);\n```\n然后把value复制到动态bean类\n2、  Map类型：orig instanceof Map：key值逐个拷贝\n3、  其他普通类：：从beanInfo【每一个对象都有一个缓存的bean信息，包含属性字段等】取出name，然后把sourceClass和targetClass逐个拷贝\n#### Cglib类型：BeanCopier\n```java\ncopier = BeanCopier.create(source.getClass(), target.getClass(), false);\ncopier.copy(source, target, null);\n```\nCreate对象过程：产生sourceClass-》TargetClass的拷贝代理类，放入jvm中，所以创建的代理类的时候比较耗时。最好保证这个对象的单例模式，可以参照最后一部分的优化方案。\n创建过程：源代码见\n```java\njdk：net.sf.cglib.beans.BeanCopier.Generator.generateClass(ClassVisitor)\n```\n1、  获取sourceClass的所有public get 方法-》PropertyDescriptor[] getters\n2、  获取TargetClass 的所有 public set 方法-》PropertyDescriptor[] setters\n3、  遍历setters的每一个属性，执行4和5\n4、  按setters的name生成sourceClass的所有setter方法-》PropertyDescriptor getter【不符合javabean规范的类将会可能出现空指针异常】\n5、  PropertyDescriptor[] setters-》PropertyDescriptor setter\n6、  将setter和getter名字和类型 配对，生成代理类的拷贝方法。\nCopy属性过程：调用生成的代理类，代理类的代码和手工操作的代码很类似，效率非常高。\n","slug":"对象拷贝类PropertyUtils，BeanUtils，BeanCopier","published":1,"updated":"2017-04-11T09:31:03.272Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc59580017coqhg9qix0jn","content":"<h3 id=\"目前流行的较为公用认可的工具类：\"><a href=\"#目前流行的较为公用认可的工具类：\" class=\"headerlink\" title=\"目前流行的较为公用认可的工具类：\"></a>目前流行的较为公用认可的工具类：</h3><h4 id=\"Apache的两个版本：（反射机制）\"><a href=\"#Apache的两个版本：（反射机制）\" class=\"headerlink\" title=\"Apache的两个版本：（反射机制）\"></a>Apache的两个版本：（反射机制）</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.apache.commons.beanutils.PropertyUtils.copyProperties(Object dest, Object orig)</div><div class=\"line\">org.apache.commons.beanutils.BeanUtils.copyProperties(Object dest, Object orig)</div></pre></td></tr></table></figure>\n<a id=\"more\"></a> \n<h4 id=\"Spring版本：（反射机制）\"><a href=\"#Spring版本：（反射机制）\" class=\"headerlink\" title=\"Spring版本：（反射机制）\"></a>Spring版本：（反射机制）</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.springframework.beans.BeanUtils.copyProperties(Object source, Object target, Class editable, String[] ignoreProperties)</div></pre></td></tr></table></figure>\n<h4 id=\"cglib版本：（使用动态代理，效率高）\"><a href=\"#cglib版本：（使用动态代理，效率高）\" class=\"headerlink\" title=\"cglib版本：（使用动态代理，效率高）\"></a>cglib版本：（使用动态代理，效率高）</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">net.sf.cglib.beans.BeanCopier.copy(Object paramObject1, Object paramObject2, Converter paramConverter)</div></pre></td></tr></table></figure>\n<h3 id=\"原理简介\"><a href=\"#原理简介\" class=\"headerlink\" title=\"原理简介\"></a>原理简介</h3><h4 id=\"反射类型：（apache）\"><a href=\"#反射类型：（apache）\" class=\"headerlink\" title=\"反射类型：（apache）\"></a>反射类型：（apache）</h4><p>都使用静态类调用，最终转化虚拟机中两个单例的工具对象。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BeanUtilsBean</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>(<span class=\"keyword\">new</span> ConvertUtilsBean(), <span class=\"keyword\">new</span> PropertyUtilsBean());</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>ConvertUtilsBean可以通过ConvertUtils全局自定义注册。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ConvertUtils.register(<span class=\"keyword\">new</span> DateConvert(), java.util.Date.class);</div></pre></td></tr></table></figure></p>\n<p>PropertyUtilsBean的copyProperties方法实现了拷贝的算法。<br>1、  动态bean：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">orig <span class=\"keyword\">instanceof</span> DynaBean：Object value = ((DynaBean)orig).get(name);</div></pre></td></tr></table></figure></p>\n<p>然后把value复制到动态bean类<br>2、  Map类型：orig instanceof Map：key值逐个拷贝<br>3、  其他普通类：：从beanInfo【每一个对象都有一个缓存的bean信息，包含属性字段等】取出name，然后把sourceClass和targetClass逐个拷贝</p>\n<h4 id=\"Cglib类型：BeanCopier\"><a href=\"#Cglib类型：BeanCopier\" class=\"headerlink\" title=\"Cglib类型：BeanCopier\"></a>Cglib类型：BeanCopier</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">copier = BeanCopier.create(source.getClass(), target.getClass(), <span class=\"keyword\">false</span>);</div><div class=\"line\">copier.copy(source, target, <span class=\"keyword\">null</span>);</div></pre></td></tr></table></figure>\n<p>Create对象过程：产生sourceClass-》TargetClass的拷贝代理类，放入jvm中，所以创建的代理类的时候比较耗时。最好保证这个对象的单例模式，可以参照最后一部分的优化方案。<br>创建过程：源代码见<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdk：net.sf.cglib.beans.BeanCopier.Generator.generateClass(ClassVisitor)</div></pre></td></tr></table></figure></p>\n<p>1、  获取sourceClass的所有public get 方法-》PropertyDescriptor[] getters<br>2、  获取TargetClass 的所有 public set 方法-》PropertyDescriptor[] setters<br>3、  遍历setters的每一个属性，执行4和5<br>4、  按setters的name生成sourceClass的所有setter方法-》PropertyDescriptor getter【不符合javabean规范的类将会可能出现空指针异常】<br>5、  PropertyDescriptor[] setters-》PropertyDescriptor setter<br>6、  将setter和getter名字和类型 配对，生成代理类的拷贝方法。<br>Copy属性过程：调用生成的代理类，代理类的代码和手工操作的代码很类似，效率非常高。</p>\n","excerpt":"<h3 id=\"目前流行的较为公用认可的工具类：\"><a href=\"#目前流行的较为公用认可的工具类：\" class=\"headerlink\" title=\"目前流行的较为公用认可的工具类：\"></a>目前流行的较为公用认可的工具类：</h3><h4 id=\"Apache的两个版本：（反射机制）\"><a href=\"#Apache的两个版本：（反射机制）\" class=\"headerlink\" title=\"Apache的两个版本：（反射机制）\"></a>Apache的两个版本：（反射机制）</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.apache.commons.beanutils.PropertyUtils.copyProperties(Object dest, Object orig)</div><div class=\"line\">org.apache.commons.beanutils.BeanUtils.copyProperties(Object dest, Object orig)</div></pre></td></tr></table></figure>","more":"<h4 id=\"Spring版本：（反射机制）\"><a href=\"#Spring版本：（反射机制）\" class=\"headerlink\" title=\"Spring版本：（反射机制）\"></a>Spring版本：（反射机制）</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.springframework.beans.BeanUtils.copyProperties(Object source, Object target, Class editable, String[] ignoreProperties)</div></pre></td></tr></table></figure>\n<h4 id=\"cglib版本：（使用动态代理，效率高）\"><a href=\"#cglib版本：（使用动态代理，效率高）\" class=\"headerlink\" title=\"cglib版本：（使用动态代理，效率高）\"></a>cglib版本：（使用动态代理，效率高）</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">net.sf.cglib.beans.BeanCopier.copy(Object paramObject1, Object paramObject2, Converter paramConverter)</div></pre></td></tr></table></figure>\n<h3 id=\"原理简介\"><a href=\"#原理简介\" class=\"headerlink\" title=\"原理简介\"></a>原理简介</h3><h4 id=\"反射类型：（apache）\"><a href=\"#反射类型：（apache）\" class=\"headerlink\" title=\"反射类型：（apache）\"></a>反射类型：（apache）</h4><p>都使用静态类调用，最终转化虚拟机中两个单例的工具对象。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BeanUtilsBean</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">  <span class=\"keyword\">this</span>(<span class=\"keyword\">new</span> ConvertUtilsBean(), <span class=\"keyword\">new</span> PropertyUtilsBean());</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>ConvertUtilsBean可以通过ConvertUtils全局自定义注册。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ConvertUtils.register(<span class=\"keyword\">new</span> DateConvert(), java.util.Date.class);</div></pre></td></tr></table></figure></p>\n<p>PropertyUtilsBean的copyProperties方法实现了拷贝的算法。<br>1、  动态bean：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">orig <span class=\"keyword\">instanceof</span> DynaBean：Object value = ((DynaBean)orig).get(name);</div></pre></td></tr></table></figure></p>\n<p>然后把value复制到动态bean类<br>2、  Map类型：orig instanceof Map：key值逐个拷贝<br>3、  其他普通类：：从beanInfo【每一个对象都有一个缓存的bean信息，包含属性字段等】取出name，然后把sourceClass和targetClass逐个拷贝</p>\n<h4 id=\"Cglib类型：BeanCopier\"><a href=\"#Cglib类型：BeanCopier\" class=\"headerlink\" title=\"Cglib类型：BeanCopier\"></a>Cglib类型：BeanCopier</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">copier = BeanCopier.create(source.getClass(), target.getClass(), <span class=\"keyword\">false</span>);</div><div class=\"line\">copier.copy(source, target, <span class=\"keyword\">null</span>);</div></pre></td></tr></table></figure>\n<p>Create对象过程：产生sourceClass-》TargetClass的拷贝代理类，放入jvm中，所以创建的代理类的时候比较耗时。最好保证这个对象的单例模式，可以参照最后一部分的优化方案。<br>创建过程：源代码见<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">jdk：net.sf.cglib.beans.BeanCopier.Generator.generateClass(ClassVisitor)</div></pre></td></tr></table></figure></p>\n<p>1、  获取sourceClass的所有public get 方法-》PropertyDescriptor[] getters<br>2、  获取TargetClass 的所有 public set 方法-》PropertyDescriptor[] setters<br>3、  遍历setters的每一个属性，执行4和5<br>4、  按setters的name生成sourceClass的所有setter方法-》PropertyDescriptor getter【不符合javabean规范的类将会可能出现空指针异常】<br>5、  PropertyDescriptor[] setters-》PropertyDescriptor setter<br>6、  将setter和getter名字和类型 配对，生成代理类的拷贝方法。<br>Copy属性过程：调用生成的代理类，代理类的代码和手工操作的代码很类似，效率非常高。</p>"},{"title":"念奴娇 桂花","date":"2017-04-01T07:25:10.000Z","_content":"\n芳影绰约，寒玉阶，蟾宫折桂婵娟。辗转花前，愁几句，落华曾为谁妍？知愁草木，韶白深切，哭对情海如烟。\n枉占三秋，十里西风瘦却。\n\n小镇塘前客栈，纵几缕相思，几多诗篇。风捡残花，相思染，几度诗冷窗前。鬓白几许？乃红尘点缀，桂香自怜。\n凌云分付，风花雪月云烟。\n","source":"_posts/念奴娇-桂花.md","raw":"---\ntitle: 念奴娇 桂花\ndate: 2017-04-01 15:25:10\ntags: 古诗词\ncategories: 文艺\n---\n\n芳影绰约，寒玉阶，蟾宫折桂婵娟。辗转花前，愁几句，落华曾为谁妍？知愁草木，韶白深切，哭对情海如烟。\n枉占三秋，十里西风瘦却。\n\n小镇塘前客栈，纵几缕相思，几多诗篇。风捡残花，相思染，几度诗冷窗前。鬓白几许？乃红尘点缀，桂香自怜。\n凌云分付，风花雪月云烟。\n","slug":"念奴娇-桂花","published":1,"updated":"2017-04-01T08:15:56.296Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc595a0019coqhoxa63xjm","content":"<p>芳影绰约，寒玉阶，蟾宫折桂婵娟。辗转花前，愁几句，落华曾为谁妍？知愁草木，韶白深切，哭对情海如烟。<br>枉占三秋，十里西风瘦却。</p>\n<p>小镇塘前客栈，纵几缕相思，几多诗篇。风捡残花，相思染，几度诗冷窗前。鬓白几许？乃红尘点缀，桂香自怜。<br>凌云分付，风花雪月云烟。</p>\n","excerpt":"","more":"<p>芳影绰约，寒玉阶，蟾宫折桂婵娟。辗转花前，愁几句，落华曾为谁妍？知愁草木，韶白深切，哭对情海如烟。<br>枉占三秋，十里西风瘦却。</p>\n<p>小镇塘前客栈，纵几缕相思，几多诗篇。风捡残花，相思染，几度诗冷窗前。鬓白几许？乃红尘点缀，桂香自怜。<br>凌云分付，风花雪月云烟。</p>\n"},{"title":"编码散记","date":"2017-04-01T08:14:23.000Z","_content":"\n## 开发习惯\n\n- guava,程序员的好朋友.\n- controller层, 不要放有关业务的代码.业务代码放service层.\n- 如果if(){}else if(){}.....>=3 个if, 个人觉得,用switch case 比较好.\n- 有些功能尽量使用java官方工具类.不要自己写,比如StringUtils,CollectionUtils,Arrays等.\n- 合理规范注释, 前人编码注释清晰了, 后人改动思路就明了了.还有就是命名的规范(代码改动,更新注释).\n- 尽量不要写重复代码,多次使用的代码抽出来独立成为一个方法调用,private或public根据具体业务情况而定.\n- 生产代码禁止以System及Throwable.printStackTrace的方式输出日志信息, 必须用Logger替代, 注意log等级.\n- controller层是前台和后台交互的.接口单一职责.一个接口一个功能(如果是在controller层进行权限控制的话,能更好的进行权限控制), 尽量清晰.不过service层可以提高代码复用率.\n<!-- more --> \n\n## 一些技巧\n\n- 运用set的key不能重复, 可以去重.\n\n\n## 有坑的点\n\n- 开发中还是特别要注意new object的这个问题.\n- 要注意map是无序的,千万不要数据库排序查询出来结果之后,放map.\n- BigDecimal.add,subtract,multiply,divide,返回的是一个new object,要注意.\n- get/set,方法中最好别写逻辑,报错console不会提示,只能自己一步步debug进去看异常.\n- 注意Integer(-128~127)值的==和equals比较,(-XX:AutoBoxCacheMax这个参数可以了解下)\n\n\n## 性能相关\n\n- 利用好缓存, 缓存最常用最适合的地方:数据字典.\n- for循环内避免查询处理相同的数据, 多次使用的数据放for循环外面.\n\n\n## 关于工具\n\n- chrome开发者工具: 点击代码窗口左下角的那个'{ }'(pretty print) 标签, 能格式化被minify掉的css/js.\n- chrome开发者工具: 可以设置网络的访问速度来模拟一个网络很慢的情况.(network->no throtting->随意设置).","source":"_posts/编码散记.md","raw":"---\ntitle: 编码散记\ndate: 2017-04-01 16:14:23\ntags: 其他\ncategories: 其他\n---\n\n## 开发习惯\n\n- guava,程序员的好朋友.\n- controller层, 不要放有关业务的代码.业务代码放service层.\n- 如果if(){}else if(){}.....>=3 个if, 个人觉得,用switch case 比较好.\n- 有些功能尽量使用java官方工具类.不要自己写,比如StringUtils,CollectionUtils,Arrays等.\n- 合理规范注释, 前人编码注释清晰了, 后人改动思路就明了了.还有就是命名的规范(代码改动,更新注释).\n- 尽量不要写重复代码,多次使用的代码抽出来独立成为一个方法调用,private或public根据具体业务情况而定.\n- 生产代码禁止以System及Throwable.printStackTrace的方式输出日志信息, 必须用Logger替代, 注意log等级.\n- controller层是前台和后台交互的.接口单一职责.一个接口一个功能(如果是在controller层进行权限控制的话,能更好的进行权限控制), 尽量清晰.不过service层可以提高代码复用率.\n<!-- more --> \n\n## 一些技巧\n\n- 运用set的key不能重复, 可以去重.\n\n\n## 有坑的点\n\n- 开发中还是特别要注意new object的这个问题.\n- 要注意map是无序的,千万不要数据库排序查询出来结果之后,放map.\n- BigDecimal.add,subtract,multiply,divide,返回的是一个new object,要注意.\n- get/set,方法中最好别写逻辑,报错console不会提示,只能自己一步步debug进去看异常.\n- 注意Integer(-128~127)值的==和equals比较,(-XX:AutoBoxCacheMax这个参数可以了解下)\n\n\n## 性能相关\n\n- 利用好缓存, 缓存最常用最适合的地方:数据字典.\n- for循环内避免查询处理相同的数据, 多次使用的数据放for循环外面.\n\n\n## 关于工具\n\n- chrome开发者工具: 点击代码窗口左下角的那个'{ }'(pretty print) 标签, 能格式化被minify掉的css/js.\n- chrome开发者工具: 可以设置网络的访问速度来模拟一个网络很慢的情况.(network->no throtting->随意设置).","slug":"编码散记","published":1,"updated":"2017-04-26T08:44:56.467Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc595f001ecoqhd7leafur","content":"<h2 id=\"开发习惯\"><a href=\"#开发习惯\" class=\"headerlink\" title=\"开发习惯\"></a>开发习惯</h2><ul>\n<li>guava,程序员的好朋友.</li>\n<li>controller层, 不要放有关业务的代码.业务代码放service层.</li>\n<li>如果if(){}else if(){}…..&gt;=3 个if, 个人觉得,用switch case 比较好.</li>\n<li>有些功能尽量使用java官方工具类.不要自己写,比如StringUtils,CollectionUtils,Arrays等.</li>\n<li>合理规范注释, 前人编码注释清晰了, 后人改动思路就明了了.还有就是命名的规范(代码改动,更新注释).</li>\n<li>尽量不要写重复代码,多次使用的代码抽出来独立成为一个方法调用,private或public根据具体业务情况而定.</li>\n<li>生产代码禁止以System及Throwable.printStackTrace的方式输出日志信息, 必须用Logger替代, 注意log等级.</li>\n<li>controller层是前台和后台交互的.接口单一职责.一个接口一个功能(如果是在controller层进行权限控制的话,能更好的进行权限控制), 尽量清晰.不过service层可以提高代码复用率.<a id=\"more\"></a> \n</li>\n</ul>\n<h2 id=\"一些技巧\"><a href=\"#一些技巧\" class=\"headerlink\" title=\"一些技巧\"></a>一些技巧</h2><ul>\n<li>运用set的key不能重复, 可以去重.</li>\n</ul>\n<h2 id=\"有坑的点\"><a href=\"#有坑的点\" class=\"headerlink\" title=\"有坑的点\"></a>有坑的点</h2><ul>\n<li>开发中还是特别要注意new object的这个问题.</li>\n<li>要注意map是无序的,千万不要数据库排序查询出来结果之后,放map.</li>\n<li>BigDecimal.add,subtract,multiply,divide,返回的是一个new object,要注意.</li>\n<li>get/set,方法中最好别写逻辑,报错console不会提示,只能自己一步步debug进去看异常.</li>\n<li>注意Integer(-128~127)值的==和equals比较,(-XX:AutoBoxCacheMax这个参数可以了解下)</li>\n</ul>\n<h2 id=\"性能相关\"><a href=\"#性能相关\" class=\"headerlink\" title=\"性能相关\"></a>性能相关</h2><ul>\n<li>利用好缓存, 缓存最常用最适合的地方:数据字典.</li>\n<li>for循环内避免查询处理相同的数据, 多次使用的数据放for循环外面.</li>\n</ul>\n<h2 id=\"关于工具\"><a href=\"#关于工具\" class=\"headerlink\" title=\"关于工具\"></a>关于工具</h2><ul>\n<li>chrome开发者工具: 点击代码窗口左下角的那个’{ }’(pretty print) 标签, 能格式化被minify掉的css/js.</li>\n<li>chrome开发者工具: 可以设置网络的访问速度来模拟一个网络很慢的情况.(network-&gt;no throtting-&gt;随意设置).</li>\n</ul>\n","excerpt":"<h2 id=\"开发习惯\"><a href=\"#开发习惯\" class=\"headerlink\" title=\"开发习惯\"></a>开发习惯</h2><ul>\n<li>guava,程序员的好朋友.</li>\n<li>controller层, 不要放有关业务的代码.业务代码放service层.</li>\n<li>如果if(){}else if(){}…..&gt;=3 个if, 个人觉得,用switch case 比较好.</li>\n<li>有些功能尽量使用java官方工具类.不要自己写,比如StringUtils,CollectionUtils,Arrays等.</li>\n<li>合理规范注释, 前人编码注释清晰了, 后人改动思路就明了了.还有就是命名的规范(代码改动,更新注释).</li>\n<li>尽量不要写重复代码,多次使用的代码抽出来独立成为一个方法调用,private或public根据具体业务情况而定.</li>\n<li>生产代码禁止以System及Throwable.printStackTrace的方式输出日志信息, 必须用Logger替代, 注意log等级.</li>\n<li>controller层是前台和后台交互的.接口单一职责.一个接口一个功能(如果是在controller层进行权限控制的话,能更好的进行权限控制), 尽量清晰.不过service层可以提高代码复用率.","more":"</li>\n</ul>\n<h2 id=\"一些技巧\"><a href=\"#一些技巧\" class=\"headerlink\" title=\"一些技巧\"></a>一些技巧</h2><ul>\n<li>运用set的key不能重复, 可以去重.</li>\n</ul>\n<h2 id=\"有坑的点\"><a href=\"#有坑的点\" class=\"headerlink\" title=\"有坑的点\"></a>有坑的点</h2><ul>\n<li>开发中还是特别要注意new object的这个问题.</li>\n<li>要注意map是无序的,千万不要数据库排序查询出来结果之后,放map.</li>\n<li>BigDecimal.add,subtract,multiply,divide,返回的是一个new object,要注意.</li>\n<li>get/set,方法中最好别写逻辑,报错console不会提示,只能自己一步步debug进去看异常.</li>\n<li>注意Integer(-128~127)值的==和equals比较,(-XX:AutoBoxCacheMax这个参数可以了解下)</li>\n</ul>\n<h2 id=\"性能相关\"><a href=\"#性能相关\" class=\"headerlink\" title=\"性能相关\"></a>性能相关</h2><ul>\n<li>利用好缓存, 缓存最常用最适合的地方:数据字典.</li>\n<li>for循环内避免查询处理相同的数据, 多次使用的数据放for循环外面.</li>\n</ul>\n<h2 id=\"关于工具\"><a href=\"#关于工具\" class=\"headerlink\" title=\"关于工具\"></a>关于工具</h2><ul>\n<li>chrome开发者工具: 点击代码窗口左下角的那个’{ }’(pretty print) 标签, 能格式化被minify掉的css/js.</li>\n<li>chrome开发者工具: 可以设置网络的访问速度来模拟一个网络很慢的情况.(network-&gt;no throtting-&gt;随意设置).</li>\n</ul>"},{"title":"有关Lucene的一些东西","date":"2017-04-11T06:56:50.000Z","_content":"\n因为项目中用到了Lucene,这里简单的说一下关于Lucene的一些东西.\n## 大概介绍\nLucene 是一个基于 Java 的全文信息检索工具包，它不是一个完整的搜索应用程序，而是为你的应用程序提供索引和搜索功能。Lucene 目前是 Apache Jakarta 家族中的一个开源项目。也是较为流行的基于 Java 开源全文检索工具包。\n<!-- more --> \n图 1 表示了搜索应用程序和 Lucene 之间的关系，也反映了利用 Lucene 构建搜索应用程序的流程：\n图 1. 搜索应用程序和 Lucene 之间的关系\n![搜索应用程序和 Lucene 之间的关系](/images/有关Lucene的一些东西001.jpg)\n## 索引\n举个例子,索引有点类似目录,就是什么内容,会告诉你在第几页，这样就能帮助读者比较快地找到相关内容的页码。\n而数据库索引能够大大提高查询的速度原理也是一样，通过目录查找的速度要比一页一页地翻内容高多少倍……当然他还有另外一个原因是它是排好序的。对于检索系统来说核心是一个排序问题。\n而数据库索引不是为全文索引设计的，因此，使用like数据库索引不是为全文索引设计的，因此，使用like \"%keyword%\"时，数据库索引是不起作用的，\n在使用like查询时，搜索过程又变成类似于一页页翻书的遍历过程了，所以对于含有模糊查询的数据库服务来说，LIKE对性能的危害是极大的。\n如果是需要对多个关键词进行模糊匹配：like\"%keyword1%\" and like \"%keyword2%\" ...其效率也就可想而知了。\n\n所以建立一个高效检索系统的关键是建立一个类似于科技索引一样的反向索引机制，将数据源（比如多篇文章）排序顺序存储的同时，有另外一个排好序的关键词列表，\n用于存储关键词==>文章映射关系，利用这样的映射关系索引：[关键词==>出现关键词的文章编号，出现次数（甚至包括位置：起始偏移量，结束偏移量），出现频率]，\n检索过程就是把模糊查询变成多个可以利用索引的精确查询的逻辑组合的过程。从而大大提高了多关键词查询的效率，所以，全文检索问题归结到最后是一个排序问题。\n\n由此可以看出模糊查询相对数据库的精确查询是一个非常不确定的问题，这也是大部分数据库对全文检索支持有限的原因。\nLucene最核心的特征是通过特殊的索引结构实现了传统数据库不擅长的全文索引机制，并提供了扩展接口，以方便针对不同应用的定制。\n\n## lucene的一些包\norg.apache.lucene.document:  存储结构\n这个包提供了一些为封装要索引的文档所需要的类，比如 Document, Field。这样，每一个文档最终被封装成了一个 Document 对象。\norg.apache.lucene.analysis: 语言分析器\n这个包主要功能是对文档进行分词，因为文档在建立索引之前必须要进行分词，所以这个包的作用可以看成是为建立索引做准备工作。\norg.apache.lucene.index: 索引入口\n这个包提供了一些类来协助创建索引以及对创建好的索引进行更新。这里面有两个基础的类：IndexWriter 和 IndexReader，其中 IndexWriter 是用来创建索引并添加文档到索引中的，IndexReader 是用来删除索引中的文档的。\norg.apache.lucene.search: 搜索入口\n这个包提供了对在建立好的索引上进行搜索所需要的类。比如 IndexSearcher 和 Hits, IndexSearcher 定义了在指定的索引上进行搜索的方法，Hits 用来保存搜索得到的结果。\norg.apache.Lucene.queryParser:\t查询分析器\norg.apache.Lucene.store: 底层IO/存储结构\norg.apache.Lucene.util: 一些公用的数据结构\n...\n\n\n## 建立索引\n为了对文档进行索引，Lucene 提供了五个基础的类，他们分别是 Document, Field, IndexWriter, Analyzer, Directory。下面我们分别介绍一下这五个类的用途：\nDocument\nDocument 是用来描述文档的，这里的文档可以指一个 HTML 页面，一封电子邮件，或者是一个文本文件。一个 Document 对象由多个 Field 对象组成的。可以把一个 Document 对象想象成数据库中的一个记录，而每个 Field 对象就是记录的一个字段。\nField\nField 对象是用来描述一个文档的某个属性的，比如一封电子邮件的标题和内容可以用两个 Field 对象分别描述。\nAnalyzer\n在一个文档被索引之前，首先需要对文档内容进行分词处理，这部分工作就是由 Analyzer 来做的。Analyzer 类是一个抽象类，它有多个实现。针对不同的语言和应用需要选择适合的 Analyzer。Analyzer 把分词后的内容交给 IndexWriter 来建立索引。\nIndexWriter\nIndexWriter 是 Lucene 用来创建索引的一个核心的类，他的作用是把一个个的 Document 对象加到索引中来。\nDirectory\n这个类代表了 Lucene 的索引的存储的位置，这是一个抽象类，它目前有两个实现，第一个是 FSDirectory，它表示一个存储在文件系统中的索引的位置。第二个是 RAMDirectory，它表示一个存储在内存当中的索引的位置。\n熟悉了建立索引所需要的这些类后，我们就开始对某个目录下面的文本文件建立索引了，清单 1 给出了对某个目录下的文本文件建立索引的源代码。\n\n\n## 搜索文档\n利用 Lucene 进行搜索就像建立索引一样也是非常方便的。在上面一部分中，我们已经为一个目录下的文本文档建立好了索引，现在我们就要在这个索引上进行搜索以找到包含某个关键词或短语的文档。Lucene 提供了几个基础的类来完成这个过程，它们分别是呢 IndexSearcher, Term, Query, TermQuery, Hits. 下面我们分别介绍这几个类的功能。\nQuery\n这是一个抽象类，他有多个实现，比如 TermQuery, BooleanQuery, PrefixQuery. 这个类的目的是把用户输入的查询字符串封装成 Lucene 能够识别的 Query。\nTerm\nTerm 是搜索的基本单位，一个 Term 对象有两个 String 类型的域组成。生成一个 Term 对象可以有如下一条语句来完成：Term term = new Term(“fieldName”,”queryWord”); 其中第一个参数代表了要在文档的哪一个 Field 上进行查找，第二个参数代表了要查询的关键词。\nTermQuery\nTermQuery 是抽象类 Query 的一个子类，它同时也是 Lucene 支持的最为基本的一个查询类。生成一个 TermQuery 对象由如下语句完成： TermQuery termQuery = new TermQuery(new Term(“fieldName”,”queryWord”)); 它的构造函数只接受一个参数，那就是一个 Term 对象。\nIndexSearcher\nIndexSearcher 是用来在建立好的索引上进行搜索的。它只能以只读的方式打开一个索引，所以可以有多个 IndexSearcher 的实例在一个索引上进行操作。\nTopDocs\nTopDocs 是用来保存搜索的结果的。\n\n## 项目使用总结\n现在的项目是这样使用Lucene的:\nimport jar->用job初始化待查询数据(建立索引)->查询返回(搜索文档),因为Lucene有很简单的api,这里就不细说了,结尾附上大致的代码例子:\n\n## 一个例子\n创建索引:\n```java\t\n/**\n * 处理百科信息\n */\npublic void procAllForTermBaike() throws Exception {\n\tList<Map<String, String>> baikeList = new ArrayList<Map<String, String>>();\n\tQuery<TermBaike> query = this.createQuery();\n\tlong counts = this.count(query);\n\tInteger pages = this.luceneService.getPages(Integer.valueOf(String.valueOf(counts)));\n\tfor (int i = 1; i <= pages; i++) {\n\t\t// 查询获取数据\n\t\tquery.offset((i - 1) * 100).limit(100);\n\t\tQueryResults<TermBaike> result = this.find(query);\n\t\tList<TermBaike> TermBaikeList = result.asList();\n\t\t// 封装返回数据\n\t\tfor (TermBaike termBaike : TermBaikeList) {\n\t\t\tMap<String, String> map = new HashMap<String, String>();\n\t\t\tmap.put(\"id\", termBaike.get_id());\n\t\t\tmap.put(\"name\", termBaike.getVcName());\n\t\t\tmap.put(\"nameEn\", termBaike.getVcNameEn());\n\t\t\tmap.put(\"label\", String.valueOf(ServiceTypeEnum.BAIKE_LAB.getValue()));\n\t\t\tbaikeList.add(map);\n\t\t}\n\t}\n\tthis.luceneService.createIndex(ServiceTypeEnum.BAIKE.getKey(), baikeList, Boolean.TRUE);\n}\n```\n...job相关的代码就不放上来了,就是用job跑这个procxxx方法\n\n\n\n调用的方法:\n\n```java\n/**\n * 获取页数\n */\npublic Integer getPages(Integer totalNum) throws Exception {\n\tInteger pages = 1;\n\tif ((totalNum % 100) == 0) {\n\t\tpages = totalNum / 100;\n\t} else {\n\t\tpages = (totalNum / 100) + 1;\n\t}\n\treturn pages;\n}\n```\n\n```java\n/**\n * 创建索引\n */\npublic void createIndex(Integer serviceType, List<Map<String, String>> list, Boolean isDel) throws Exception {\n\tIndexWriter indexWriter = this.initIndexWriter(serviceType, isDel);\n\ttry {\n\t\tfor (Map<String, String> map : list) {\n\t\t\tDocument doc = new Document();\n\t\t\tfor (Map.Entry<String, String> entry : map.entrySet()) {\n\t\t\t\tif (null != entry.getKey() && null != entry.getValue()) {\n\t\t\t\t\tdoc.add(new TextField(entry.getKey(), entry.getValue(), Field.Store.YES));\n\t\t\t\t}\n\t\t\t}\n\t\t\tindexWriter.addDocument(doc);\n\t\t}\n\t} catch (Exception e) {\n\t\tlogger.error(e);\n\t\te.printStackTrace();\n\t} finally {\n\t\tif (null != indexWriter) {\n\t\t\tindexWriter.close();\n\t\t}\n\t}\n}\n```\n\n搜索文档:\n```java\n/**\n * 百科信息查询\n * \n * @param key 关键字\n * @param currentPage 页码\n * @return\n * @throws Exception\n */\npublic List<TermBaikeVo> queryBaike(String key, Integer currentPage) throws Exception {\n\tList<TermBaikeVo> termBaikeVoList = new ArrayList<TermBaikeVo>();\n\tSort sort = new Sort(new SortField(\"name\", SortField.Type.STRING, true));\n\tList<Document> docList = this.luceneService.query(ServiceTypeEnum.BAIKE.getKey(), key, \"name\", sort, currentPage, DEF_ENUM.DEF_TWENTY.getnCode());\n\tfor (Document doc : docList) {\n\t\tTermBaikeVo termBaikeVo = new TermBaikeVo();\n\t\ttermBaikeVo.setBaikeId(doc.get(\"id\"));\n\t\ttermBaikeVo.setVcName(doc.get(\"name\"));\n\t\ttermBaikeVo.setVcName(doc.get(\"nameEn\"));\n\t\ttermBaikeVo.setVcLabel(doc.get(\"label\"));\n\t\ttermBaikeVoList.add(termBaikeVo);\n\t}\n\treturn termBaikeVoList;\n}\n```\n\n调用的方法:\n\n```java\n/**\n* 单条件分页查询\n*/\npublic List<Document> query(Integer serviceType, String key, String field, Sort sort, Integer currentPage, Integer pageSize) throws Exception {\n\tList<Document> docList = new ArrayList<Document>();\n\tIndexReader reader = this.initIndexReader(serviceType);\n\ttry {\n\t\tAnalyzer analyzer = new StandardAnalyzer();\n\t\tIndexSearcher indexSearcher = new IndexSearcher(reader);\n\t\tQueryParser parser = new QueryParser(field, analyzer);\n\t\torg.apache.lucene.search.Query query = parser.createPhraseQuery(field, key);\n\t\tTopDocs topDocs = indexSearcher.search(query, currentPage + pageSize, sort);\n\t\tScoreDoc[] scoreDocs = topDocs.scoreDocs;\n\t\tif (scoreDocs.length == 0) {\n\t\t\tscoreDocs = this.wildcardQuery(key, field, indexSearcher);\n\t\t}\n\t\tint begin = pageSize * (currentPage - 1);\n\t\tint end = Math.min(begin + pageSize, scoreDocs.length);\n\t\tfor (int i = begin; i < end; i++) {\n\t\t\tint docID = scoreDocs[i].doc;\n\t\t\tDocument doc = indexSearcher.doc(docID);\n\t\t\tdocList.add(doc);\n\t\t}\n\t} catch (Exception e) {\n\t\tlogger.error(e);\n\t} finally {\n\t\tif (null != reader) {\n\t\t\treader.close();\n\t\t}\n\t}\n\treturn docList;\n}\n```\n\n\n","source":"_posts/有关Lucene的一些东西.md","raw":"---\ntitle: 有关Lucene的一些东西\ndate: 2017-04-11 14:56:50\ntags: Lucene\ncategories: 技术\n---\n\n因为项目中用到了Lucene,这里简单的说一下关于Lucene的一些东西.\n## 大概介绍\nLucene 是一个基于 Java 的全文信息检索工具包，它不是一个完整的搜索应用程序，而是为你的应用程序提供索引和搜索功能。Lucene 目前是 Apache Jakarta 家族中的一个开源项目。也是较为流行的基于 Java 开源全文检索工具包。\n<!-- more --> \n图 1 表示了搜索应用程序和 Lucene 之间的关系，也反映了利用 Lucene 构建搜索应用程序的流程：\n图 1. 搜索应用程序和 Lucene 之间的关系\n![搜索应用程序和 Lucene 之间的关系](/images/有关Lucene的一些东西001.jpg)\n## 索引\n举个例子,索引有点类似目录,就是什么内容,会告诉你在第几页，这样就能帮助读者比较快地找到相关内容的页码。\n而数据库索引能够大大提高查询的速度原理也是一样，通过目录查找的速度要比一页一页地翻内容高多少倍……当然他还有另外一个原因是它是排好序的。对于检索系统来说核心是一个排序问题。\n而数据库索引不是为全文索引设计的，因此，使用like数据库索引不是为全文索引设计的，因此，使用like \"%keyword%\"时，数据库索引是不起作用的，\n在使用like查询时，搜索过程又变成类似于一页页翻书的遍历过程了，所以对于含有模糊查询的数据库服务来说，LIKE对性能的危害是极大的。\n如果是需要对多个关键词进行模糊匹配：like\"%keyword1%\" and like \"%keyword2%\" ...其效率也就可想而知了。\n\n所以建立一个高效检索系统的关键是建立一个类似于科技索引一样的反向索引机制，将数据源（比如多篇文章）排序顺序存储的同时，有另外一个排好序的关键词列表，\n用于存储关键词==>文章映射关系，利用这样的映射关系索引：[关键词==>出现关键词的文章编号，出现次数（甚至包括位置：起始偏移量，结束偏移量），出现频率]，\n检索过程就是把模糊查询变成多个可以利用索引的精确查询的逻辑组合的过程。从而大大提高了多关键词查询的效率，所以，全文检索问题归结到最后是一个排序问题。\n\n由此可以看出模糊查询相对数据库的精确查询是一个非常不确定的问题，这也是大部分数据库对全文检索支持有限的原因。\nLucene最核心的特征是通过特殊的索引结构实现了传统数据库不擅长的全文索引机制，并提供了扩展接口，以方便针对不同应用的定制。\n\n## lucene的一些包\norg.apache.lucene.document:  存储结构\n这个包提供了一些为封装要索引的文档所需要的类，比如 Document, Field。这样，每一个文档最终被封装成了一个 Document 对象。\norg.apache.lucene.analysis: 语言分析器\n这个包主要功能是对文档进行分词，因为文档在建立索引之前必须要进行分词，所以这个包的作用可以看成是为建立索引做准备工作。\norg.apache.lucene.index: 索引入口\n这个包提供了一些类来协助创建索引以及对创建好的索引进行更新。这里面有两个基础的类：IndexWriter 和 IndexReader，其中 IndexWriter 是用来创建索引并添加文档到索引中的，IndexReader 是用来删除索引中的文档的。\norg.apache.lucene.search: 搜索入口\n这个包提供了对在建立好的索引上进行搜索所需要的类。比如 IndexSearcher 和 Hits, IndexSearcher 定义了在指定的索引上进行搜索的方法，Hits 用来保存搜索得到的结果。\norg.apache.Lucene.queryParser:\t查询分析器\norg.apache.Lucene.store: 底层IO/存储结构\norg.apache.Lucene.util: 一些公用的数据结构\n...\n\n\n## 建立索引\n为了对文档进行索引，Lucene 提供了五个基础的类，他们分别是 Document, Field, IndexWriter, Analyzer, Directory。下面我们分别介绍一下这五个类的用途：\nDocument\nDocument 是用来描述文档的，这里的文档可以指一个 HTML 页面，一封电子邮件，或者是一个文本文件。一个 Document 对象由多个 Field 对象组成的。可以把一个 Document 对象想象成数据库中的一个记录，而每个 Field 对象就是记录的一个字段。\nField\nField 对象是用来描述一个文档的某个属性的，比如一封电子邮件的标题和内容可以用两个 Field 对象分别描述。\nAnalyzer\n在一个文档被索引之前，首先需要对文档内容进行分词处理，这部分工作就是由 Analyzer 来做的。Analyzer 类是一个抽象类，它有多个实现。针对不同的语言和应用需要选择适合的 Analyzer。Analyzer 把分词后的内容交给 IndexWriter 来建立索引。\nIndexWriter\nIndexWriter 是 Lucene 用来创建索引的一个核心的类，他的作用是把一个个的 Document 对象加到索引中来。\nDirectory\n这个类代表了 Lucene 的索引的存储的位置，这是一个抽象类，它目前有两个实现，第一个是 FSDirectory，它表示一个存储在文件系统中的索引的位置。第二个是 RAMDirectory，它表示一个存储在内存当中的索引的位置。\n熟悉了建立索引所需要的这些类后，我们就开始对某个目录下面的文本文件建立索引了，清单 1 给出了对某个目录下的文本文件建立索引的源代码。\n\n\n## 搜索文档\n利用 Lucene 进行搜索就像建立索引一样也是非常方便的。在上面一部分中，我们已经为一个目录下的文本文档建立好了索引，现在我们就要在这个索引上进行搜索以找到包含某个关键词或短语的文档。Lucene 提供了几个基础的类来完成这个过程，它们分别是呢 IndexSearcher, Term, Query, TermQuery, Hits. 下面我们分别介绍这几个类的功能。\nQuery\n这是一个抽象类，他有多个实现，比如 TermQuery, BooleanQuery, PrefixQuery. 这个类的目的是把用户输入的查询字符串封装成 Lucene 能够识别的 Query。\nTerm\nTerm 是搜索的基本单位，一个 Term 对象有两个 String 类型的域组成。生成一个 Term 对象可以有如下一条语句来完成：Term term = new Term(“fieldName”,”queryWord”); 其中第一个参数代表了要在文档的哪一个 Field 上进行查找，第二个参数代表了要查询的关键词。\nTermQuery\nTermQuery 是抽象类 Query 的一个子类，它同时也是 Lucene 支持的最为基本的一个查询类。生成一个 TermQuery 对象由如下语句完成： TermQuery termQuery = new TermQuery(new Term(“fieldName”,”queryWord”)); 它的构造函数只接受一个参数，那就是一个 Term 对象。\nIndexSearcher\nIndexSearcher 是用来在建立好的索引上进行搜索的。它只能以只读的方式打开一个索引，所以可以有多个 IndexSearcher 的实例在一个索引上进行操作。\nTopDocs\nTopDocs 是用来保存搜索的结果的。\n\n## 项目使用总结\n现在的项目是这样使用Lucene的:\nimport jar->用job初始化待查询数据(建立索引)->查询返回(搜索文档),因为Lucene有很简单的api,这里就不细说了,结尾附上大致的代码例子:\n\n## 一个例子\n创建索引:\n```java\t\n/**\n * 处理百科信息\n */\npublic void procAllForTermBaike() throws Exception {\n\tList<Map<String, String>> baikeList = new ArrayList<Map<String, String>>();\n\tQuery<TermBaike> query = this.createQuery();\n\tlong counts = this.count(query);\n\tInteger pages = this.luceneService.getPages(Integer.valueOf(String.valueOf(counts)));\n\tfor (int i = 1; i <= pages; i++) {\n\t\t// 查询获取数据\n\t\tquery.offset((i - 1) * 100).limit(100);\n\t\tQueryResults<TermBaike> result = this.find(query);\n\t\tList<TermBaike> TermBaikeList = result.asList();\n\t\t// 封装返回数据\n\t\tfor (TermBaike termBaike : TermBaikeList) {\n\t\t\tMap<String, String> map = new HashMap<String, String>();\n\t\t\tmap.put(\"id\", termBaike.get_id());\n\t\t\tmap.put(\"name\", termBaike.getVcName());\n\t\t\tmap.put(\"nameEn\", termBaike.getVcNameEn());\n\t\t\tmap.put(\"label\", String.valueOf(ServiceTypeEnum.BAIKE_LAB.getValue()));\n\t\t\tbaikeList.add(map);\n\t\t}\n\t}\n\tthis.luceneService.createIndex(ServiceTypeEnum.BAIKE.getKey(), baikeList, Boolean.TRUE);\n}\n```\n...job相关的代码就不放上来了,就是用job跑这个procxxx方法\n\n\n\n调用的方法:\n\n```java\n/**\n * 获取页数\n */\npublic Integer getPages(Integer totalNum) throws Exception {\n\tInteger pages = 1;\n\tif ((totalNum % 100) == 0) {\n\t\tpages = totalNum / 100;\n\t} else {\n\t\tpages = (totalNum / 100) + 1;\n\t}\n\treturn pages;\n}\n```\n\n```java\n/**\n * 创建索引\n */\npublic void createIndex(Integer serviceType, List<Map<String, String>> list, Boolean isDel) throws Exception {\n\tIndexWriter indexWriter = this.initIndexWriter(serviceType, isDel);\n\ttry {\n\t\tfor (Map<String, String> map : list) {\n\t\t\tDocument doc = new Document();\n\t\t\tfor (Map.Entry<String, String> entry : map.entrySet()) {\n\t\t\t\tif (null != entry.getKey() && null != entry.getValue()) {\n\t\t\t\t\tdoc.add(new TextField(entry.getKey(), entry.getValue(), Field.Store.YES));\n\t\t\t\t}\n\t\t\t}\n\t\t\tindexWriter.addDocument(doc);\n\t\t}\n\t} catch (Exception e) {\n\t\tlogger.error(e);\n\t\te.printStackTrace();\n\t} finally {\n\t\tif (null != indexWriter) {\n\t\t\tindexWriter.close();\n\t\t}\n\t}\n}\n```\n\n搜索文档:\n```java\n/**\n * 百科信息查询\n * \n * @param key 关键字\n * @param currentPage 页码\n * @return\n * @throws Exception\n */\npublic List<TermBaikeVo> queryBaike(String key, Integer currentPage) throws Exception {\n\tList<TermBaikeVo> termBaikeVoList = new ArrayList<TermBaikeVo>();\n\tSort sort = new Sort(new SortField(\"name\", SortField.Type.STRING, true));\n\tList<Document> docList = this.luceneService.query(ServiceTypeEnum.BAIKE.getKey(), key, \"name\", sort, currentPage, DEF_ENUM.DEF_TWENTY.getnCode());\n\tfor (Document doc : docList) {\n\t\tTermBaikeVo termBaikeVo = new TermBaikeVo();\n\t\ttermBaikeVo.setBaikeId(doc.get(\"id\"));\n\t\ttermBaikeVo.setVcName(doc.get(\"name\"));\n\t\ttermBaikeVo.setVcName(doc.get(\"nameEn\"));\n\t\ttermBaikeVo.setVcLabel(doc.get(\"label\"));\n\t\ttermBaikeVoList.add(termBaikeVo);\n\t}\n\treturn termBaikeVoList;\n}\n```\n\n调用的方法:\n\n```java\n/**\n* 单条件分页查询\n*/\npublic List<Document> query(Integer serviceType, String key, String field, Sort sort, Integer currentPage, Integer pageSize) throws Exception {\n\tList<Document> docList = new ArrayList<Document>();\n\tIndexReader reader = this.initIndexReader(serviceType);\n\ttry {\n\t\tAnalyzer analyzer = new StandardAnalyzer();\n\t\tIndexSearcher indexSearcher = new IndexSearcher(reader);\n\t\tQueryParser parser = new QueryParser(field, analyzer);\n\t\torg.apache.lucene.search.Query query = parser.createPhraseQuery(field, key);\n\t\tTopDocs topDocs = indexSearcher.search(query, currentPage + pageSize, sort);\n\t\tScoreDoc[] scoreDocs = topDocs.scoreDocs;\n\t\tif (scoreDocs.length == 0) {\n\t\t\tscoreDocs = this.wildcardQuery(key, field, indexSearcher);\n\t\t}\n\t\tint begin = pageSize * (currentPage - 1);\n\t\tint end = Math.min(begin + pageSize, scoreDocs.length);\n\t\tfor (int i = begin; i < end; i++) {\n\t\t\tint docID = scoreDocs[i].doc;\n\t\t\tDocument doc = indexSearcher.doc(docID);\n\t\t\tdocList.add(doc);\n\t\t}\n\t} catch (Exception e) {\n\t\tlogger.error(e);\n\t} finally {\n\t\tif (null != reader) {\n\t\t\treader.close();\n\t\t}\n\t}\n\treturn docList;\n}\n```\n\n\n","slug":"有关Lucene的一些东西","published":1,"updated":"2017-04-26T08:45:10.067Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc595i001hcoqhqzrapmks","content":"<p>因为项目中用到了Lucene,这里简单的说一下关于Lucene的一些东西.</p>\n<h2 id=\"大概介绍\"><a href=\"#大概介绍\" class=\"headerlink\" title=\"大概介绍\"></a>大概介绍</h2><p>Lucene 是一个基于 Java 的全文信息检索工具包，它不是一个完整的搜索应用程序，而是为你的应用程序提供索引和搜索功能。Lucene 目前是 Apache Jakarta 家族中的一个开源项目。也是较为流行的基于 Java 开源全文检索工具包。<br><a id=\"more\"></a><br>图 1 表示了搜索应用程序和 Lucene 之间的关系，也反映了利用 Lucene 构建搜索应用程序的流程：<br>图 1. 搜索应用程序和 Lucene 之间的关系<br><img src=\"/images/有关Lucene的一些东西001.jpg\" alt=\"搜索应用程序和 Lucene 之间的关系\"></p>\n<h2 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h2><p>举个例子,索引有点类似目录,就是什么内容,会告诉你在第几页，这样就能帮助读者比较快地找到相关内容的页码。<br>而数据库索引能够大大提高查询的速度原理也是一样，通过目录查找的速度要比一页一页地翻内容高多少倍……当然他还有另外一个原因是它是排好序的。对于检索系统来说核心是一个排序问题。<br>而数据库索引不是为全文索引设计的，因此，使用like数据库索引不是为全文索引设计的，因此，使用like “%keyword%”时，数据库索引是不起作用的，<br>在使用like查询时，搜索过程又变成类似于一页页翻书的遍历过程了，所以对于含有模糊查询的数据库服务来说，LIKE对性能的危害是极大的。<br>如果是需要对多个关键词进行模糊匹配：like”%keyword1%” and like “%keyword2%” …其效率也就可想而知了。</p>\n<p>所以建立一个高效检索系统的关键是建立一个类似于科技索引一样的反向索引机制，将数据源（比如多篇文章）排序顺序存储的同时，有另外一个排好序的关键词列表，<br>用于存储关键词==&gt;文章映射关系，利用这样的映射关系索引：[关键词==&gt;出现关键词的文章编号，出现次数（甚至包括位置：起始偏移量，结束偏移量），出现频率]，<br>检索过程就是把模糊查询变成多个可以利用索引的精确查询的逻辑组合的过程。从而大大提高了多关键词查询的效率，所以，全文检索问题归结到最后是一个排序问题。</p>\n<p>由此可以看出模糊查询相对数据库的精确查询是一个非常不确定的问题，这也是大部分数据库对全文检索支持有限的原因。<br>Lucene最核心的特征是通过特殊的索引结构实现了传统数据库不擅长的全文索引机制，并提供了扩展接口，以方便针对不同应用的定制。</p>\n<h2 id=\"lucene的一些包\"><a href=\"#lucene的一些包\" class=\"headerlink\" title=\"lucene的一些包\"></a>lucene的一些包</h2><p>org.apache.lucene.document:  存储结构<br>这个包提供了一些为封装要索引的文档所需要的类，比如 Document, Field。这样，每一个文档最终被封装成了一个 Document 对象。<br>org.apache.lucene.analysis: 语言分析器<br>这个包主要功能是对文档进行分词，因为文档在建立索引之前必须要进行分词，所以这个包的作用可以看成是为建立索引做准备工作。<br>org.apache.lucene.index: 索引入口<br>这个包提供了一些类来协助创建索引以及对创建好的索引进行更新。这里面有两个基础的类：IndexWriter 和 IndexReader，其中 IndexWriter 是用来创建索引并添加文档到索引中的，IndexReader 是用来删除索引中的文档的。<br>org.apache.lucene.search: 搜索入口<br>这个包提供了对在建立好的索引上进行搜索所需要的类。比如 IndexSearcher 和 Hits, IndexSearcher 定义了在指定的索引上进行搜索的方法，Hits 用来保存搜索得到的结果。<br>org.apache.Lucene.queryParser:    查询分析器<br>org.apache.Lucene.store: 底层IO/存储结构<br>org.apache.Lucene.util: 一些公用的数据结构<br>…</p>\n<h2 id=\"建立索引\"><a href=\"#建立索引\" class=\"headerlink\" title=\"建立索引\"></a>建立索引</h2><p>为了对文档进行索引，Lucene 提供了五个基础的类，他们分别是 Document, Field, IndexWriter, Analyzer, Directory。下面我们分别介绍一下这五个类的用途：<br>Document<br>Document 是用来描述文档的，这里的文档可以指一个 HTML 页面，一封电子邮件，或者是一个文本文件。一个 Document 对象由多个 Field 对象组成的。可以把一个 Document 对象想象成数据库中的一个记录，而每个 Field 对象就是记录的一个字段。<br>Field<br>Field 对象是用来描述一个文档的某个属性的，比如一封电子邮件的标题和内容可以用两个 Field 对象分别描述。<br>Analyzer<br>在一个文档被索引之前，首先需要对文档内容进行分词处理，这部分工作就是由 Analyzer 来做的。Analyzer 类是一个抽象类，它有多个实现。针对不同的语言和应用需要选择适合的 Analyzer。Analyzer 把分词后的内容交给 IndexWriter 来建立索引。<br>IndexWriter<br>IndexWriter 是 Lucene 用来创建索引的一个核心的类，他的作用是把一个个的 Document 对象加到索引中来。<br>Directory<br>这个类代表了 Lucene 的索引的存储的位置，这是一个抽象类，它目前有两个实现，第一个是 FSDirectory，它表示一个存储在文件系统中的索引的位置。第二个是 RAMDirectory，它表示一个存储在内存当中的索引的位置。<br>熟悉了建立索引所需要的这些类后，我们就开始对某个目录下面的文本文件建立索引了，清单 1 给出了对某个目录下的文本文件建立索引的源代码。</p>\n<h2 id=\"搜索文档\"><a href=\"#搜索文档\" class=\"headerlink\" title=\"搜索文档\"></a>搜索文档</h2><p>利用 Lucene 进行搜索就像建立索引一样也是非常方便的。在上面一部分中，我们已经为一个目录下的文本文档建立好了索引，现在我们就要在这个索引上进行搜索以找到包含某个关键词或短语的文档。Lucene 提供了几个基础的类来完成这个过程，它们分别是呢 IndexSearcher, Term, Query, TermQuery, Hits. 下面我们分别介绍这几个类的功能。<br>Query<br>这是一个抽象类，他有多个实现，比如 TermQuery, BooleanQuery, PrefixQuery. 这个类的目的是把用户输入的查询字符串封装成 Lucene 能够识别的 Query。<br>Term<br>Term 是搜索的基本单位，一个 Term 对象有两个 String 类型的域组成。生成一个 Term 对象可以有如下一条语句来完成：Term term = new Term(“fieldName”,”queryWord”); 其中第一个参数代表了要在文档的哪一个 Field 上进行查找，第二个参数代表了要查询的关键词。<br>TermQuery<br>TermQuery 是抽象类 Query 的一个子类，它同时也是 Lucene 支持的最为基本的一个查询类。生成一个 TermQuery 对象由如下语句完成： TermQuery termQuery = new TermQuery(new Term(“fieldName”,”queryWord”)); 它的构造函数只接受一个参数，那就是一个 Term 对象。<br>IndexSearcher<br>IndexSearcher 是用来在建立好的索引上进行搜索的。它只能以只读的方式打开一个索引，所以可以有多个 IndexSearcher 的实例在一个索引上进行操作。<br>TopDocs<br>TopDocs 是用来保存搜索的结果的。</p>\n<h2 id=\"项目使用总结\"><a href=\"#项目使用总结\" class=\"headerlink\" title=\"项目使用总结\"></a>项目使用总结</h2><p>现在的项目是这样使用Lucene的:<br>import jar-&gt;用job初始化待查询数据(建立索引)-&gt;查询返回(搜索文档),因为Lucene有很简单的api,这里就不细说了,结尾附上大致的代码例子:</p>\n<h2 id=\"一个例子\"><a href=\"#一个例子\" class=\"headerlink\" title=\"一个例子\"></a>一个例子</h2><p>创建索引:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 处理百科信息</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">procAllForTermBaike</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\tList&lt;Map&lt;String, String&gt;&gt; baikeList = <span class=\"keyword\">new</span> ArrayList&lt;Map&lt;String, String&gt;&gt;();</div><div class=\"line\">\tQuery&lt;TermBaike&gt; query = <span class=\"keyword\">this</span>.createQuery();</div><div class=\"line\">\t<span class=\"keyword\">long</span> counts = <span class=\"keyword\">this</span>.count(query);</div><div class=\"line\">\tInteger pages = <span class=\"keyword\">this</span>.luceneService.getPages(Integer.valueOf(String.valueOf(counts)));</div><div class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pages; i++) &#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 查询获取数据</span></div><div class=\"line\">\t\tquery.offset((i - <span class=\"number\">1</span>) * <span class=\"number\">100</span>).limit(<span class=\"number\">100</span>);</div><div class=\"line\">\t\tQueryResults&lt;TermBaike&gt; result = <span class=\"keyword\">this</span>.find(query);</div><div class=\"line\">\t\tList&lt;TermBaike&gt; TermBaikeList = result.asList();</div><div class=\"line\">\t\t<span class=\"comment\">// 封装返回数据</span></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (TermBaike termBaike : TermBaikeList) &#123;</div><div class=\"line\">\t\t\tMap&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;String, String&gt;();</div><div class=\"line\">\t\t\tmap.put(<span class=\"string\">\"id\"</span>, termBaike.get_id());</div><div class=\"line\">\t\t\tmap.put(<span class=\"string\">\"name\"</span>, termBaike.getVcName());</div><div class=\"line\">\t\t\tmap.put(<span class=\"string\">\"nameEn\"</span>, termBaike.getVcNameEn());</div><div class=\"line\">\t\t\tmap.put(<span class=\"string\">\"label\"</span>, String.valueOf(ServiceTypeEnum.BAIKE_LAB.getValue()));</div><div class=\"line\">\t\t\tbaikeList.add(map);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.luceneService.createIndex(ServiceTypeEnum.BAIKE.getKey(), baikeList, Boolean.TRUE);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>…job相关的代码就不放上来了,就是用job跑这个procxxx方法</p>\n<p>调用的方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 获取页数</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getPages</span><span class=\"params\">(Integer totalNum)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\tInteger pages = <span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span> ((totalNum % <span class=\"number\">100</span>) == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\tpages = totalNum / <span class=\"number\">100</span>;</div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\tpages = (totalNum / <span class=\"number\">100</span>) + <span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> pages;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 创建索引</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createIndex</span><span class=\"params\">(Integer serviceType, List&lt;Map&lt;String, String&gt;&gt; list, Boolean isDel)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\tIndexWriter indexWriter = <span class=\"keyword\">this</span>.initIndexWriter(serviceType, isDel);</div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Map&lt;String, String&gt; map : list) &#123;</div><div class=\"line\">\t\t\tDocument doc = <span class=\"keyword\">new</span> Document();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Map.Entry&lt;String, String&gt; entry : map.entrySet()) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != entry.getKey() &amp;&amp; <span class=\"keyword\">null</span> != entry.getValue()) &#123;</div><div class=\"line\">\t\t\t\t\tdoc.add(<span class=\"keyword\">new</span> TextField(entry.getKey(), entry.getValue(), Field.Store.YES));</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tindexWriter.addDocument(doc);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\tlogger.error(e);</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != indexWriter) &#123;</div><div class=\"line\">\t\t\tindexWriter.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>搜索文档:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 百科信息查询</div><div class=\"line\"> * </div><div class=\"line\"> * <span class=\"doctag\">@param</span> key 关键字</div><div class=\"line\"> * <span class=\"doctag\">@param</span> currentPage 页码</div><div class=\"line\"> * <span class=\"doctag\">@return</span></div><div class=\"line\"> * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;TermBaikeVo&gt; <span class=\"title\">queryBaike</span><span class=\"params\">(String key, Integer currentPage)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\tList&lt;TermBaikeVo&gt; termBaikeVoList = <span class=\"keyword\">new</span> ArrayList&lt;TermBaikeVo&gt;();</div><div class=\"line\">\tSort sort = <span class=\"keyword\">new</span> Sort(<span class=\"keyword\">new</span> SortField(<span class=\"string\">\"name\"</span>, SortField.Type.STRING, <span class=\"keyword\">true</span>));</div><div class=\"line\">\tList&lt;Document&gt; docList = <span class=\"keyword\">this</span>.luceneService.query(ServiceTypeEnum.BAIKE.getKey(), key, <span class=\"string\">\"name\"</span>, sort, currentPage, DEF_ENUM.DEF_TWENTY.getnCode());</div><div class=\"line\">\t<span class=\"keyword\">for</span> (Document doc : docList) &#123;</div><div class=\"line\">\t\tTermBaikeVo termBaikeVo = <span class=\"keyword\">new</span> TermBaikeVo();</div><div class=\"line\">\t\ttermBaikeVo.setBaikeId(doc.get(<span class=\"string\">\"id\"</span>));</div><div class=\"line\">\t\ttermBaikeVo.setVcName(doc.get(<span class=\"string\">\"name\"</span>));</div><div class=\"line\">\t\ttermBaikeVo.setVcName(doc.get(<span class=\"string\">\"nameEn\"</span>));</div><div class=\"line\">\t\ttermBaikeVo.setVcLabel(doc.get(<span class=\"string\">\"label\"</span>));</div><div class=\"line\">\t\ttermBaikeVoList.add(termBaikeVo);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> termBaikeVoList;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>调用的方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\">* 单条件分页查询</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;Document&gt; <span class=\"title\">query</span><span class=\"params\">(Integer serviceType, String key, String field, Sort sort, Integer currentPage, Integer pageSize)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\tList&lt;Document&gt; docList = <span class=\"keyword\">new</span> ArrayList&lt;Document&gt;();</div><div class=\"line\">\tIndexReader reader = <span class=\"keyword\">this</span>.initIndexReader(serviceType);</div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\tAnalyzer analyzer = <span class=\"keyword\">new</span> StandardAnalyzer();</div><div class=\"line\">\t\tIndexSearcher indexSearcher = <span class=\"keyword\">new</span> IndexSearcher(reader);</div><div class=\"line\">\t\tQueryParser parser = <span class=\"keyword\">new</span> QueryParser(field, analyzer);</div><div class=\"line\">\t\torg.apache.lucene.search.Query query = parser.createPhraseQuery(field, key);</div><div class=\"line\">\t\tTopDocs topDocs = indexSearcher.search(query, currentPage + pageSize, sort);</div><div class=\"line\">\t\tScoreDoc[] scoreDocs = topDocs.scoreDocs;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (scoreDocs.length == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\tscoreDocs = <span class=\"keyword\">this</span>.wildcardQuery(key, field, indexSearcher);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> begin = pageSize * (currentPage - <span class=\"number\">1</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> end = Math.min(begin + pageSize, scoreDocs.length);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = begin; i &lt; end; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> docID = scoreDocs[i].doc;</div><div class=\"line\">\t\t\tDocument doc = indexSearcher.doc(docID);</div><div class=\"line\">\t\t\tdocList.add(doc);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\tlogger.error(e);</div><div class=\"line\">\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != reader) &#123;</div><div class=\"line\">\t\t\treader.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> docList;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<p>因为项目中用到了Lucene,这里简单的说一下关于Lucene的一些东西.</p>\n<h2 id=\"大概介绍\"><a href=\"#大概介绍\" class=\"headerlink\" title=\"大概介绍\"></a>大概介绍</h2><p>Lucene 是一个基于 Java 的全文信息检索工具包，它不是一个完整的搜索应用程序，而是为你的应用程序提供索引和搜索功能。Lucene 目前是 Apache Jakarta 家族中的一个开源项目。也是较为流行的基于 Java 开源全文检索工具包。<br>","more":"<br>图 1 表示了搜索应用程序和 Lucene 之间的关系，也反映了利用 Lucene 构建搜索应用程序的流程：<br>图 1. 搜索应用程序和 Lucene 之间的关系<br><img src=\"/images/有关Lucene的一些东西001.jpg\" alt=\"搜索应用程序和 Lucene 之间的关系\"></p>\n<h2 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h2><p>举个例子,索引有点类似目录,就是什么内容,会告诉你在第几页，这样就能帮助读者比较快地找到相关内容的页码。<br>而数据库索引能够大大提高查询的速度原理也是一样，通过目录查找的速度要比一页一页地翻内容高多少倍……当然他还有另外一个原因是它是排好序的。对于检索系统来说核心是一个排序问题。<br>而数据库索引不是为全文索引设计的，因此，使用like数据库索引不是为全文索引设计的，因此，使用like “%keyword%”时，数据库索引是不起作用的，<br>在使用like查询时，搜索过程又变成类似于一页页翻书的遍历过程了，所以对于含有模糊查询的数据库服务来说，LIKE对性能的危害是极大的。<br>如果是需要对多个关键词进行模糊匹配：like”%keyword1%” and like “%keyword2%” …其效率也就可想而知了。</p>\n<p>所以建立一个高效检索系统的关键是建立一个类似于科技索引一样的反向索引机制，将数据源（比如多篇文章）排序顺序存储的同时，有另外一个排好序的关键词列表，<br>用于存储关键词==&gt;文章映射关系，利用这样的映射关系索引：[关键词==&gt;出现关键词的文章编号，出现次数（甚至包括位置：起始偏移量，结束偏移量），出现频率]，<br>检索过程就是把模糊查询变成多个可以利用索引的精确查询的逻辑组合的过程。从而大大提高了多关键词查询的效率，所以，全文检索问题归结到最后是一个排序问题。</p>\n<p>由此可以看出模糊查询相对数据库的精确查询是一个非常不确定的问题，这也是大部分数据库对全文检索支持有限的原因。<br>Lucene最核心的特征是通过特殊的索引结构实现了传统数据库不擅长的全文索引机制，并提供了扩展接口，以方便针对不同应用的定制。</p>\n<h2 id=\"lucene的一些包\"><a href=\"#lucene的一些包\" class=\"headerlink\" title=\"lucene的一些包\"></a>lucene的一些包</h2><p>org.apache.lucene.document:  存储结构<br>这个包提供了一些为封装要索引的文档所需要的类，比如 Document, Field。这样，每一个文档最终被封装成了一个 Document 对象。<br>org.apache.lucene.analysis: 语言分析器<br>这个包主要功能是对文档进行分词，因为文档在建立索引之前必须要进行分词，所以这个包的作用可以看成是为建立索引做准备工作。<br>org.apache.lucene.index: 索引入口<br>这个包提供了一些类来协助创建索引以及对创建好的索引进行更新。这里面有两个基础的类：IndexWriter 和 IndexReader，其中 IndexWriter 是用来创建索引并添加文档到索引中的，IndexReader 是用来删除索引中的文档的。<br>org.apache.lucene.search: 搜索入口<br>这个包提供了对在建立好的索引上进行搜索所需要的类。比如 IndexSearcher 和 Hits, IndexSearcher 定义了在指定的索引上进行搜索的方法，Hits 用来保存搜索得到的结果。<br>org.apache.Lucene.queryParser:    查询分析器<br>org.apache.Lucene.store: 底层IO/存储结构<br>org.apache.Lucene.util: 一些公用的数据结构<br>…</p>\n<h2 id=\"建立索引\"><a href=\"#建立索引\" class=\"headerlink\" title=\"建立索引\"></a>建立索引</h2><p>为了对文档进行索引，Lucene 提供了五个基础的类，他们分别是 Document, Field, IndexWriter, Analyzer, Directory。下面我们分别介绍一下这五个类的用途：<br>Document<br>Document 是用来描述文档的，这里的文档可以指一个 HTML 页面，一封电子邮件，或者是一个文本文件。一个 Document 对象由多个 Field 对象组成的。可以把一个 Document 对象想象成数据库中的一个记录，而每个 Field 对象就是记录的一个字段。<br>Field<br>Field 对象是用来描述一个文档的某个属性的，比如一封电子邮件的标题和内容可以用两个 Field 对象分别描述。<br>Analyzer<br>在一个文档被索引之前，首先需要对文档内容进行分词处理，这部分工作就是由 Analyzer 来做的。Analyzer 类是一个抽象类，它有多个实现。针对不同的语言和应用需要选择适合的 Analyzer。Analyzer 把分词后的内容交给 IndexWriter 来建立索引。<br>IndexWriter<br>IndexWriter 是 Lucene 用来创建索引的一个核心的类，他的作用是把一个个的 Document 对象加到索引中来。<br>Directory<br>这个类代表了 Lucene 的索引的存储的位置，这是一个抽象类，它目前有两个实现，第一个是 FSDirectory，它表示一个存储在文件系统中的索引的位置。第二个是 RAMDirectory，它表示一个存储在内存当中的索引的位置。<br>熟悉了建立索引所需要的这些类后，我们就开始对某个目录下面的文本文件建立索引了，清单 1 给出了对某个目录下的文本文件建立索引的源代码。</p>\n<h2 id=\"搜索文档\"><a href=\"#搜索文档\" class=\"headerlink\" title=\"搜索文档\"></a>搜索文档</h2><p>利用 Lucene 进行搜索就像建立索引一样也是非常方便的。在上面一部分中，我们已经为一个目录下的文本文档建立好了索引，现在我们就要在这个索引上进行搜索以找到包含某个关键词或短语的文档。Lucene 提供了几个基础的类来完成这个过程，它们分别是呢 IndexSearcher, Term, Query, TermQuery, Hits. 下面我们分别介绍这几个类的功能。<br>Query<br>这是一个抽象类，他有多个实现，比如 TermQuery, BooleanQuery, PrefixQuery. 这个类的目的是把用户输入的查询字符串封装成 Lucene 能够识别的 Query。<br>Term<br>Term 是搜索的基本单位，一个 Term 对象有两个 String 类型的域组成。生成一个 Term 对象可以有如下一条语句来完成：Term term = new Term(“fieldName”,”queryWord”); 其中第一个参数代表了要在文档的哪一个 Field 上进行查找，第二个参数代表了要查询的关键词。<br>TermQuery<br>TermQuery 是抽象类 Query 的一个子类，它同时也是 Lucene 支持的最为基本的一个查询类。生成一个 TermQuery 对象由如下语句完成： TermQuery termQuery = new TermQuery(new Term(“fieldName”,”queryWord”)); 它的构造函数只接受一个参数，那就是一个 Term 对象。<br>IndexSearcher<br>IndexSearcher 是用来在建立好的索引上进行搜索的。它只能以只读的方式打开一个索引，所以可以有多个 IndexSearcher 的实例在一个索引上进行操作。<br>TopDocs<br>TopDocs 是用来保存搜索的结果的。</p>\n<h2 id=\"项目使用总结\"><a href=\"#项目使用总结\" class=\"headerlink\" title=\"项目使用总结\"></a>项目使用总结</h2><p>现在的项目是这样使用Lucene的:<br>import jar-&gt;用job初始化待查询数据(建立索引)-&gt;查询返回(搜索文档),因为Lucene有很简单的api,这里就不细说了,结尾附上大致的代码例子:</p>\n<h2 id=\"一个例子\"><a href=\"#一个例子\" class=\"headerlink\" title=\"一个例子\"></a>一个例子</h2><p>创建索引:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 处理百科信息</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">procAllForTermBaike</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\tList&lt;Map&lt;String, String&gt;&gt; baikeList = <span class=\"keyword\">new</span> ArrayList&lt;Map&lt;String, String&gt;&gt;();</div><div class=\"line\">\tQuery&lt;TermBaike&gt; query = <span class=\"keyword\">this</span>.createQuery();</div><div class=\"line\">\t<span class=\"keyword\">long</span> counts = <span class=\"keyword\">this</span>.count(query);</div><div class=\"line\">\tInteger pages = <span class=\"keyword\">this</span>.luceneService.getPages(Integer.valueOf(String.valueOf(counts)));</div><div class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pages; i++) &#123;</div><div class=\"line\">\t\t<span class=\"comment\">// 查询获取数据</span></div><div class=\"line\">\t\tquery.offset((i - <span class=\"number\">1</span>) * <span class=\"number\">100</span>).limit(<span class=\"number\">100</span>);</div><div class=\"line\">\t\tQueryResults&lt;TermBaike&gt; result = <span class=\"keyword\">this</span>.find(query);</div><div class=\"line\">\t\tList&lt;TermBaike&gt; TermBaikeList = result.asList();</div><div class=\"line\">\t\t<span class=\"comment\">// 封装返回数据</span></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (TermBaike termBaike : TermBaikeList) &#123;</div><div class=\"line\">\t\t\tMap&lt;String, String&gt; map = <span class=\"keyword\">new</span> HashMap&lt;String, String&gt;();</div><div class=\"line\">\t\t\tmap.put(<span class=\"string\">\"id\"</span>, termBaike.get_id());</div><div class=\"line\">\t\t\tmap.put(<span class=\"string\">\"name\"</span>, termBaike.getVcName());</div><div class=\"line\">\t\t\tmap.put(<span class=\"string\">\"nameEn\"</span>, termBaike.getVcNameEn());</div><div class=\"line\">\t\t\tmap.put(<span class=\"string\">\"label\"</span>, String.valueOf(ServiceTypeEnum.BAIKE_LAB.getValue()));</div><div class=\"line\">\t\t\tbaikeList.add(map);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.luceneService.createIndex(ServiceTypeEnum.BAIKE.getKey(), baikeList, Boolean.TRUE);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>…job相关的代码就不放上来了,就是用job跑这个procxxx方法</p>\n<p>调用的方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 获取页数</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getPages</span><span class=\"params\">(Integer totalNum)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\tInteger pages = <span class=\"number\">1</span>;</div><div class=\"line\">\t<span class=\"keyword\">if</span> ((totalNum % <span class=\"number\">100</span>) == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\tpages = totalNum / <span class=\"number\">100</span>;</div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\tpages = (totalNum / <span class=\"number\">100</span>) + <span class=\"number\">1</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> pages;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 创建索引</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">createIndex</span><span class=\"params\">(Integer serviceType, List&lt;Map&lt;String, String&gt;&gt; list, Boolean isDel)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\tIndexWriter indexWriter = <span class=\"keyword\">this</span>.initIndexWriter(serviceType, isDel);</div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Map&lt;String, String&gt; map : list) &#123;</div><div class=\"line\">\t\t\tDocument doc = <span class=\"keyword\">new</span> Document();</div><div class=\"line\">\t\t\t<span class=\"keyword\">for</span> (Map.Entry&lt;String, String&gt; entry : map.entrySet()) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != entry.getKey() &amp;&amp; <span class=\"keyword\">null</span> != entry.getValue()) &#123;</div><div class=\"line\">\t\t\t\t\tdoc.add(<span class=\"keyword\">new</span> TextField(entry.getKey(), entry.getValue(), Field.Store.YES));</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tindexWriter.addDocument(doc);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\tlogger.error(e);</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != indexWriter) &#123;</div><div class=\"line\">\t\t\tindexWriter.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>搜索文档:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 百科信息查询</div><div class=\"line\"> * </div><div class=\"line\"> * <span class=\"doctag\">@param</span> key 关键字</div><div class=\"line\"> * <span class=\"doctag\">@param</span> currentPage 页码</div><div class=\"line\"> * <span class=\"doctag\">@return</span></div><div class=\"line\"> * <span class=\"doctag\">@throws</span> Exception</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;TermBaikeVo&gt; <span class=\"title\">queryBaike</span><span class=\"params\">(String key, Integer currentPage)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\tList&lt;TermBaikeVo&gt; termBaikeVoList = <span class=\"keyword\">new</span> ArrayList&lt;TermBaikeVo&gt;();</div><div class=\"line\">\tSort sort = <span class=\"keyword\">new</span> Sort(<span class=\"keyword\">new</span> SortField(<span class=\"string\">\"name\"</span>, SortField.Type.STRING, <span class=\"keyword\">true</span>));</div><div class=\"line\">\tList&lt;Document&gt; docList = <span class=\"keyword\">this</span>.luceneService.query(ServiceTypeEnum.BAIKE.getKey(), key, <span class=\"string\">\"name\"</span>, sort, currentPage, DEF_ENUM.DEF_TWENTY.getnCode());</div><div class=\"line\">\t<span class=\"keyword\">for</span> (Document doc : docList) &#123;</div><div class=\"line\">\t\tTermBaikeVo termBaikeVo = <span class=\"keyword\">new</span> TermBaikeVo();</div><div class=\"line\">\t\ttermBaikeVo.setBaikeId(doc.get(<span class=\"string\">\"id\"</span>));</div><div class=\"line\">\t\ttermBaikeVo.setVcName(doc.get(<span class=\"string\">\"name\"</span>));</div><div class=\"line\">\t\ttermBaikeVo.setVcName(doc.get(<span class=\"string\">\"nameEn\"</span>));</div><div class=\"line\">\t\ttermBaikeVo.setVcLabel(doc.get(<span class=\"string\">\"label\"</span>));</div><div class=\"line\">\t\ttermBaikeVoList.add(termBaikeVo);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> termBaikeVoList;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>调用的方法:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\">* 单条件分页查询</div><div class=\"line\">*/</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;Document&gt; <span class=\"title\">query</span><span class=\"params\">(Integer serviceType, String key, String field, Sort sort, Integer currentPage, Integer pageSize)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</div><div class=\"line\">\tList&lt;Document&gt; docList = <span class=\"keyword\">new</span> ArrayList&lt;Document&gt;();</div><div class=\"line\">\tIndexReader reader = <span class=\"keyword\">this</span>.initIndexReader(serviceType);</div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\tAnalyzer analyzer = <span class=\"keyword\">new</span> StandardAnalyzer();</div><div class=\"line\">\t\tIndexSearcher indexSearcher = <span class=\"keyword\">new</span> IndexSearcher(reader);</div><div class=\"line\">\t\tQueryParser parser = <span class=\"keyword\">new</span> QueryParser(field, analyzer);</div><div class=\"line\">\t\torg.apache.lucene.search.Query query = parser.createPhraseQuery(field, key);</div><div class=\"line\">\t\tTopDocs topDocs = indexSearcher.search(query, currentPage + pageSize, sort);</div><div class=\"line\">\t\tScoreDoc[] scoreDocs = topDocs.scoreDocs;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (scoreDocs.length == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t\tscoreDocs = <span class=\"keyword\">this</span>.wildcardQuery(key, field, indexSearcher);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> begin = pageSize * (currentPage - <span class=\"number\">1</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> end = Math.min(begin + pageSize, scoreDocs.length);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = begin; i &lt; end; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">int</span> docID = scoreDocs[i].doc;</div><div class=\"line\">\t\t\tDocument doc = indexSearcher.doc(docID);</div><div class=\"line\">\t\t\tdocList.add(doc);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t\tlogger.error(e);</div><div class=\"line\">\t&#125; <span class=\"keyword\">finally</span> &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> != reader) &#123;</div><div class=\"line\">\t\t\treader.close();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"keyword\">return</span> docList;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"Linux日常记录","date":"2017-03-27T09:37:05.000Z","_content":"\n- linux开机启动服务目录:/etc/init.d\n\n- 启动redis客户端:/usr/local/redis-3.2.4/src/redis-cli \n\n- Linux下剪切拷贝命令\n\n命令格式: mv   source    dest\n\nmv: 命令字 source: 源文件 dest: 目的地址\n<!-- more --> \n\n- Linux下拷贝命令\n\n命令格式：cp  [-rf]  source  dest\n\n使用备注：源文件在前，目标文件在后。\n\n参数说明：\n\n-r  若 source 中含有目录，则将目录下之档案亦皆依序拷贝至目的地。\n-f  若目的地已经有相同档名的档案存在，则在复制前先予以删除再行复制。\n\n- 删除命令\n\n1、删除home目录下的test目录\n\n rm /home/test\n\n2、这种不带参数的删除方法经常会提示无法删除，因为权限不够。\n\n rm -r /home/test\n\n3、-r是递归的删除参数表中的目录及其子目录。 目录将被清空并且删除。 当删除目录包含的具有写保护的文件时用户通常是被提示的。\n\nrm -rf /home/test\n\n4、f是不提示用户，删除目录下的所有文件。请注意检查路径，输成别的目录就悲剧了。\n\n rm -ir /home/test\n\n5、-i是交互模式。使用这个选项，rm命令在删除任何文件前提示用户确认。\n\n6、tail -f xxxx.xxx 打开文件持续输出(看实时日志)\n\n- Yum软件仓库\n\n|命令|\t作用|\n| ---- | ---- |\n|yum r...epolist all|\t列出所有仓库。|\n|yum list all|\t列出仓库中所有软件包|\n|yum info 软件包名称|\t查看软件包信息|\n|yum install 软件包名称|\t安装软件包|\n|yum reinstall 软件包名称|\t重新安装软件包|\n|yum update 软件包名称|\t升级软件包|\n|yum remove 软件包|\t移除软件包|\n|yum clean all|\t清除所有仓库缓存|\n|yum check-update|\t检查可更新的软件包|\n|yum grouplist|\t查看系统中已经安装的软件包组|\n|yum groupinstall 软件包组|\t安装指定的软件包组|\n|yum groupremove软件包组\t|移除指定的软件包组|\n|yum groupinfo 软件包组|\t查询指定的软件包组信息|\n\n\n- systemctl管理服务的启动、重启、停止、重载、查看状态的命令：\n\n|Sysvinit命令(红帽RHEL6系统)\t|Systemctl命令（红帽RHEL7系统）\t|作用|\n|---|---|---|\n|service foo start\t|systemctl start foo.service\t|启动服务|\n|service foo restart\t|systemctl restart foo.service\t|重启服务|\n|service foo stop\t|systemctl stop foo.service\t|停止服务|\n|service foo reload\t|systemctl reload foo.service\t|重新加载配置文件（不终止服务）|\n|service foo status\t|systemctl status foo.service\t|查看服务状态|\n\n- systemctl设置服务的开机启动、不启动、查看各级别下服务启动状态的命令：\n\n|Sysvinit命令(红帽RHEL6系统)\t|Systemctl命令（红帽RHEL7系统）\t|作用|\n|---|---|---|\n|chkconfig foo on\t|systemctl enable foo.service\t|开机自动启动|\n|chkconfig foo off\t|systemctl disable foo.service\t|开机不自动启动|\n|chkconfig foo\t|systemctl is-enabled foo.service\t|查看特定服务是否为开机自启动|\n|chkconfig --list\t|systemctl list-unit-files --type=service\t|查看各个级别下服务的启动与禁用情况|\n\n","source":"_posts/Linux日常记录.md","raw":"---\ntitle: Linux日常记录\ndate: 2017-03-27 17:37:05\ntags: linux\ncategories: 技术\n---\n\n- linux开机启动服务目录:/etc/init.d\n\n- 启动redis客户端:/usr/local/redis-3.2.4/src/redis-cli \n\n- Linux下剪切拷贝命令\n\n命令格式: mv   source    dest\n\nmv: 命令字 source: 源文件 dest: 目的地址\n<!-- more --> \n\n- Linux下拷贝命令\n\n命令格式：cp  [-rf]  source  dest\n\n使用备注：源文件在前，目标文件在后。\n\n参数说明：\n\n-r  若 source 中含有目录，则将目录下之档案亦皆依序拷贝至目的地。\n-f  若目的地已经有相同档名的档案存在，则在复制前先予以删除再行复制。\n\n- 删除命令\n\n1、删除home目录下的test目录\n\n rm /home/test\n\n2、这种不带参数的删除方法经常会提示无法删除，因为权限不够。\n\n rm -r /home/test\n\n3、-r是递归的删除参数表中的目录及其子目录。 目录将被清空并且删除。 当删除目录包含的具有写保护的文件时用户通常是被提示的。\n\nrm -rf /home/test\n\n4、f是不提示用户，删除目录下的所有文件。请注意检查路径，输成别的目录就悲剧了。\n\n rm -ir /home/test\n\n5、-i是交互模式。使用这个选项，rm命令在删除任何文件前提示用户确认。\n\n6、tail -f xxxx.xxx 打开文件持续输出(看实时日志)\n\n- Yum软件仓库\n\n|命令|\t作用|\n| ---- | ---- |\n|yum r...epolist all|\t列出所有仓库。|\n|yum list all|\t列出仓库中所有软件包|\n|yum info 软件包名称|\t查看软件包信息|\n|yum install 软件包名称|\t安装软件包|\n|yum reinstall 软件包名称|\t重新安装软件包|\n|yum update 软件包名称|\t升级软件包|\n|yum remove 软件包|\t移除软件包|\n|yum clean all|\t清除所有仓库缓存|\n|yum check-update|\t检查可更新的软件包|\n|yum grouplist|\t查看系统中已经安装的软件包组|\n|yum groupinstall 软件包组|\t安装指定的软件包组|\n|yum groupremove软件包组\t|移除指定的软件包组|\n|yum groupinfo 软件包组|\t查询指定的软件包组信息|\n\n\n- systemctl管理服务的启动、重启、停止、重载、查看状态的命令：\n\n|Sysvinit命令(红帽RHEL6系统)\t|Systemctl命令（红帽RHEL7系统）\t|作用|\n|---|---|---|\n|service foo start\t|systemctl start foo.service\t|启动服务|\n|service foo restart\t|systemctl restart foo.service\t|重启服务|\n|service foo stop\t|systemctl stop foo.service\t|停止服务|\n|service foo reload\t|systemctl reload foo.service\t|重新加载配置文件（不终止服务）|\n|service foo status\t|systemctl status foo.service\t|查看服务状态|\n\n- systemctl设置服务的开机启动、不启动、查看各级别下服务启动状态的命令：\n\n|Sysvinit命令(红帽RHEL6系统)\t|Systemctl命令（红帽RHEL7系统）\t|作用|\n|---|---|---|\n|chkconfig foo on\t|systemctl enable foo.service\t|开机自动启动|\n|chkconfig foo off\t|systemctl disable foo.service\t|开机不自动启动|\n|chkconfig foo\t|systemctl is-enabled foo.service\t|查看特定服务是否为开机自启动|\n|chkconfig --list\t|systemctl list-unit-files --type=service\t|查看各个级别下服务的启动与禁用情况|\n\n","slug":"Linux日常记录","published":1,"updated":"2017-06-15T03:02:33.678Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj4pc595l001lcoqhzhyc2k0q","content":"<ul>\n<li><p>linux开机启动服务目录:/etc/init.d</p>\n</li>\n<li><p>启动redis客户端:/usr/local/redis-3.2.4/src/redis-cli </p>\n</li>\n<li><p>Linux下剪切拷贝命令</p>\n</li>\n</ul>\n<p>命令格式: mv   source    dest</p>\n<p>mv: 命令字 source: 源文件 dest: 目的地址<br><a id=\"more\"></a> </p>\n<ul>\n<li>Linux下拷贝命令</li>\n</ul>\n<p>命令格式：cp  [-rf]  source  dest</p>\n<p>使用备注：源文件在前，目标文件在后。</p>\n<p>参数说明：</p>\n<p>-r  若 source 中含有目录，则将目录下之档案亦皆依序拷贝至目的地。<br>-f  若目的地已经有相同档名的档案存在，则在复制前先予以删除再行复制。</p>\n<ul>\n<li>删除命令</li>\n</ul>\n<p>1、删除home目录下的test目录</p>\n<p> rm /home/test</p>\n<p>2、这种不带参数的删除方法经常会提示无法删除，因为权限不够。</p>\n<p> rm -r /home/test</p>\n<p>3、-r是递归的删除参数表中的目录及其子目录。 目录将被清空并且删除。 当删除目录包含的具有写保护的文件时用户通常是被提示的。</p>\n<p>rm -rf /home/test</p>\n<p>4、f是不提示用户，删除目录下的所有文件。请注意检查路径，输成别的目录就悲剧了。</p>\n<p> rm -ir /home/test</p>\n<p>5、-i是交互模式。使用这个选项，rm命令在删除任何文件前提示用户确认。</p>\n<p>6、tail -f xxxx.xxx 打开文件持续输出(看实时日志)</p>\n<ul>\n<li>Yum软件仓库</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>yum r…epolist all</td>\n<td>列出所有仓库。</td>\n</tr>\n<tr>\n<td>yum list all</td>\n<td>列出仓库中所有软件包</td>\n</tr>\n<tr>\n<td>yum info 软件包名称</td>\n<td>查看软件包信息</td>\n</tr>\n<tr>\n<td>yum install 软件包名称</td>\n<td>安装软件包</td>\n</tr>\n<tr>\n<td>yum reinstall 软件包名称</td>\n<td>重新安装软件包</td>\n</tr>\n<tr>\n<td>yum update 软件包名称</td>\n<td>升级软件包</td>\n</tr>\n<tr>\n<td>yum remove 软件包</td>\n<td>移除软件包</td>\n</tr>\n<tr>\n<td>yum clean all</td>\n<td>清除所有仓库缓存</td>\n</tr>\n<tr>\n<td>yum check-update</td>\n<td>检查可更新的软件包</td>\n</tr>\n<tr>\n<td>yum grouplist</td>\n<td>查看系统中已经安装的软件包组</td>\n</tr>\n<tr>\n<td>yum groupinstall 软件包组</td>\n<td>安装指定的软件包组</td>\n</tr>\n<tr>\n<td>yum groupremove软件包组</td>\n<td>移除指定的软件包组</td>\n</tr>\n<tr>\n<td>yum groupinfo 软件包组</td>\n<td>查询指定的软件包组信息</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>systemctl管理服务的启动、重启、停止、重载、查看状态的命令：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Sysvinit命令(红帽RHEL6系统)</th>\n<th>Systemctl命令（红帽RHEL7系统）</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>service foo start</td>\n<td>systemctl start foo.service</td>\n<td>启动服务</td>\n</tr>\n<tr>\n<td>service foo restart</td>\n<td>systemctl restart foo.service</td>\n<td>重启服务</td>\n</tr>\n<tr>\n<td>service foo stop</td>\n<td>systemctl stop foo.service</td>\n<td>停止服务</td>\n</tr>\n<tr>\n<td>service foo reload</td>\n<td>systemctl reload foo.service</td>\n<td>重新加载配置文件（不终止服务）</td>\n</tr>\n<tr>\n<td>service foo status</td>\n<td>systemctl status foo.service</td>\n<td>查看服务状态</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>systemctl设置服务的开机启动、不启动、查看各级别下服务启动状态的命令：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Sysvinit命令(红帽RHEL6系统)</th>\n<th>Systemctl命令（红帽RHEL7系统）</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>chkconfig foo on</td>\n<td>systemctl enable foo.service</td>\n<td>开机自动启动</td>\n</tr>\n<tr>\n<td>chkconfig foo off</td>\n<td>systemctl disable foo.service</td>\n<td>开机不自动启动</td>\n</tr>\n<tr>\n<td>chkconfig foo</td>\n<td>systemctl is-enabled foo.service</td>\n<td>查看特定服务是否为开机自启动</td>\n</tr>\n<tr>\n<td>chkconfig –list</td>\n<td>systemctl list-unit-files –type=service</td>\n<td>查看各个级别下服务的启动与禁用情况</td>\n</tr>\n</tbody>\n</table>\n","excerpt":"<ul>\n<li><p>linux开机启动服务目录:/etc/init.d</p>\n</li>\n<li><p>启动redis客户端:/usr/local/redis-3.2.4/src/redis-cli </p>\n</li>\n<li><p>Linux下剪切拷贝命令</p>\n</li>\n</ul>\n<p>命令格式: mv   source    dest</p>\n<p>mv: 命令字 source: 源文件 dest: 目的地址<br>","more":"</p>\n<ul>\n<li>Linux下拷贝命令</li>\n</ul>\n<p>命令格式：cp  [-rf]  source  dest</p>\n<p>使用备注：源文件在前，目标文件在后。</p>\n<p>参数说明：</p>\n<p>-r  若 source 中含有目录，则将目录下之档案亦皆依序拷贝至目的地。<br>-f  若目的地已经有相同档名的档案存在，则在复制前先予以删除再行复制。</p>\n<ul>\n<li>删除命令</li>\n</ul>\n<p>1、删除home目录下的test目录</p>\n<p> rm /home/test</p>\n<p>2、这种不带参数的删除方法经常会提示无法删除，因为权限不够。</p>\n<p> rm -r /home/test</p>\n<p>3、-r是递归的删除参数表中的目录及其子目录。 目录将被清空并且删除。 当删除目录包含的具有写保护的文件时用户通常是被提示的。</p>\n<p>rm -rf /home/test</p>\n<p>4、f是不提示用户，删除目录下的所有文件。请注意检查路径，输成别的目录就悲剧了。</p>\n<p> rm -ir /home/test</p>\n<p>5、-i是交互模式。使用这个选项，rm命令在删除任何文件前提示用户确认。</p>\n<p>6、tail -f xxxx.xxx 打开文件持续输出(看实时日志)</p>\n<ul>\n<li>Yum软件仓库</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>yum r…epolist all</td>\n<td>列出所有仓库。</td>\n</tr>\n<tr>\n<td>yum list all</td>\n<td>列出仓库中所有软件包</td>\n</tr>\n<tr>\n<td>yum info 软件包名称</td>\n<td>查看软件包信息</td>\n</tr>\n<tr>\n<td>yum install 软件包名称</td>\n<td>安装软件包</td>\n</tr>\n<tr>\n<td>yum reinstall 软件包名称</td>\n<td>重新安装软件包</td>\n</tr>\n<tr>\n<td>yum update 软件包名称</td>\n<td>升级软件包</td>\n</tr>\n<tr>\n<td>yum remove 软件包</td>\n<td>移除软件包</td>\n</tr>\n<tr>\n<td>yum clean all</td>\n<td>清除所有仓库缓存</td>\n</tr>\n<tr>\n<td>yum check-update</td>\n<td>检查可更新的软件包</td>\n</tr>\n<tr>\n<td>yum grouplist</td>\n<td>查看系统中已经安装的软件包组</td>\n</tr>\n<tr>\n<td>yum groupinstall 软件包组</td>\n<td>安装指定的软件包组</td>\n</tr>\n<tr>\n<td>yum groupremove软件包组</td>\n<td>移除指定的软件包组</td>\n</tr>\n<tr>\n<td>yum groupinfo 软件包组</td>\n<td>查询指定的软件包组信息</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>systemctl管理服务的启动、重启、停止、重载、查看状态的命令：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Sysvinit命令(红帽RHEL6系统)</th>\n<th>Systemctl命令（红帽RHEL7系统）</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>service foo start</td>\n<td>systemctl start foo.service</td>\n<td>启动服务</td>\n</tr>\n<tr>\n<td>service foo restart</td>\n<td>systemctl restart foo.service</td>\n<td>重启服务</td>\n</tr>\n<tr>\n<td>service foo stop</td>\n<td>systemctl stop foo.service</td>\n<td>停止服务</td>\n</tr>\n<tr>\n<td>service foo reload</td>\n<td>systemctl reload foo.service</td>\n<td>重新加载配置文件（不终止服务）</td>\n</tr>\n<tr>\n<td>service foo status</td>\n<td>systemctl status foo.service</td>\n<td>查看服务状态</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>systemctl设置服务的开机启动、不启动、查看各级别下服务启动状态的命令：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Sysvinit命令(红帽RHEL6系统)</th>\n<th>Systemctl命令（红帽RHEL7系统）</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>chkconfig foo on</td>\n<td>systemctl enable foo.service</td>\n<td>开机自动启动</td>\n</tr>\n<tr>\n<td>chkconfig foo off</td>\n<td>systemctl disable foo.service</td>\n<td>开机不自动启动</td>\n</tr>\n<tr>\n<td>chkconfig foo</td>\n<td>systemctl is-enabled foo.service</td>\n<td>查看特定服务是否为开机自启动</td>\n</tr>\n<tr>\n<td>chkconfig –list</td>\n<td>systemctl list-unit-files –type=service</td>\n<td>查看各个级别下服务的启动与禁用情况</td>\n</tr>\n</tbody>\n</table>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj4pc594b0008coqhnpjlmxtj","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc594l000dcoqhbx7jizfq"},{"post_id":"cj4pc593t0000coqhv9h2gprx","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc594q000icoqh4blediz0"},{"post_id":"cj4pc594f0009coqh2joy16ai","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc594t000lcoqhoqdb1ded"},{"post_id":"cj4pc594j000ccoqhv437mia4","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc594w000pcoqh0qcz5lim"},{"post_id":"cj4pc593z0002coqh35ihfisu","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc594y000scoqh0iqvhgz3"},{"post_id":"cj4pc594m000ecoqh6cd4acnb","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc5950000vcoqhc3g9ucwf"},{"post_id":"cj4pc594r000jcoqhu5dr1kg6","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc5953000zcoqhovf1erqj"},{"post_id":"cj4pc59480006coqhsfamjxrq","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc59550013coqhw3rytk1t"},{"post_id":"cj4pc594u000mcoqhd8myyz8r","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc59580016coqhibsj6lxp"},{"post_id":"cj4pc594w000qcoqhzdcos4jd","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc595a0018coqh9l75xgg0"},{"post_id":"cj4pc594z000tcoqhfboib5k5","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc595e001ccoqhzyprbc0t"},{"post_id":"cj4pc59580017coqhg9qix0jn","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc595h001fcoqhbh4plxe8"},{"post_id":"cj4pc5951000xcoqhhnwyg8lq","category_id":"cj4pc59550011coqho8nhqvwj","_id":"cj4pc595k001kcoqh8zbp1wrz"},{"post_id":"cj4pc595a0019coqhoxa63xjm","category_id":"cj4pc59550011coqho8nhqvwj","_id":"cj4pc595m001ncoqhfj2uqm13"},{"post_id":"cj4pc59530010coqhk5uznpyx","category_id":"cj4pc59550011coqho8nhqvwj","_id":"cj4pc595p001rcoqh4wxyupun"},{"post_id":"cj4pc595i001hcoqhqzrapmks","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc595q001tcoqhuem44k8k"},{"post_id":"cj4pc595l001lcoqhzhyc2k0q","category_id":"cj4pc59440004coqhl8hni5s7","_id":"cj4pc595r001ucoqhloru265q"},{"post_id":"cj4pc59560015coqh1aeft35p","category_id":"cj4pc595j001icoqh13uaed7d","_id":"cj4pc595r001wcoqh16bqcs1d"},{"post_id":"cj4pc595f001ecoqhd7leafur","category_id":"cj4pc595j001icoqh13uaed7d","_id":"cj4pc595s001xcoqhr0jivgs7"}],"PostTag":[{"post_id":"cj4pc594j000ccoqhv437mia4","tag_id":"cj4pc594g000bcoqhjtslpwvk","_id":"cj4pc594p000hcoqhqyvim2n0"},{"post_id":"cj4pc593t0000coqhv9h2gprx","tag_id":"cj4pc59470005coqhbhqpaqjc","_id":"cj4pc594s000kcoqh5shagg6t"},{"post_id":"cj4pc593t0000coqhv9h2gprx","tag_id":"cj4pc594g000bcoqhjtslpwvk","_id":"cj4pc594v000ocoqhzzhvtt1p"},{"post_id":"cj4pc593z0002coqh35ihfisu","tag_id":"cj4pc594p000gcoqhaznyvd4p","_id":"cj4pc594x000rcoqhwpqkij6n"},{"post_id":"cj4pc594u000mcoqhd8myyz8r","tag_id":"cj4pc59470005coqhbhqpaqjc","_id":"cj4pc5950000ucoqha267bpcs"},{"post_id":"cj4pc594u000mcoqhd8myyz8r","tag_id":"cj4pc594g000bcoqhjtslpwvk","_id":"cj4pc5952000ycoqh1b7axi1w"},{"post_id":"cj4pc59480006coqhsfamjxrq","tag_id":"cj4pc594v000ncoqhrnbkfsph","_id":"cj4pc59550012coqhs12ja8os"},{"post_id":"cj4pc594b0008coqhnpjlmxtj","tag_id":"cj4pc594g000bcoqhjtslpwvk","_id":"cj4pc595e001dcoqhvm0gvfqu"},{"post_id":"cj4pc594b0008coqhnpjlmxtj","tag_id":"cj4pc59560014coqhf7lm3brw","_id":"cj4pc595h001gcoqh5u58wypq"},{"post_id":"cj4pc594f0009coqh2joy16ai","tag_id":"cj4pc595c001bcoqhvfzzthpa","_id":"cj4pc595m001mcoqh9javj2iu"},{"post_id":"cj4pc595l001lcoqhzhyc2k0q","tag_id":"cj4pc595k001jcoqhq5bsijw3","_id":"cj4pc595p001qcoqht4mrn9mj"},{"post_id":"cj4pc594m000ecoqh6cd4acnb","tag_id":"cj4pc595k001jcoqhq5bsijw3","_id":"cj4pc595q001scoqhykjwjp0s"},{"post_id":"cj4pc594r000jcoqhu5dr1kg6","tag_id":"cj4pc595o001pcoqhw36hnhv5","_id":"cj4pc595t001zcoqhzihbz8fw"},{"post_id":"cj4pc594r000jcoqhu5dr1kg6","tag_id":"cj4pc595r001vcoqhjw2zfbah","_id":"cj4pc595t0020coqhao92u05k"},{"post_id":"cj4pc594w000qcoqhzdcos4jd","tag_id":"cj4pc594g000bcoqhjtslpwvk","_id":"cj4pc595u0022coqh335cjusx"},{"post_id":"cj4pc594w000qcoqhzdcos4jd","tag_id":"cj4pc595s001ycoqhfwgi3jxg","_id":"cj4pc595u0023coqhqzyw26tc"},{"post_id":"cj4pc594z000tcoqhfboib5k5","tag_id":"cj4pc594g000bcoqhjtslpwvk","_id":"cj4pc595v0025coqh3j8rofhc"},{"post_id":"cj4pc594z000tcoqhfboib5k5","tag_id":"cj4pc59470005coqhbhqpaqjc","_id":"cj4pc595v0026coqhc6bgak08"},{"post_id":"cj4pc594z000tcoqhfboib5k5","tag_id":"cj4pc595t0021coqhnqr6xq4i","_id":"cj4pc595w0028coqhqgqaslkr"},{"post_id":"cj4pc5951000xcoqhhnwyg8lq","tag_id":"cj4pc595u0024coqh3kyhxp7d","_id":"cj4pc595w0029coqhuxcyn3i8"},{"post_id":"cj4pc59530010coqhk5uznpyx","tag_id":"cj4pc595u0024coqh3kyhxp7d","_id":"cj4pc595x002bcoqh1i48p06c"},{"post_id":"cj4pc59560015coqh1aeft35p","tag_id":"cj4pc595x002acoqh6eu662hj","_id":"cj4pc595z002dcoqhscy7w5us"},{"post_id":"cj4pc59580017coqhg9qix0jn","tag_id":"cj4pc594g000bcoqhjtslpwvk","_id":"cj4pc5960002fcoqh8x7u96n5"},{"post_id":"cj4pc59580017coqhg9qix0jn","tag_id":"cj4pc595y002ccoqhgjsjbenl","_id":"cj4pc5960002gcoqhf4e7lwq4"},{"post_id":"cj4pc595a0019coqhoxa63xjm","tag_id":"cj4pc595z002ecoqha34oldte","_id":"cj4pc5961002icoqhwp1qflic"},{"post_id":"cj4pc595f001ecoqhd7leafur","tag_id":"cj4pc595x002acoqh6eu662hj","_id":"cj4pc5962002kcoqh7ks900dj"},{"post_id":"cj4pc595i001hcoqhqzrapmks","tag_id":"cj4pc5961002jcoqhp7q48f3l","_id":"cj4pc5964002lcoqhe8py3qx8"}],"Tag":[{"name":"spring","_id":"cj4pc59470005coqhbhqpaqjc"},{"name":"java","_id":"cj4pc594g000bcoqhjtslpwvk"},{"name":"gtunt","_id":"cj4pc594p000gcoqhaznyvd4p"},{"name":"eclipse","_id":"cj4pc594v000ncoqhrnbkfsph"},{"name":"线程池","_id":"cj4pc59560014coqhf7lm3brw"},{"name":"hexo","_id":"cj4pc595c001bcoqhvfzzthpa"},{"name":"linux","_id":"cj4pc595k001jcoqhq5bsijw3"},{"name":"mongodb","_id":"cj4pc595o001pcoqhw36hnhv5"},{"name":"nosql","_id":"cj4pc595r001vcoqhjw2zfbah"},{"name":"spring data jpa","_id":"cj4pc595s001ycoqhfwgi3jxg"},{"name":"事务","_id":"cj4pc595t0021coqhnqr6xq4i"},{"name":"现代诗","_id":"cj4pc595u0024coqh3kyhxp7d"},{"name":"其他","_id":"cj4pc595x002acoqh6eu662hj"},{"name":"反射","_id":"cj4pc595y002ccoqhgjsjbenl"},{"name":"古诗词","_id":"cj4pc595z002ecoqha34oldte"},{"name":"Lucene","_id":"cj4pc5961002jcoqhp7q48f3l"}]}}